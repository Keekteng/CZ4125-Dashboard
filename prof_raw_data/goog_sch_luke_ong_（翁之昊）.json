{"goog_sch_url": "https://scholar.google.com/citations?hl=en&user=gNFel3QAAAAJ", "name": "Luke Ong \uff08\u7fc1\u4e4b\u660a\uff09", "interests": ["Bayesian Statistical Probabilistic Programming", "Semantics of Computation", "Automated Verification", "Programming Languages", "Logic a"], "co_authors_url": [{"name": "Andrzej Murawski", "url": "https://scholar.google.com/citations?hl=en&user=HrYQlZwAAAAJ", "aff": "University of Oxford"}, {"name": "Martin Hyland", "url": "https://scholar.google.com/citations?hl=en&user=GbtoA1wAAAAJ", "aff": "Professor of Mathematical Logic, Cambridge"}, {"name": "Matthew Hague", "url": "https://scholar.google.com/citations?hl=en&user=s37BfYAAAAAJ", "aff": "Royal Holloway, University of London"}, {"name": "Olivier Serre", "url": "https://scholar.google.com/citations?hl=en&user=eEKba1YAAAAJ", "aff": "IRIF (Universit\u00e9 de Paris & CNRS)"}, {"name": "Dan R. Ghica", "url": "https://scholar.google.com/citations?hl=en&user=nkaLcCAAAAAJ", "aff": "Professor of Semantics of Programming Languages, University of Birmingham"}, {"name": "Jonathan Kochems", "url": "https://scholar.google.com/citations?hl=en&user=39qMYp8AAAAJ", "aff": "University of Oxford"}, {"name": "Takeshi Tsukada", "url": "https://scholar.google.com/citations?hl=en&user=pmynGcgAAAAJ", "aff": "Chiba University"}, {"name": "Emanuele D'Osualdo", "url": "https://scholar.google.com/citations?hl=en&user=xH4XRWIAAAAJ", "aff": "MPI-SWS"}, {"name": "Naoki Kobayashi", "url": "https://scholar.google.com/citations?hl=en&user=bhZQ7FEAAAAJ", "aff": "The University of Tokyo"}, {"name": "Bruce Shepherd", "url": "https://scholar.google.com/citations?hl=en&user=x2Mfyz8AAAAJ", "aff": "University of British Columbia"}, {"name": "Gordon Wilfong", "url": "https://scholar.google.com/citations?hl=en&user=7yFiCrkAAAAJ", "aff": "Bell Labs"}, {"name": "Arnaud Carayol", "url": "https://scholar.google.com/citations?hl=en&user=9dydnnsAAAAJ", "aff": "CNRS & Universit\u00e9 Paris Est"}, {"name": "Andrew D. Ker", "url": "https://scholar.google.com/citations?hl=en&user=9fTPyU0AAAAJ", "aff": "Associate Professor of Computer Science, Oxford University"}, {"name": "Dominik Wagner", "url": "https://scholar.google.com/citations?hl=en&user=jG5uOYYAAAAJ", "aff": "PhD student in Computer Science, University of Oxford"}, {"name": "Ian Stark", "url": "https://scholar.google.com/citations?hl=en&user=_WljoL8AAAAJ", "aff": "Laboratory for Foundations of Computer Science, School of Informatics, University of\u00a0\u2026"}, {"name": "William Blum", "url": "https://scholar.google.com/citations?hl=en&user=I4pa4u8AAAAJ", "aff": "Microsoft"}, {"name": "C Stewart", "url": "https://scholar.google.com/citations?hl=en&user=TsYu19gAAAAJ", "aff": "Independent"}, {"name": "Carol Mak", "url": "https://scholar.google.com/citations?hl=en&user=lAdlJmkAAAAJ", "aff": "University of Oxford"}, {"name": "Fabian Zaiser", "url": "https://scholar.google.com/citations?hl=en&user=Zit-MBEAAAAJ", "aff": "University of Oxford"}, {"name": "Kazuyuki Asada", "url": "https://scholar.google.com/citations?hl=en&user=CaWtDmwAAAAJ", "aff": "Tohoku University"}, {"name": "Zhenhua Duan", "url": "https://scholar.google.com/citations?hl=en&user=LPUXP1QAAAAJ", "aff": "Professor of Computer Science, Xidian University, China"}, {"name": "Igor Walukiewicz", "url": "https://scholar.google.com/citations?hl=en&user=sq7cNakAAAAJ", "aff": "CNRS, LaBRI, Bordeaux University"}, {"name": "Antoine Meyer", "url": "https://scholar.google.com/citations?hl=en&user=98lpsdUAAAAJ", "aff": "Universit\u00e9 Gustave Eiffel"}, {"name": "Cong Tian", "url": "https://scholar.google.com/citations?hl=en&user=skrocFAAAAAJ", "aff": "Xidian University"}, {"name": "Matthijs V\u00e1k\u00e1r", "url": "https://scholar.google.com/citations?hl=en&user=aN1dMvMAAAAJ", "aff": "Assistant Professor, Utrecht University"}, {"name": "Michael Peyton Jones", "url": "https://scholar.google.com/citations?hl=en&user=2FUj1YQAAAAJ", "aff": "IOHK"}, {"name": "Alwen Tiu", "url": "https://scholar.google.com/citations?hl=en&user=92pa9z8AAAAJ", "aff": "School of Computing, The Australian National University"}, {"name": "Pietro Di Gianantonio", "url": "https://scholar.google.com/citations?hl=en&user=UgVEXmgAAAAJ", "aff": "Universit\u00e0 di Udine"}, {"name": "Anthony Widjaja Lin", "url": "https://scholar.google.com/citations?hl=en&user=__5nnYUAAAAJ", "aff": "Professor@TU Kaiserslautern, Max-Planck Fellow at Max-Planck Institute for Software\u00a0\u2026"}, {"name": "Rolf Morel", "url": "https://scholar.google.com/citations?hl=en&user=KiCL7SoAAAAJ", "aff": "Universtity of Oxford"}, {"name": "Andrew Cropper", "url": "https://scholar.google.com/citations?hl=en&user=AtZc544AAAAJ", "aff": "University of Oxford"}, {"name": "Nikos Tzevelekos", "url": "https://scholar.google.com/citations?hl=en&user=OsFtuawAAAAJ", "aff": "Queen Mary, University of London"}, {"name": "Eike Ritter", "url": "https://scholar.google.com/citations?hl=en&user=01QHHq4AAAAJ", "aff": "Senior Lecturer in Computer Science, University of Birmingham, UK"}, {"name": "Max Schaefer", "url": "https://scholar.google.com/citations?hl=en&user=0SsEudwAAAAJ", "aff": "GitHub"}, {"name": "Long Pham", "url": "https://scholar.google.com/citations?hl=en&user=yW4GSmoAAAAJ", "aff": "Carnegie Mellon University"}], "citation_table": {"columns": ["All", "Since 2018"], "Citations": [5940, 1374], "h-index": [34, 18], "i10-index": [83, 33]}, "citation_graph": {"1992": 33, "1993": 56, "1994": 68, "1995": 109, "1996": 103, "1997": 103, "1998": 98, "1999": 106, "2000": 78, "2001": 77, "2002": 114, "2003": 123, "2004": 161, "2005": 161, "2006": 184, "2007": 216, "2008": 197, "2009": 272, "2010": 212, "2011": 221, "2012": 275, "2013": 246, "2014": 288, "2015": 303, "2016": 282, "2017": 320, "2018": 210, "2019": 255, "2020": 244, "2021": 261, "2022": 188, "2023": 214}, "articles": [{"title": "Full abstraction in the lazy lambda calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:u-x6o8ySG0sC", "authors": ["Samson Abramsky", "C-H Luke Ong"], "publication_date": "1993/8/1", "journal": "Information and Computation", "description": "A theory of lazy \u03bb-calculus is developed as a basis for lazy functional programming languages. This is motivated by a mismatch between the \"standard\" (i.e., sensible) theory of the classical \u03bb-calculus and the practice of lazy functional programming. Part I sets up the fundamentals of the lazy \u03bb-calculus starting from the pure lazy language \u03bbl. We develop the rudiments of weakly sensible \u03bb-theory and characterize \u03bbl as the maximal such theory. The axiomatic framework of our theory is based on the notion of applicative transition systems which gives rise to lazy \u03bb-models. The subclass of lazy \u03bb-models which are operationally extensional are called lambda transition systems (lts\u2032s). The canonical model of the lazy \u03bb-calculus is the initial solution to the domain equation D \u2245 [D \u2192 D]\u22a5. We set up the domain logic corresponding to the same type expression. In part II, we recast the full abstraction problem in the lazy \u03bb \u2026", "total_citations": 951, "citation_graph": {"1992": 23, "1993": 36, "1994": 39, "1995": 62, "1996": 48, "1997": 40, "1998": 49, "1999": 28, "2000": 23, "2001": 28, "2002": 35, "2003": 23, "2004": 27, "2005": 17, "2006": 28, "2007": 41, "2008": 23, "2009": 32, "2010": 25, "2011": 19, "2012": 29, "2013": 15, "2014": 30, "2015": 31, "2016": 16, "2017": 26, "2018": 13, "2019": 31, "2020": 19, "2021": 12, "2022": 20, "2023": 18}}, {"title": "On full abstraction for PCF: I, II, and III", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:u5HHmVD_uO8C", "authors": ["J Martin E Hyland", "C-H Luke Ong"], "publication_date": "2000/12/15", "journal": "Information and computation", "description": "We present an order-extensional, order (or inequationally) fully abstract model for Scott's language pcf . The approach we have taken is very concrete and in nature goes back to S. C Kleene (1978, in \u201cGeneral Recursion Theory II, Proceedings of the 1977 Oslo Symposium,\u201d North-Holland, Amsterdam) and R. O. Gandy (1993, \u201cDialogues, Blass Games, Sequentiality for Objects of Finite Type,\u201d unpublished manuscript) in one tradition, and to G. Kahn and G. D. Plotkin (1993, Theoret. Comput. Sci.121, 187\u2013278) and G. Berry and P.-L. Curien (1982, Theoret. Comput. Sci.20, 265\u2013321) in another. Our model of computation is based on a kind of game in which each play consists of a dialogue of questions and answers between two players who observe the following principles of civil conversation: 1.Justification. A question is asked only if the dialogue at that point warrants it. An answer is proffered only if a question \u2026", "total_citations": 941, "citation_graph": {"1995": 3, "1996": 15, "1997": 16, "1998": 11, "1999": 18, "2000": 15, "2001": 13, "2002": 27, "2003": 33, "2004": 42, "2005": 38, "2006": 36, "2007": 40, "2008": 46, "2009": 49, "2010": 33, "2011": 34, "2012": 39, "2013": 40, "2014": 47, "2015": 48, "2016": 47, "2017": 46, "2018": 29, "2019": 36, "2020": 31, "2021": 30, "2022": 25, "2023": 39}}, {"title": "On model-checking trees generated by higher-order recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:UeHWp8X0CEIC", "authors": ["C-HL Ong"], "publication_date": "2006/8/12", "conference": "21st Annual IEEE Symposium on Logic in Computer Science (LICS'06)", "description": "We prove that the modal mu-calculus model-checking problem for (ranked and ordered) node-labelled trees that are generated by order-n recursion schemes (whether safe or not, and whether homogeneously typed or not) is n-EXPTIME complete, for every nges0. It follows that the monadic second-order theories of these trees are decidable. There are three major ingredients. The first is a certain transference principle from the tree generated by the scheme - the value tree - to an auxiliary computation tree, which is itself a tree generated by a related order-0 recursion scheme (equivalently, a regular tree). Using innocent game semantics in the sense of Hyland and Ong, we establish a strong correspondence between paths in the value tree and traversals in the computation tree. This allows us to prove that a given alternating parity tree automaton (APT) has an (accepting) run-tree over the value tree iff it has an \u2026", "total_citations": 316, "citation_graph": {"2006": 7, "2007": 11, "2008": 7, "2009": 18, "2010": 19, "2011": 16, "2012": 21, "2013": 18, "2014": 23, "2015": 28, "2016": 27, "2017": 27, "2018": 15, "2019": 18, "2020": 20, "2021": 19, "2022": 10, "2023": 9}}, {"title": "A Curry-Howard foundation for functional computation with control", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:d1gkVwhDpl0C", "authors": ["C-HL Ong", "Charles A Stewart"], "publication_date": "1997/1/1", "book": "Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages", "description": "We introduce the type theory \u03bb\u03bcv, a call-by-value variant of Parigot's \u03bb\u03bc-calculus, as a Curry-Howard representation theory of classical propositional proofs. The associated rewrite system is Church-Rosser and strongly normalizing, and definitional equality of the type theory is consistent, compatible with cut, congruent and decidable. The attendant call-by-value programming language \u03bcPCFv is obtained from \u03bb\u03bcv by augmenting it by basic arithmetic, conditionals and fixpoints. We study the behavioural properties of \u03bcPCFv and show that, though simple, it is a very general language for functional computation with control: it can express all the main control constructs such as exceptions and first-class continuations. Proof-theoretically the dual \u03bb\u03bcv-constructs of naming and \u03bc-abstraction witness the introduction and elimination rules of absurdity respectively. Computationally they give succinct expression to a kind of \u2026", "total_citations": 192, "citation_graph": {"1997": 8, "1998": 5, "1999": 12, "2000": 13, "2001": 6, "2002": 11, "2003": 6, "2004": 7, "2005": 15, "2006": 8, "2007": 18, "2008": 9, "2009": 11, "2010": 5, "2011": 8, "2012": 4, "2013": 7, "2014": 9, "2015": 7, "2016": 5, "2017": 1, "2018": 3, "2019": 3, "2020": 1, "2021": 4, "2022": 1, "2023": 3}}, {"title": "Route oscillations in I-BGP with route reflection", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:9yKSN-GCB0IC", "authors": ["Anindya Basu", "Chih-Hao Luke Ong", "April Rasala", "F Bruce Shepherd", "Gordon Wilfong"], "publication_date": "2002/10/1", "journal": "ACM SIGCOMM Computer Communication Review", "description": "We study the route oscillation problem [16, 19] in the Internal Border Gateway Protocol (I-BGP)[18] when route reflection is used. We propose a formal model of I-BGP and use it to show that even deciding whether an I-BGP configuration with route reflection can converge is an NP-Complete problem. We then propose a modification to I-BGP and show that route reflection cannot cause the modified protocol to diverge. Moreover, we show that the modified protocol converges to the same stable routing configuration regardless of the order in which messages are sent or received.", "total_citations": 178, "citation_graph": {"2001": 2, "2002": 3, "2003": 9, "2004": 22, "2005": 23, "2006": 14, "2007": 12, "2008": 12, "2009": 12, "2010": 13, "2011": 19, "2012": 7, "2013": 3, "2014": 2, "2015": 1, "2016": 6, "2017": 1, "2018": 1, "2019": 2, "2020": 1, "2021": 3, "2022": 5}}, {"title": "A type system equivalent to the modal mu-calculus model checking of higher-order recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:roLk4NBRz8UC", "authors": ["Naoki Kobayashi", "C-H Luke Ong"], "publication_date": "2009/8/11", "conference": "2009 24th Annual IEEE Symposium on Logic In Computer Science", "description": "The model checking of higher-order recursion schemes has important applications in the verification of higher-order programs. Ong has previously shown that the modal mu-calculus model checking of trees generated by order-n recursion scheme is n-EXPTIME complete, but his algorithm and its correctness proof were rather complex. We give an alternative, type-based verification method: Given a modal mu-calculus formula, we can construct a type system in which a recursion scheme is typable if, and only if, the (possibly infinite, ranked) tree generated by the scheme satisfies the formula. The model checking problem is thus reduced to a type checking problem. Our type-based approach yields a simple verification algorithm, and its correctness proof (constructed without recourse to game semantics) is comparatively easy to understand. Furthermore, the algorithm is polynomial-time in the size of the recursion \u2026", "total_citations": 170, "citation_graph": {"2009": 5, "2010": 7, "2011": 10, "2012": 15, "2013": 10, "2014": 22, "2015": 16, "2016": 14, "2017": 20, "2018": 7, "2019": 9, "2020": 12, "2021": 10, "2022": 4, "2023": 7}}, {"title": "Collapsible pushdown automata and recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:eQOLeE2rZwMC", "authors": ["Matthew Hague", "Andrzej S Murawski", "C-HL Ong", "Olivier Serre"], "publication_date": "2008/6/24", "conference": "2008 23rd Annual IEEE Symposium on Logic in Computer Science", "description": "Collapsible pushdown automata (CPDA) are a new kind of higher-order pushdown automata in which every symbol in the stack has a link to a stack situated somewhere below it. In addition to the higher-order push and pop operations, CPDA have an important operation called collapse, whose effect is to \"collapse\" a stack s to the prefix as indicated by the link from the topmost symbol of s. Our first result is that CPDA are equi-expressive with recursion schemes as generators of (possibly infinite) ranked trees. In one direction, we give a simple algorithm that transforms an order-n CPDA to an order-n recursion scheme that generates the same tree, uniformly for all n Gt= 0. In the other direction, using ideas from game semantics, we give an effective transformation of order-n recursion schemes (not assumed to be homogeneously typed, and hence not necessarily safe) to order-n CPDA that compute traversals over an \u2026", "total_citations": 164, "citation_graph": {"2007": 1, "2008": 4, "2009": 11, "2010": 7, "2011": 8, "2012": 25, "2013": 16, "2014": 12, "2015": 15, "2016": 11, "2017": 13, "2018": 10, "2019": 4, "2020": 8, "2021": 6, "2022": 5, "2023": 6}}, {"title": "Verifying higher-order functional programs with pattern-matching algebraic data types", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:4TOpqqG69KYC", "authors": ["C-H Luke Ong", "Steven James Ramsay"], "publication_date": "2011/1/26", "conference": "Proceedings ACM POPL SIGPLAN Notices", "description": "Type-based model checking algorithms for higher-order recursion schemes have recently emerged as a promising approach to the verification of functional programs. We introduce pattern-matching recursion schemes (PMRS) as an accurate model of computation for functional programs that manipulate algebraic data-types. PMRS are a natural extension of higher-order recursion schemes that incorporate pattern-matching in the defining rules.\nThis paper is concerned with the following (undecidable) verification problem: given a correctness property \u03c6, a functional program \u2118 (qua PMRS) and a regular input set \u2111, does every term that is reachable from \u2111 under rewriting by \u2118 satisfy \u03c6? To solve the PMRS verification problem, we present a sound semi-algorithm which is based on model-checking and counterexample guided abstraction refinement. Given a no-instance of the verification problem, the method is \u2026", "total_citations": 135, "citation_graph": {"2011": 11, "2012": 12, "2013": 17, "2014": 15, "2015": 17, "2016": 11, "2017": 17, "2018": 6, "2019": 8, "2020": 7, "2021": 4, "2022": 6, "2023": 3}}, {"title": "Verifying Higher-Order Functional Programs with Pattern Matching Algebraic Data Types", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:f2IySw72cVMC", "authors": ["C-H Luke Ong", "Steven Ramsay"], "publication_date": "2011", "description": "Type-based model checking algorithms for higher-order recursion schemes have recently emerged as a promising approach to the verification of functional programs. We introduce pattern-matching recursion schemes (PMRS) as an accurate model of computation for functional programs that manipulate algebraic data-types. PMRS are a natural extension of higher-order recursion schemes that incorporate pattern-matching in the defining rules.\nThis paper is concerned with the following (undecidable) verification problem: given a correctness property \u03c6, a functional program \u2118 (qua PMRS) and a regular input set \u2111, does every term that is reachable from \u2111 under rewriting by \u2118 satisfy \u03c6? To solve the PMRS verification problem, we present a sound semi-algorithm which is based on model-checking and counterexample guided abstraction refinement. Given a no-instance of the verification problem, the method is \u2026", "total_citations": 135, "citation_graph": {"2011": 11, "2012": 12, "2013": 17, "2014": 15, "2015": 17, "2016": 11, "2017": 17, "2018": 6, "2019": 8, "2020": 7, "2021": 4, "2022": 6, "2023": 3}}, {"title": "The lazy lambda calculus: an investigation into the foundations of functional programming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:2osOgNQ5qMEC", "authors": ["C-H Luke Ong"], "publication_date": "1992/6", "description": "The commonly accepted basis for functional programming is the A-calculus; and it is folklore that A-calculus is the prototypical functional language in puri fied form. There is, nonetheless, a fundamental mismatch between theory and practice:", "total_citations": 104, "citation_graph": {"1991": 5, "1992": 5, "1993": 8, "1994": 8, "1995": 18, "1996": 10, "1997": 3, "1998": 5, "1999": 7, "2000": 0, "2001": 1, "2002": 1, "2003": 1, "2004": 0, "2005": 2, "2006": 2, "2007": 6, "2008": 1, "2009": 2, "2010": 1, "2011": 1, "2012": 3, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 1, "2018": 0, "2019": 2, "2020": 0, "2021": 0, "2022": 2, "2023": 1}}, {"title": "A semantic view of classical proofs: Type-theoretic, categorical, and denotational characterizations", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:qjMakFHDy7sC", "authors": ["C-HL Ong"], "publication_date": "1996/7/27", "conference": "Proceedings 11th Annual IEEE Symposium on Logic in Computer Science", "description": "Classical logic is one of the best examples of a mathematical theory that is truly useful to computer science. Hardware and software engineers apply the theory routinely. Yet from a foundational standpoint, there are aspects of classical logic that are problematic. Unlike intuitionistic logic, classical logic is often held to be non-constructive, and so, is said to admit no proof semantics. To draw an analogy in the proofs-as-programs paradigm, it is as if we understand well the theory of manipulation between equivalent specifications (which we do), but have comparatively little foundational insight of the process of transforming one program to another that implements the same specification. This extended abstract outlines a semantic theory of classical proofs based on a variant of Parigot's /spl lambda//spl mu/-calculus, but presented here as a type theory. After reviewing the conceptual problems in the area and the potential \u2026", "total_citations": 102, "citation_graph": {"1996": 6, "1997": 14, "1998": 7, "1999": 7, "2000": 2, "2001": 4, "2002": 4, "2003": 3, "2004": 4, "2005": 4, "2006": 6, "2007": 7, "2008": 7, "2009": 5, "2010": 3, "2011": 4, "2012": 5, "2013": 3, "2014": 3, "2015": 2, "2016": 0, "2017": 0, "2018": 1, "2019": 1}}, {"title": "Nominal games and full abstraction for the nu-calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:YsMSGLbcyi4C", "authors": ["Samson Abramsky", "Dan R Ghica", "Andrzej S Murawski", "C-HL Ong", "Ian David Bede Stark"], "publication_date": "2004/7/17", "conference": "Proceedings of the 19th Annual IEEE Symposium on Logic in Computer Science, 2004.", "description": "We introduce nominal games for modelling programming languages with dynamically generated local names, as exemplified by Pitts and Stark's nu-calculus. Inspired by Pitts and Gabbay's recent work on nominal sets, we construct arenas and strategies in the world (or topos) of Fraenkel-Mostowski sets (or simply FM-sets). We fix an infinite set N of names to be the \"atoms\" of the FM-theory, and interpret the type v of names as the flat arena whose move-set is N. This approach leads to a clean and precise treatment of fresh names and standard game constructions (such as plays, views, innocent strategies, etc.) that are considered invariant under renaming. The main result is the construction of the first fully-abstract model for the nu-calculus.", "total_citations": 99, "citation_graph": {"2004": 2, "2005": 5, "2006": 6, "2007": 7, "2008": 7, "2009": 6, "2010": 8, "2011": 7, "2012": 5, "2013": 4, "2014": 9, "2015": 4, "2016": 9, "2017": 1, "2018": 4, "2019": 1, "2020": 3, "2021": 5, "2022": 2, "2023": 2}}, {"title": "Applying game semantics to compositional software modeling and verification", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:zYLM7Y9cAGgC", "authors": ["Samson Abramsky", "Dan R Ghica", "Andrzej S Murawski", "C-H Luke Ong"], "publication_date": "2004/3/29", "book": "International Conference on Tools and Algorithms for the Construction and Analysis of Systems", "description": "We describe a software model checking tool founded on game semantics, highlight the underpinning theoretical results and discuss several case studies. The tool is based on an interpretation algorithm defined compositionally on syntax and thus can also handle open programs. Moreover, the models it produces are equationally fully abstract. These features are essential in the modeling and verification of software components such as modules and turn out to lead to very compact models of programs.", "total_citations": 98, "citation_graph": {"2004": 4, "2005": 9, "2006": 10, "2007": 11, "2008": 10, "2009": 12, "2010": 3, "2011": 8, "2012": 5, "2013": 2, "2014": 5, "2015": 3, "2016": 5, "2017": 2, "2018": 1, "2019": 1, "2020": 2, "2021": 1, "2022": 1, "2023": 1}}, {"title": "Correspondence between operational and denotational semantics: the full abstraction problem for PCF", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:W7OEmFMy1HYC", "authors": ["C-H Luke Ong"], "publication_date": "1995/6/15", "journal": "Handbook of logic in computer science", "description": "This chapter concerns the relationship between operational semantics and denotational semantics of higher-type sequential functional programming languages. We choose Scott's language pcf as the vehicle for developing the leading ideas and focus on a line of research inspired by the full abstraction problem for pcf.", "total_citations": 85, "citation_graph": {"1995": 4, "1996": 2, "1997": 3, "1998": 2, "1999": 6, "2000": 2, "2001": 0, "2002": 3, "2003": 9, "2004": 4, "2005": 2, "2006": 7, "2007": 2, "2008": 4, "2009": 3, "2010": 2, "2011": 2, "2012": 2, "2013": 2, "2014": 1, "2015": 4, "2016": 2, "2017": 1, "2018": 3, "2019": 2, "2020": 1, "2021": 3, "2022": 2, "2023": 2}}, {"title": "Non-determinism in a functional setting", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:Tyk-4Ss8FVUC", "authors": ["C-HL Ong"], "publication_date": "1993/6/19", "conference": "[1993] Proceedings Eighth Annual IEEE Symposium on Logic in Computer Science", "description": "The pure untyped lambda calculus augmented with an (erratic) choice operator is considered as an idealised nondeterministic functional language. Both the 'may' and the 'must' modalities of convergence are of interest. Following Abramsky's (1991) work on domain theory in logical form, we identify the denotational type that captures the computational situation delta =P(( delta to delta ) perpendicular to ), where P(-) is the Plotkin power-domain functor. We then carry out a systematic programme that hinges on three distinct interpretations of delta , namely process-theoretic, denotational, and logical. The main theme of the programme is the complementarity of the various interpretations of delta . This work may be seen as a step towards a rapprochement between the algebraic theory of processes in concurrency on the one hand, and the lazy lambda calculus as a foundation for functional programming on the other.< >", "total_citations": 85, "citation_graph": {"1993": 1, "1994": 7, "1995": 7, "1996": 1, "1997": 3, "1998": 4, "1999": 5, "2000": 1, "2001": 1, "2002": 2, "2003": 2, "2004": 3, "2005": 2, "2006": 1, "2007": 2, "2008": 3, "2009": 7, "2010": 4, "2011": 0, "2012": 1, "2013": 4, "2014": 6, "2015": 1, "2016": 1, "2017": 4, "2018": 0, "2019": 3, "2020": 3, "2021": 2, "2022": 3, "2023": 1}}, {"title": "Automatic verification of Erlang-style concurrency", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:OU6Ihb5iCvQC", "authors": ["Emanuele D\u2019Osualdo", "Jonathan Kochems", "C -H Luke Ong"], "publication_date": "2013", "conference": "Static Analysis: 20th International Symposium, SAS 2013, Seattle, WA, USA, June 20-22, 2013. Proceedings 20", "description": "This paper presents an approach to verify safety properties of Erlang-style, higher-order concurrent programs automatically. Inspired by Core Erlang, we introduce \u03bb Actor, a prototypical functional language with pattern-matching algebraic data types, augmented with process creation and asynchronous message-passing primitives. We formalise an abstract model of \u03bb Actor programs called Actor Communicating System (ACS) which has a natural interpretation as a vector addition system, for which some verification problems are decidable. We give a parametric abstract interpretation framework for \u03bb Actor and use it to build a polytime computable, flow-based, abstract semantics of \u03bb Actor programs, which we then use to bootstrap the ACS construction, thus deriving a more accurate abstract model of the input program.\nWe evaluate the method which we implemented in the \u2026", "total_citations": 81, "citation_graph": {"2012": 1, "2013": 4, "2014": 6, "2015": 6, "2016": 8, "2017": 13, "2018": 10, "2019": 14, "2020": 7, "2021": 3, "2022": 4, "2023": 5}}, {"title": "Pi-calculus, dialogue games and full abstraction PCF", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:IjCSPb-OGe4C", "authors": ["J Martin E Hyland", "C-HL Ong"], "publication_date": "1995/10/1", "book": "Proceedings of the seventh international conference on Functional programming languages and computer architecture", "description": "Game semantics is an unusual denotational semantics in that it captures the intentional(or algorithmic) and dynamical aspects of the computation. This makes it an ideal semantical framework in which to seek to unify analyses of both the qualitative(correctness) as well as the quantitative (efficiency) properties of programming languages. This paper reports work arising from a recent construction of an order (or inequationall y) fully abstract model for Scott\u2018s functional programming language PCF based on a kind of two-person (Player and Opponent) dialogue game of questions and answers [H094]. In this model types are interpreted asgames and terms asinnocent strategies. The fully abstract game model may be said to be canonical for the semantical analysis of sequential functional languages. Unfortunately even for relatively simple PCF-terms, precise description of their denotations as strategies in [H094] very \u2026", "total_citations": 80, "citation_graph": {"1995": 1, "1996": 7, "1997": 2, "1998": 2, "1999": 7, "2000": 5, "2001": 1, "2002": 5, "2003": 2, "2004": 3, "2005": 1, "2006": 2, "2007": 5, "2008": 3, "2009": 5, "2010": 4, "2011": 2, "2012": 3, "2013": 2, "2014": 1, "2015": 2, "2016": 2, "2017": 1, "2018": 1, "2019": 2, "2020": 4, "2021": 0, "2022": 2, "2023": 1}}, {"title": "Fair games and full completeness for multiplicative linear logic without the mix-rule", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:Y0pCki6q_DkC", "authors": ["J Martin E Hyland", "C-H Luke Ong"], "publication_date": "1993/7/22", "journal": "preprint", "description": "We introduce a new category of finite, fair games, and winning strategies, and use it to provide a semantics for the multiplicative fragment of Linear Logic (mll) in which formulae are interpreted as games, and proofs as winning strategies. This interpretation provides a categorical model of MLL which satisfies the property that every (history-free, uniformly) winning strategy is the denotation of a unique cut-free proof net. Abramsky and Jagadeesan first proved a result of this kind and they refer to this property as full completeness. Our result differs from theirs in one important aspect: the Mix-rule, which is not part of Girard's Linear Logic, is invalidated in our model. We achieve this sharper characterization by considering fair games. A finite, fair game is specified by the following data:\n\u2022 moves which Player can play,\u2022 moves which Opponent can play, and\u2022 a collection of finite sequences of maximal (or terminal) positions of \u2026", "total_citations": 79, "citation_graph": {"1993": 2, "1994": 2, "1995": 1, "1996": 2, "1997": 7, "1998": 1, "1999": 4, "2000": 4, "2001": 2, "2002": 2, "2003": 7, "2004": 4, "2005": 4, "2006": 4, "2007": 1, "2008": 5, "2009": 6, "2010": 2, "2011": 2, "2012": 1, "2013": 2, "2014": 4, "2015": 3, "2016": 0, "2017": 2, "2018": 1, "2019": 2, "2020": 0, "2021": 0, "2022": 0, "2023": 2}}, {"title": "Method and apparatus for exchanging routing information within an autonomous system in a packet-based data network", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:_kc_bZDykSQC", "publication_date": "2007/2/20", "description": "A method for exchanging routing information between I-BGP routers within an autonomous system (AS) advantageously enables a solution to both persistent route oscillation problems and transient route oscillation problems which may occur when using I-BGP in a given AS. Conventional I-BGP protocol techniques are extended by enabling I-BGP speakers (eg, routers) to communicate a set of possible best paths to a given destination, rather than communicating only a single best path, to each of their I-BGP peers within the given AS. Specifically, a plurality of possible best paths to a destination are communicated (where there are in fact more than one) from an I-BGP speaker in a given AS to its I-BGP peers (within the given AS), for each neighboring AS that provides any such paths (ie, routes to the destination).", "total_citations": 71, "citation_graph": {"2006": 3, "2007": 3, "2008": 4, "2009": 2, "2010": 8, "2011": 10, "2012": 5, "2013": 4, "2014": 6, "2015": 6, "2016": 6, "2017": 2, "2018": 2, "2019": 1, "2020": 1, "2021": 0, "2022": 3, "2023": 1}}, {"title": "A type-directed abstraction refinement approach to higher-order model checking", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:WA5NYHcadZ8C", "authors": ["Steven J Ramsay", "Robin P Neatherway", "C-H Luke Ong"], "publication_date": "2014/1/8", "book": "Proceedings of the 41st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages", "description": "The trivial-automaton model checking problem for higher-order recursion schemes has become a widely studied object in connection with the automatic verification of higher-order programs. The problem is formidably hard: despite considerable progress in recent years, no decision procedures have been demonstrated to scale robustly beyond recursion schemes that comprise more than a few hundred rewrite rules. We present a new, fixed-parameter polynomial time algorithm, based on a novel, type directed form of abstraction refinement in which behaviours of a scheme are distinguished by the abstraction according to the intersection types that they inhabit (the properties that they satisfy). Unlike other intersection type approaches, our algorithm reasons both about acceptance by the property automaton and acceptance by its dual, simultaneously, in order to minimize the amount of work done by converging on \u2026", "total_citations": 69, "citation_graph": {"2013": 1, "2014": 7, "2015": 11, "2016": 7, "2017": 11, "2018": 8, "2019": 5, "2020": 8, "2021": 4, "2022": 2, "2023": 4}}, {"title": "Recursion schemes and logical reflection", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:mVmsd5A6BfQC", "authors": ["Christopher H Broadbent", "Arnaud Carayol", "C-H Luke Ong", "Olivier Serre"], "publication_date": "2010/7/11", "conference": "2010 25th Annual IEEE Symposium on Logic in Computer Science", "description": "Let R be a class of generators of node-labelled infinite trees, and Lbe a logical language for describing correctness properties of the setrees. Given r in R and phi in L, we say that r_phi is aphi-reflection of r just if (i) r and r_phi generate the same underlying tree, and (ii) suppose a node u of the tree t(r) generated by r has label f, then the label of the node u of t(r_phi) is f* if uin t(r) satisfies phi; it is f otherwise. Thus if t(r) is the computation tree of a program r, we may regard r_phi as a transform of R that can internally observe its behaviour against a specification phi. We say that R is (constructively) reflective w.r.t. L just if there is an algorithm that transforms a given pair (r,phi) to r_phi. In this paper, we prove that higher-order recursion schemes are reflective w.r.t. both modal mu-calculus and monadic second order(MSO) logic. To obtain this result, we give the first characterisation of the winning regions of parity games \u2026", "total_citations": 69, "citation_graph": {"2009": 1, "2010": 0, "2011": 3, "2012": 12, "2013": 8, "2014": 4, "2015": 7, "2016": 7, "2017": 8, "2018": 3, "2019": 1, "2020": 4, "2021": 6, "2022": 1, "2023": 3}}, {"title": "Safety is not a restriction at level 2 for string languages", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:_FxGoFyzp5QC", "authors": ["Klaus Aehlig", "Jolie de Miranda", "C-H Luke Ong"], "publication_date": "2005", "journal": "Foundations of Software Science and Computational Structures", "description": "Recent work by Knapik, Niwi\u0144ski and Urzyczyn (in FOSSACS 2002) has revived interest in the connexions between higher-order grammars and higher-order pushdown automata. Both devices can be viewed as definitions for term trees as well as string languages. In the latter setting we recall the extensive study by Damm (1982), and Damm and Goerdt (1986). There it was shown that a language is accepted by a level-n pushdown automaton if and only if the language is generated by a safe level-n grammar. We show that at level 2 the safety assumption may be removed. It follows that there are no inherently unsafe string languages at level 2.", "total_citations": 60, "citation_graph": {"2005": 2, "2006": 8, "2007": 4, "2008": 4, "2009": 3, "2010": 4, "2011": 5, "2012": 7, "2013": 3, "2014": 3, "2015": 5, "2016": 4, "2017": 2, "2018": 0, "2019": 2, "2020": 1, "2021": 3}}, {"title": "Observational equivalence of 3rd-order Idealized Algol is decidable", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:WF5omc3nYNoC", "authors": ["C-HL Ong"], "publication_date": "2002/7/22", "conference": "Proceedings 17th Annual IEEE Symposium on Logic in Computer Science", "description": "We prove that observational equivalence of 3rd-order finitary Idealized Algol (IA) is decidable using Game Semantics. By modelling state explicitly in our games, we show that the denotation of a term M of this fragment of IA (built up from finite base types) is a compactly innocent strategy-with-state i.e. the strategy is generated by a finite view function f/sub M/. Given any such f/sub M/, we construct a real-time deterministic pushdown automata (DPDA) that recognizes the complete plays of the knowing-strategy denotation of M. Since such plays characterize observational equivalence, and there is an algorithm for deciding whether any two DPDAs recognize the same language, we obtain a procedure for deciding observational equivalence of 3rd-order finitary IA. This algorithmic representation of program meanings, which is compositional, provides a foundation for model-checking a wide range of behavioural \u2026", "total_citations": 57, "citation_graph": {"2002": 3, "2003": 4, "2004": 9, "2005": 5, "2006": 5, "2007": 3, "2008": 6, "2009": 7, "2010": 4, "2011": 0, "2012": 0, "2013": 1, "2014": 1, "2015": 1, "2016": 0, "2017": 2, "2018": 0, "2019": 2, "2020": 0, "2021": 2, "2022": 1, "2023": 1}}, {"title": "Complexity of model checking recursion schemes for fragments of the modal mu-calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:qxL8FJ1GzNcC", "authors": ["Naoki Kobayashi", "C-H Luke Ong"], "publication_date": "2009", "journal": "Automata, Languages and Programming", "description": "Ong has shown that the modal mu-calculus model checking problem (equivalently, the alternating parity tree automaton (APT) acceptance problem) of possibly-infinite ranked trees generated by order-n recursion schemes is n-EXPTIME complete. We consider two subclasses of APT and investigate the complexity of the respective acceptance problems. The main results are that, for APT with a single priority, the problem is still n-EXPTIME complete; whereas, for APT with a disjunctive transition function, the problem is (n-1)-EXPTIME complete. This study was motivated by Kobayashi's recent work showing that the resource usage verification of functional programs can be reduced to the model checking of recursion schemes. As an application, we show that the resource usage verification problem is (n-1)-EXPTIME complete.", "total_citations": 54, "citation_graph": {"2009": 6, "2010": 3, "2011": 3, "2012": 5, "2013": 6, "2014": 8, "2015": 1, "2016": 2, "2017": 4, "2018": 1, "2019": 1, "2020": 6, "2021": 3, "2022": 3, "2023": 1}}, {"title": "Fully abstract models of the lazy lambda calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:pqnbT2bcN3wC", "authors": ["C-HL Ong"], "publication_date": "1988/10/1", "conference": "[Proceedings 1988] 29th Annual Symposium on Foundations of Computer Science", "description": "Much of what is known about the model theory and proof theory of the lambda-calculus is sensible in nature, ie only head normal forms are semantically meaningful. However, most functional languages are lazy, ie programs are evaluated in normal order to weak head normal forms. The author develops a theory of lazy or strongly sensible lambda-calculus that corresponds to practice. A general method for constructing fully abstract models for a class of lazy languages is illustrated. A formal system called lambda beta C (lambda beta-calculus with convergence testing C) is introduced, and its properties are investigated.", "total_citations": 54, "citation_graph": {"1989": 4, "1990": 6, "1991": 9, "1992": 5, "1993": 2, "1994": 5, "1995": 1, "1996": 2, "1997": 1, "1998": 2, "1999": 0, "2000": 0, "2001": 0, "2002": 1, "2003": 1, "2004": 0, "2005": 0, "2006": 0, "2007": 1, "2008": 0, "2009": 4, "2010": 1, "2011": 1, "2012": 0, "2013": 1, "2014": 0, "2015": 0, "2016": 1, "2017": 0, "2018": 1, "2019": 2, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, {"title": "Modified realizability toposes and strong normalization proofs", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:ufrVoPGSRksC", "authors": ["J Hyland", "C Ong"], "publication_date": "1993", "journal": "Typed Lambda Calculi and Applications", "description": "This paper is motivated by the discovery that an appropriate quotient SN of the strongly normalising untyped \u03bb *-terms (where * is just a formal constant) forms a partial applicative structure with the inherent application operation. The quotient structure satisfies all but one of the axioms of a partial combinatory algebra (pca). We call such partial applicative structures conditionally partial combinalory algebras (c-pca). Remarkably, an arbitrary rightabsorptive c-pca gives rise to a tripos provided the underlying intuitionistic predicate logic is given an interpretation in the style of Kreisel's modified realizabilily, as opposed to the standard Kleene-style realizability. Starting from an arbitrary right-absorptive C-PCA U, the tripos-to-topos construction due to Hyland et al. can then be carried out to build a modified realizability topos TOPm(U) of non-standard sets equipped with an equality predicate. Church's Thesis is \u2026", "total_citations": 51, "citation_graph": {"1993": 5, "1994": 0, "1995": 6, "1996": 1, "1997": 4, "1998": 4, "1999": 3, "2000": 3, "2001": 2, "2002": 5, "2003": 0, "2004": 1, "2005": 1, "2006": 2, "2007": 2, "2008": 1, "2009": 1, "2010": 1, "2011": 0, "2012": 0, "2013": 1, "2014": 0, "2015": 1, "2016": 1, "2017": 2, "2018": 1, "2019": 1, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, {"title": "The monadic second order theory of trees given by arbitrary level-two recursion schemes is decidable", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:UebtZRa9Y70C", "authors": ["Klaus Aehlig", "Jolie de Miranda", "C-H Luke Ong"], "publication_date": "2005", "journal": "Typed Lambda Calculi and Applications", "description": "A tree automaton can simulate the successful runs of a word or tree automaton working on the word or tree denoted by a level-2 lambda-tree. In particular the monadic second order theory of trees given by arbitrary, rather than only by safe, recursion schemes of level 2 is decidable. This solves the level-2 case of an open problem by Knapik, Niwi\u0144ski and Urzyczyn.", "total_citations": 49, "citation_graph": {"2005": 3, "2006": 6, "2007": 3, "2008": 1, "2009": 5, "2010": 7, "2011": 3, "2012": 3, "2013": 6, "2014": 4, "2015": 2, "2016": 2, "2017": 2, "2018": 0, "2019": 1, "2020": 1}}, {"title": "A traversal-based algorithm for higher-order model checking", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:XiSMed-E-HIC", "authors": ["Robin P Neatherway", "Steven J Ramsay", "Chih-Hao Luke Ong"], "publication_date": "2012/9/9", "book": "Proceedings of the 17th ACM SIGPLAN international conference on Functional programming", "description": "Higher-order model checking - the model checking of trees generated by higher-order recursion schemes (HORS) - is a natural generalisation of finite-state and pushdown model checking. Recent work has shown that it can serve as a basis for software model checking for functional languages such as ML and Haskell. In this paper, we introduce higher-order recursion schemes with cases (HORSC), which extend HORS with a definition-by-cases construct (to express program branching based on data) and non-determinism (to express abstractions of behaviours). This paper is a study of the universal HORSC model checking problem for deterministic trivial automata: does the automaton accept every tree in the tree language generated by the given HORSC? We first characterise the model checking problem by an intersection type system extended with a carefully restricted form of union types. We then present an \u2026", "total_citations": 48, "citation_graph": {"2012": 3, "2013": 8, "2014": 6, "2015": 2, "2016": 3, "2017": 11, "2018": 2, "2019": 4, "2020": 0, "2021": 3, "2022": 3, "2023": 2}}, {"title": "Higher-order constrained horn clauses for verification", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:VaXvl8Fpj5cC", "authors": ["Toby Cathcart Burn", "C-H Luke Ong", "Steven J Ramsay"], "publication_date": "2017/12/27", "journal": "Proceedings of the ACM on Programming Languages", "description": "Motivated by applications in automated verification of higher-order functional programs, we develop a notion of constrained Horn clauses in higher-order logic and a decision problem concerning their satisfiability. We show that, although satisfiable systems of higher-order clauses do not generally have least models, there is a notion of canonical model obtained through a reduction to a problem concerning a kind of monotone logic program. Following work in higher-order program verification, we develop a refinement type system in order to reason about and automate the search for models. This provides a sound but incomplete method for solving the decision problem. Finally, we show that there is a sense in which we can use refinement types to express properties of terms whilst staying within the higher-order constrained Horn clause framework.", "total_citations": 45, "citation_graph": {"2018": 5, "2019": 10, "2020": 10, "2021": 11, "2022": 5, "2023": 4}}, {"title": "Winning regions of higher-order pushdown games", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:YOwf2qJgpHMC", "authors": ["Arnaud Carayol", "Matthew Hague", "Antoine Meyer", "C-H Luke Ong", "Olivier Serre"], "publication_date": "2008/6/24", "conference": "2008 23rd Annual IEEE Symposium on Logic in Computer Science", "description": "In this paper we consider parity games defined by higher-order pushdown automata. These automata generalise pushdown automata by the use of higher-order stacks, which are nested \"stack of stacks\" structures. Representing higher-order stacks as well-bracketed words in the usual way, we show that the winning regions of these games are regular sets of words. Moreover a finite automaton recognising this region can be effectively computed.A novelty of our work are  abstract pushdown processes which can be seen as (ordinary) pushdown automata but with an infinite stack alphabet. We use the device to give a uniform presentation of our results.From our main result on winning regions of parity games we derive a solution to the Modal Mu-Calculus Global Model-Checking Problem for higher-order pushdown graphs as well as for ranked trees generated by higher-order safe recursion schemes.", "total_citations": 43, "citation_graph": {"2007": 1, "2008": 2, "2009": 6, "2010": 4, "2011": 2, "2012": 5, "2013": 5, "2014": 1, "2015": 3, "2016": 3, "2017": 2, "2018": 1, "2019": 1, "2020": 2, "2021": 4}}, {"title": "Symbolic backwards-reachability analysis for higher-order pushdown systems", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:KlAtU1dfN6UC", "authors": ["Matthew Hague", "C-H Luke Ong"], "publication_date": "2007", "journal": "Foundations of Software Science and Computational Structures", "description": "Higher-order pushdown systems (PDSs) generalise pushdown systems through the use of higher-order stacks, that is, a nested \"stack of stacks\" structure. These systems may be used to model higher-order programs and are closely related to the Caucal hierarchy of infinite graphs and safe higher-order recursion schemes. We consider the backwards-reachability problem over higher-order Alternating PDSs (APDSs), a generalisation of higher-order PDSs. This builds on and extends previous work on pushdown systems and context-free higher-order processes in a non-trivial manner. In particular, we show that the set of configurations from which a regular set of higher-order APDS configurations is reachable is regular and computable in n-EXPTIME. In fact, the problem is n-EXPTIME-complete. We show that this work has several applications in the verification of higher-order PDSs, such as linear-time model-checking, alternation-free mu-calculus model-checking and the computation of winning regions of reachability games.", "total_citations": 42, "citation_graph": {"2007": 3, "2008": 5, "2009": 5, "2010": 5, "2011": 1, "2012": 7, "2013": 4, "2014": 2, "2015": 0, "2016": 0, "2017": 2, "2018": 2, "2019": 0, "2020": 2, "2021": 1, "2022": 0, "2023": 2}}, {"title": "The safe lambda calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:9ZlFYXVOiuMC", "authors": ["William Blum", "C-H Luke Ong"], "publication_date": "2007", "journal": "Typed Lambda Calculi and Applications", "description": "Safety is a syntactic condition of higher-order grammars that constrains occurrences of variables in the production rules according to their type-theoretic order. In this paper, we introduce the safe lambda calculus, which is obtained by transposing (and generalizing) the safety condition to the setting of the simply-typed lambda calculus. In contrast to the original definition of safety, our calculus does not constrain types (to be homogeneous). We show that in the safe lambda calculus, there is no need to rename bound variables when performing substitution, as variable capture is guaranteed not to happen. We also propose an adequate notion of beta-reduction that preserves safety. In the same vein as Schwichtenberg's 1976 characterization of the simply-typed lambda calculus, we show that the numeric functions representable in the safe lambda calculus are exactly the multivariate polynomials; thus conditional is not definable. We also give a characterization of representable word functions. We then study the complexity of deciding beta-eta equality of two safe simply-typed terms and show that this problem is PSPACE-hard. Finally we give a game-semantic analysis of safety: We show that safe terms are denoted by `P-incrementally justified strategies'. Consequently pointers in the game semantics of safe lambda-terms are only necessary from order 4 onwards.", "total_citations": 41, "citation_graph": {"2008": 1, "2009": 4, "2010": 3, "2011": 1, "2012": 1, "2013": 4, "2014": 2, "2015": 6, "2016": 5, "2017": 4, "2018": 2, "2019": 0, "2020": 2, "2021": 2, "2022": 1, "2023": 2}}, {"title": "Dominator trees and fast verification of proof nets", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:hqOjcs7Dif8C", "authors": ["Andrzej S Murawski", "C-HL Ong"], "publication_date": "2000/6/26", "conference": "Proceedings Fifteenth Annual IEEE Symposium on Logic in Computer Science (Cat. No. 99CB36332)", "description": "We consider the following decision problems. PROOFNET: given a multiplicative linear logic (MLL) proof structure, is it a proof net? ESSNET: given an essential net (of an intuitionistic MLL sequent), is it correct? The authors show that linear-time algorithms for ESSNET can be obtained by constructing the dominator tree of the input essential net. As a corollary, by showing that PROOFNET is linear-time reducible to ESSNET (by the trip translation), we obtain a linear-time algorithm for PROOFNET. We show further that these linear-time algorithms can be optimized to simple one-pass algorithms: each node of the input structure is visited at most once. As another application of dominator trees, we obtain linear time algorithms for sequentializing proof nets (i.e. given a proof net, find a derivation for the underlying MLL sequent) and essential nets.", "total_citations": 38, "citation_graph": {"2000": 1, "2001": 1, "2002": 0, "2003": 2, "2004": 2, "2005": 3, "2006": 2, "2007": 1, "2008": 1, "2009": 3, "2010": 0, "2011": 3, "2012": 7, "2013": 3, "2014": 1, "2015": 1, "2016": 0, "2017": 1, "2018": 0, "2019": 1, "2020": 2, "2021": 1, "2022": 1}}, {"title": "Syntactic control of concurrency", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:ULOm3_A8WrAC", "authors": ["Dan R Ghica", "Andrzej S Murawski", "C-HL Ong"], "publication_date": "2006/2/7", "journal": "Theoretical Computer Science", "description": "We consider a finitary procedural programming language (finite data-types, no recursion) extended with parallel composition and binary semaphores. Having first shown that may-equivalence of second-order open terms is undecidable we set out to find a framework in which decidability can be regained with minimum loss of expressivity. To that end we define an annotated type system that controls the number of concurrent threads created by terms and give a fully abstract game semantics for the notion of equivalence induced by typable terms and contexts. Finally, we show that the semantics of all typable terms, at any order and in the presence of iteration, has a regular-language representation and thus the restricted observational equivalence is decidable.", "total_citations": 35, "citation_graph": {"2005": 1, "2006": 2, "2007": 1, "2008": 0, "2009": 2, "2010": 4, "2011": 4, "2012": 4, "2013": 5, "2014": 3, "2015": 2, "2016": 0, "2017": 2, "2018": 0, "2019": 1, "2020": 0, "2021": 3, "2022": 1}}, {"title": "Unboundedness and downward closures of higher-order pushdown automata", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:_Re3VWB3Y0AC", "authors": ["Matthew Hague", "Jonathan Kochems", "C-H Luke Ong"], "publication_date": "2016/1/11", "book": "Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages", "description": "We show the diagonal problem for higher-order pushdown automata (HOPDA), and hence the simultaneous unboundedness problem, is decidable. From recent work by Zetzsche this means that we can construct the downward closure of the set of words accepted by a given HOPDA. This also means we can construct the downward closure of the Parikh image of a HOPDA. Both of these consequences play an important role in verifying concurrent higher-order programs expressed as HOPDA or safe higher-order recursion schemes.", "total_citations": 34, "citation_graph": {"2016": 8, "2017": 4, "2018": 7, "2019": 2, "2020": 3, "2021": 1, "2022": 4, "2023": 5}}, {"title": "Nondeterminism in game semantics via sheaves", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:2KloaMYe4IUC", "authors": ["Takeshi Tsukada", "CH Luke Ong"], "publication_date": "2015/7/6", "conference": "2015 30th Annual ACM/IEEE Symposium on Logic in Computer Science", "description": "Harmer and McCusker have developed a fully abstract game model for nondeterministic Idealised Algol and, at the same time, revealed difficulties in constructing game models for stateless nondeterministic languages and infinite nondeterminism. We propose a novel approach in which a strategy is not a set, but a tree, of plays, and develop a fully abstract game model for a nondeterministic stateless language. Mathematically such a strategy is formalised as a sheaf over an appropriate site of plays. We conclude with a study on the difficulties pointed out by Harmer and McCusker in terms of the structure of the coverage of the sites.", "total_citations": 34, "citation_graph": {"2015": 1, "2016": 3, "2017": 10, "2018": 6, "2019": 3, "2020": 4, "2021": 5, "2022": 1, "2023": 1}}, {"title": "Innocent game models of untyped \u03bb-calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:b0M2c_1WBrUC", "authors": ["Andrew D Ker", "Hanno Nickau", "C-H Luke Ong"], "publication_date": "2002/2/6", "journal": "Theoretical Computer Science", "description": "We present a new denotational model for the untyped \u03bb -calculus, using the techniques of game semantics. The strategies used are innocent in the sense of Hyland and Ong (Inform. and Comput., to appear) and Nickau (Hereditarily Sequential Functionals: A Game-Theoretic Approach to Sequentiality, Shaker-Verlag, 1996. Dissertation, Universit\u00e4t Gesamthochschule Siegen, Shaker-Verlag, 1996), but the traditional distinction between \u201cquestion\u201d and \u201canswer\u201d moves is removed. We first construct models D and D REC as global sections of a reflexive object in the categories A and A REC of arenas and innocent and recursive innocent strategies, respectively. We show that these are sensible \u03bb\u03b7 -algebras but are neither extensional nor universal. We then introduce a new representation of innocent strategies in an economical form. We show a strong connexion between the economical form of the denotation of a \u2026", "total_citations": 33, "citation_graph": {"2001": 3, "2002": 2, "2003": 1, "2004": 4, "2005": 0, "2006": 0, "2007": 1, "2008": 1, "2009": 0, "2010": 2, "2011": 1, "2012": 2, "2013": 0, "2014": 1, "2015": 0, "2016": 1, "2017": 3, "2018": 3, "2019": 0, "2020": 3, "2021": 0, "2022": 0, "2023": 2}}, {"title": "Generalised species of rigid resource terms", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:kuK5TVdYjLIC", "authors": ["Takeshi Tsukada", "Kazuyuki Asada", "C-H Luke Ong"], "publication_date": "2017/6/20", "conference": "2017 32nd Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)", "description": "This paper introduces a variant of the resource calculus, the rigid resource calculus, in which a permutation of elements in a bag is distinct from but isomorphic to the original bag. It is designed so that the Taylor expansion within it coincides with the interpretation by generalised species of Fiore et al., which generalises both Joyal's combinatorial species and Girard's normal functors, and which can be seen as a proof-relevant extension of the relational model. As an application, we prove the commutation between computing B\u00f6hm trees and (standard) Taylor expansions for a particular nondeterministic calculus.", "total_citations": 32, "citation_graph": {"2016": 1, "2017": 5, "2018": 2, "2019": 4, "2020": 5, "2021": 7, "2022": 4, "2023": 4}}, {"title": "Compositional higher-order model checking via \u03c9-regular games over B\u00f6hm trees", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:N5tVd3kTz84C", "authors": ["Takeshi Tsukada", "C-H Luke Ong"], "publication_date": "2014/7/14", "book": "Proceedings of the Joint Meeting of the Twenty-Third EACSL Annual Conference on Computer Science Logic (CSL) and the Twenty-Ninth Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)", "description": "We introduce type-checking games, which are \u03c9-regular games over B\u00f6hm trees, determined by a type of the Kobayashi-Ong intersection type system. These games are a higher-type extension of parity games over trees, determined by an alternating parity tree automaton. However, in contrast to these games over trees, the \"game boards\" of our type-checking games are composable, using the composition of B\u00f6hm trees. Moreover the winner (and winning strategies) of a composite game is completely determined by the respective winners (and winning strategies) of the component games.\nTo our knowledge, type-checking games give the first compositional analysis of higher-order model checking, or the model checking of trees generated by recursion schemes. We study a higher-type analogue of higher-order model checking, namely, the problem to decide the winner of a type-checking game over the B\u00f6hm tree \u2026", "total_citations": 32, "citation_graph": {"2013": 1, "2014": 2, "2015": 8, "2016": 7, "2017": 3, "2018": 2, "2019": 2, "2020": 1, "2021": 2, "2022": 1, "2023": 2}}, {"title": "Discreet games, light affine logic and ptime computation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:LkGwnXOMwfcC", "authors": ["Andrzej S Murawski", "C-H L Ong"], "publication_date": "2000", "conference": "Computer Science Logic: 14th InternationalWorkshop, CSL 2000 Annual Conference of the EACSL Fischbachau, Germany, August 21\u201326, 2000 Proceedings 14", "description": "This paper introduces a model of IMLAL, the intuitionistic multiplicative (\u2297 \u22b8 \u00a7 !)-fragment of Light Affine Logic, based on games and discreet strategies. We define a generalized notion of threads, so that a play of a game (of depth k) may be regarded as a number of interwoven threads (of depths ranging from 1 to k). To constrain the way threads communicate with each other, we organize them into networks at each depth (up to k), in accord with a protocol:\n\u2022 A network comprises an O-thread (which can only be created by O) and finitely many P-threads (which can only be created by P).\n\u2022 A network whose O-thread arises from a ! -game can have at most one P-thread which must also arise from a ! -game.\n\u2022 No thread can belong to more than one network.\n\u2022 Only O can switch between networks \u2026", "total_citations": 32, "citation_graph": {"2000": 2, "2001": 2, "2002": 2, "2003": 1, "2004": 3, "2005": 0, "2006": 4, "2007": 3, "2008": 5, "2009": 2, "2010": 2, "2011": 2, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 2, "2020": 0, "2021": 0, "2022": 0, "2023": 2}}, {"title": "Idealized algol with ground recursion, and dpda equivalence", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:MXK_kJrjxJIC", "authors": ["Andrzej Murawski", "C-H Luke Ong", "Igor Walukiewicz"], "publication_date": "2005", "journal": "Automata, Languages and Programming", "description": "We prove that observational equivalence of IA 3+Y 0 (3rd-order Idealized Algol with 0th-order recursion) is equivalent to the DPDA Equivalence Problem, and hence decidable. This completes the classification of decidable fragments of Idealized Algol. We also prove that observational approximation of IA 1+Y 0 is undecidable by reducing the DPDA Containment Problem to it.", "total_citations": 31, "citation_graph": {"2006": 4, "2007": 2, "2008": 5, "2009": 3, "2010": 2, "2011": 2, "2012": 0, "2013": 2, "2014": 1, "2015": 2, "2016": 1, "2017": 2, "2018": 0, "2019": 1, "2020": 1, "2021": 0, "2022": 0, "2023": 1}}, {"title": "Higher-order model checking: An overview", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:tKAzc9rXhukC", "authors": ["Luke Ong"], "publication_date": "2015/7/6", "description": "Higher-order model checking is about the model checking of trees generated by recursion schemes. The past fifteen years or so have seen considerable progress in both theory and practice. Advances have been made in determining the expressive power of recursion schemes and other higher-order families of generators, automata-theoretic characterisations of these generator families, and the algorithmics and semantics of higher-order model checking and allied methods of formal analysis. Because the trees generated by recursion schemes are computation trees of higher-order functional programs, higher-order model checking provides a foundation for model checkers of such programming languages as Haskell, F# and Erlang. This paper aims to give an overview of recent developments in higher-order model checking.", "total_citations": 29, "citation_graph": {"2015": 1, "2016": 4, "2017": 4, "2018": 4, "2019": 3, "2020": 3, "2021": 7, "2022": 1, "2023": 2}}, {"title": "Quantitative semantics of the lambda calculus: Some generalisations of the relational model", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:gsN89kCJA0AC", "authors": ["C-H Luke Ong"], "publication_date": "2017/6/20", "conference": "2017 32nd Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)", "description": "We present an overview of some recent work on the quantitative semantics of the \u03bb-calculus. Our starting point is the fundamental degenerate model of linear logic, the relational model MRel. We show that three quantitative semantics of the simply-typed \u03bb-calculus are equivalent: the relational semantics, HO/N game semantics, and the Taylor expansion semantics. We then consider two recent generalisations of the relational model: first, R-weighted relational models where R is a complete commutative semiring, as studied by Laird et al.; secondly, generalised species of structures, as introduced by Fiore et al. In each case, we briefly discuss some applications to quantitative analysis of higher-order programs.", "total_citations": 28, "citation_graph": {"2018": 4, "2019": 3, "2020": 6, "2021": 4, "2022": 4, "2023": 7}}, {"title": "Internal languages for autonomous and*-autonomous categories", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:Zph67rFs4hoC", "authors": ["Thong-Wei Koh", "Chih-Hao Luke Ong"], "publication_date": "1999/9", "journal": "Proceedings of the 8th Conference on Category Theory and Computer Science, Edinburgh", "description": "We introduce a family of type theories as internal languages for autonomous (or symmetric monoidal closed) and-autonomous categories, in the same sense that the simply-typed-calculus with surjective pairing is the internal language for cartesian closed categories. The rules for the typing judgements are presented in the style of Gentzen's Sequent Calculus. A notable feature is the systematic treatment of naturality conditions by expressing the categorical composition, or cut in the type theory, by explicit substitution. We use let-constructs, one for each of the three type constructors>; and (, to witness the left-introduction rules, and a Parigot-style-abstraction to express the involutive negation?. We show that the eight equality and three commutation congruence axioms of the-autonomous type theory characterise-autonomous categories exactly. More precisely we prove that there is a canonical interpretation of the (-autonomous) type theories in-autonomous categories which is complete ie for any type theory, there is a model (ieautonomous category) whose theory is exactly that. The associated rewrite systems are all strongly normalising; modulo a simple notion of congruence, they are also con uent. As a corollary, we solve a Coherence Problem a la Lambek 11]: the equality of maps in any-autonomous category freely generated from a discrete graph is decidable.", "total_citations": 27, "citation_graph": {"1999": 1, "2000": 0, "2001": 2, "2002": 2, "2003": 5, "2004": 2, "2005": 3, "2006": 3, "2007": 0, "2008": 1, "2009": 0, "2010": 0, "2011": 2, "2012": 3, "2013": 0, "2014": 0, "2015": 1, "2016": 1, "2017": 1}}, {"title": "Species, profunctors and taylor expansion weighted by SMCC: A unified framework for modelling nondeterministic, probabilistic and quantum programs", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:e_rmSamDkqQC", "authors": ["Takeshi Tsukada", "Kazuyuki Asada", "C-H Luke Ong"], "publication_date": "2018/7/9", "book": "Proceedings of the 33rd Annual ACM/IEEE Symposium on Logic in Computer Science", "description": "Motivated by a tight connection between Joyal's combinatorial species and quantitative models of linear logic, this paper introduces weighted generalised species (or weighted profunctors), where weights are morphisms of a given symmetric monoidal closed category (SMCC). For each SMCC W, we show that the category of W-weighted profunctors is a Lafont category, a categorical model of linear logic with exponential. As a model of programming languages, the construction of this paper gives a unified framework that induces adequate models of nondeterministic, probabilistic, algebraic and quantum programming languages by an appropriate choice of the weight SMCC.", "total_citations": 26, "citation_graph": {"2019": 7, "2020": 7, "2021": 2, "2022": 3, "2023": 7}}, {"title": "Fixing incremental computation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:hCrLmN-GePgC", "authors": ["Mario Alvarez-Picallo", "Alex Eyers-Taylor", "Michael Peyton Jones", "C-H Luke Ong"], "publication_date": "2019", "journal": "Programming Languages and Systems", "description": "Incremental computation has recently been studied using the concepts of change structures and derivatives of programs, where the derivative of a function allows updating the output of the function based on a change to its input. We generalise change structures to change actions, and study their algebraic properties. We develop change actions for common structures in computer science, including directed-complete partial orders and Boolean algebras. We then show how to compute derivatives of fixpoints. This allows us to perform incremental evaluation and maintenance of recursively defined functions with particular application generalised Datalog programs. Moreover, unlike previous results, our techniques are modular in that they are easy to apply both to variants of Datalog and to other programming languages.", "total_citations": 24, "citation_graph": {"2019": 3, "2020": 10, "2021": 7, "2022": 3, "2023": 1}}, {"title": "Winning regions of pushdown parity games: A saturation method", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:QIV2ME_5wuYC", "authors": ["Matthew Hague", "C-H Luke Ong"], "publication_date": "2009", "journal": "CONCUR 2009-Concurrency Theory", "description": "We present a new algorithm for computing the winning region of a parity game played over the configuration graph of a pushdown system. Our method gives the first extension of the saturation technique to the parity condition. Finite word automata are used to represent sets of pushdown configurations. Starting from an initial automaton, we perform a series of automaton transformations to compute a fixed-point characterisation of the winning region. We introduce notions of under-approximation (soundness) and over-approximation (completeness) that apply to automaton transitions rather than runs, and obtain a clean proof of correctness. Our algorithm is simple and direct, and it permits an optimisation that avoids an immediate exponential blow up.", "total_citations": 24, "citation_graph": {"2010": 5, "2011": 1, "2012": 2, "2013": 0, "2014": 2, "2015": 0, "2016": 3, "2017": 2, "2018": 4, "2019": 0, "2020": 2, "2021": 0, "2022": 0, "2023": 2}}, {"title": "On an interpretation of safe recursion in light affine logic", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:0EnyYjriUFMC", "authors": ["Andrzej S Murawski", "C-HL Ong"], "publication_date": "2004/6/6", "journal": "Theoretical Computer Science", "description": "We introduce a subalgebra BC\u2212 of Bellantoni and Cook's safe-recursion function algebra BC. Functions of the subalgebra have safe arguments that are non-contractible (i.e non-duplicable). We propose a definition of safe and normal variables in light affine logic (LAL), and show that BC\u2212 is the largest subalgebra that is interpretable in LAL, relative to that definition. Though BC\u2212 itself is not PF complete, there are extensions of it (by additional schemes for defining functions with safe arguments) that are, and are still interpretable in LAL and so preserve PF closure. We focus on one such which is BC\u2212 augmented by a definition-by-cases construct and a restricted form of definition-by-recursion scheme over safe arguments. As a corollary we obtain a new proof of the PF completeness of LAL.", "total_citations": 23, "citation_graph": {"2004": 1, "2005": 1, "2006": 1, "2007": 2, "2008": 2, "2009": 6, "2010": 5, "2011": 0, "2012": 1, "2013": 0, "2014": 1, "2015": 1, "2016": 1, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 1}}, {"title": "Can Safe Recursion Be Interpreted in Light Logic?", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:M05iB0D1s5AC", "authors": ["Andrzej S Murawski", "C-H Luke Ong"], "publication_date": "2000", "conference": "In 2nd International Workshop on Implicit Computational Complexity", "total_citations": 23, "citation_graph": {"2001": 3, "2002": 1, "2003": 3, "2004": 5, "2005": 0, "2006": 3, "2007": 3, "2008": 0, "2009": 1, "2010": 0, "2011": 0, "2012": 1}}, {"title": "Analysing mu-calculus properties of pushdown systems", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:e5wmG9Sq2KIC", "authors": ["Matthew Hague", "C-H Luke Ong"], "publication_date": "2010", "journal": "Model Checking Software", "description": "Pushdown systems provide a natural model of software with recursive procedure calls. We provide a tool (PDSolver) implementing an algorithm for computing the winning regions of a pushdown parity game and its adaptation to the direct computation of modal \u03bc-calculus properties over pushdown systems. We also extend the algorithm to allow backwards, as well as forwards, modalities and allow the user to restrict the control flow graph to configurations reachable from a designated initial state. These extensions are motivated by applications in dataflow analysis. We provide two sets of experimental data. First, we obtain a picture of the general behaviour by analysing random problem instances. Secondly, we use the tool to perform dataflow analysis on real-world Java programs, taken from the DaCapo benchmark suite.", "total_citations": 22, "citation_graph": {"2011": 1, "2012": 3, "2013": 3, "2014": 3, "2015": 1, "2016": 1, "2017": 1, "2018": 6, "2019": 0, "2020": 2, "2021": 0, "2022": 1}}, {"title": "Fully abstract semantics of additive aspects by translation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:8k81kl-MbHgC", "authors": ["Sam B Sanjabi", "C-HL Ong"], "publication_date": "2007/3/14", "book": "Proceedings of the 6th international conference on Aspect-oriented software development", "description": "We study the denotational semantics of an aspect calculus by compositional translation to a functional language with higher-order store and ML-style references. The calculus is designed to construct only \"additive\" aspects i.e. those that do not elide the execution of the base computation. Such an aspect calculus is sufficiently expressive to encode before (), after () and around () advice which calls proceed () exactly once. We prove that our translation is adequate i.e. it reflects observational equivalence. Further if a standard object-oriented view of lable is adopted, the translation is fully abstract i.e. it preserves and reflects observational equivalence. A pleasing consequence is that full abstraction of the target-language semantics is thereby inherited by the source-language semantics. This yields the first fully abstract game model for a functional language of additive aspects.", "total_citations": 22, "citation_graph": {"2006": 1, "2007": 1, "2008": 3, "2009": 7, "2010": 2, "2011": 4, "2012": 1, "2013": 0, "2014": 0, "2015": 1, "2016": 1, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, {"title": "Densities of almost surely terminating probabilistic programs are differentiable almost everywhere", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:bz8QjSJIRt4C", "authors": ["Carol Mak", "C-H Luke Ong", "Hugo Paquet", "Dominik Wagner"], "publication_date": "2021", "conference": "Programming Languages and Systems: 30th European Symposium on Programming, ESOP 2021, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021, Luxembourg City, Luxembourg, March 27\u2013April 1, 2021, Proceedings 30", "description": "We study the differential properties of higher-order statistical probabilistic programs with recursion and conditioning. Our starting point is an open problem posed by Hongseok Yang: what class of statistical probabilistic programs have densities that are differentiable almost everywhere? To formalise the problem, we consider Statistical PCF (SPCF), an extension of call-by-value PCF with real numbers, and constructs for sampling and conditioning. We give SPCF a sampling-style operational semanticsa la Borgstr\u00f6m et al., and study the associated weight (commonly referred to as the density) function and value function on the set of possible execution traces. Our main result is that almost surely terminating SPCF programs, generated from a set of primitive functions (eg the set of analytic functions) satisfying mild closure properties, have weight and value functions that are almost everywhere differentiable. We use a stochastic form of symbolic execution to reason about almost everywhere differentiability. A by-product of this work is that almost surely terminating deterministic (S) PCF programs with real parameters denote functions that are almost everywhere differentiable.", "total_citations": 21, "citation_graph": {"2020": 1, "2021": 8, "2022": 5, "2023": 6}}, {"title": "Detecting redundant CSS rules in HTML5 applications: a tree rewriting approach", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:ZfRJV9d4-WMC", "authors": ["Matthew Hague", "Anthony W Lin", "C-H Luke Ong"], "publication_date": "2015/10/23", "book": "Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications", "description": "HTML5 applications normally have a large set of CSS (Cascading Style Sheets) rules for data display. Each CSS rule consists of a node selector and a declaration block (which assigns values to selected nodes' display attributes). As web applications evolve, maintaining CSS files can easily become problematic. Some CSS rules will be replaced by new ones, but these obsolete (hence redundant) CSS rules often remain in the applications. Not only does this \u201cbloat\u201d the applications \u2013 increasing the bandwidth requirement \u2013 but it also significantly increases web browsers' processing time. Most works on detecting redundant CSS rules in HTML5 applications do not consider the dynamic behaviours of HTML5 (specified in JavaScript); in fact, the only proposed method that takes these into account is dynamic analysis, which cannot soundly prove redundancy of CSS rules. In this paper, we introduce an abstraction of \u2026", "total_citations": 21, "citation_graph": {"2016": 7, "2017": 2, "2018": 3, "2019": 3, "2020": 2, "2021": 1, "2022": 2, "2023": 1}}, {"title": "Soter: an automatic safety verifier for Erlang", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:p2g8aNsByqUC", "authors": ["Emanuele D'Osualdo", "Jonathan Kochems", "Luke Ong"], "publication_date": "2012/10/21", "book": "Proceedings of the 2nd edition on Programming systems, languages and applications based on actors, agents, and decentralized control abstractions", "description": "This paper presents Soter, a fully-automatic program analyser and verifier for Erlang modules. The fragment of Erlang accepted by Soter includes the higher-order functional constructs and all the key features of actor concurrency, namely, dynamic and possibly unbounded spawning of processes and asynchronous message passing. Soter uses a combination of static analysis and infinite-state model checking to verify safety properties specified by the user. Given an Erlang module and a set of properties, Soter first extracts an abstract (approximate but sound) model in the form of an actor communicating system (ACS), and then checks if the properties are satisfied using a Petri net coverability checker, BFC. To our knowledge, Soter is the first fully-automatic, infinite-state model checker for a large fragment of Erlang. We find that in practice our abstraction technique is accurate enough to verify an interesting range of \u2026", "total_citations": 21, "citation_graph": {"2013": 6, "2014": 3, "2015": 1, "2016": 1, "2017": 7, "2018": 0, "2019": 2}}, {"title": "A fragment of ML decidable by visibly pushdown automata", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:blknAaTinKkC", "authors": ["David Hopkins", "Andrzej S Murawski", "C -H Luke Ong"], "publication_date": "2011", "conference": "Automata, Languages and Programming: 38th International Colloquium, ICALP 2011, Zurich, Switzerland, July 4-8, 2011, Proceedings, Part II 38", "description": "The simply-typed, call-by-value language, RML, may be viewed as a canonical restriction of Standard ML to ground-type references, augmented by a \u201cbad variable\u201d construct in the sense of Reynolds. By a short type, we mean a type of order at most 2 and arity at most 1. We consider the O-strict fragment of (finitary) RML, RML O\u2009\u2212\u2009Str , consisting of terms-in-context x 1 : \u03b8 1, ... , x n : \u03b8 n \u2009\u22a2\u2009M : \u03b8 such that \u03b8 is short, and every argument type of every \u03b8 i is short. RML O\u2009\u2212\u2009Str is surprisingly expressive; it includes several instances of (in)equivalence in the literature that are challenging to prove using methods based on (state-based) logical relations. We show that it is decidable whether a given pair of RML O\u2009\u2212\u2009Str \u2026", "total_citations": 21, "citation_graph": {"2012": 4, "2013": 1, "2014": 4, "2015": 3, "2016": 1, "2017": 2, "2018": 2, "2019": 2, "2020": 0, "2021": 0, "2022": 1, "2023": 1}}, {"title": "Improved functional flow and reachability analyses using indexed linear tree grammars", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:NhqRSupF_l8C", "authors": ["Jonathan Kochems", "CH Luke Ong"], "publication_date": "2010", "journal": "Proceedings of the 22nd International Conference on Rewriting Techniques and Applications (RTA)", "description": "The collecting semantics of a program defines the strongest static property of interest. We study the analysis of the collecting semantics of higher-order functional programs, cast as left-linear term rewriting systems. The analysis generalises functional flow analysis and the reachability problem for term rewriting systems, which are both undecidable. We present an algorithm that uses indexed linear tree grammars (ILTGs) both to describe the input set and compute the set that approximates the collecting semantics. ILTGs are equi-expressive with pushdown tree automata, and so, strictly more expressive than regular tree grammars. Our result can be seen as a refinement of Jones and Andersen's procedure, which uses regular tree grammars. The main technical innovation of our algorithm is the use of indices to capture (sets of) substitutions, thus enabling a more precise binding analysis than afforded by regular grammars. We give a simple proof of termination and soundness, and demonstrate that our method is more accurate than other approaches to functional flow and reachability analyses in the literature.", "total_citations": 21, "citation_graph": {"2011": 2, "2012": 0, "2013": 1, "2014": 2, "2015": 8, "2016": 2, "2017": 2, "2018": 0, "2019": 1, "2020": 0, "2021": 2, "2022": 0, "2023": 1}}, {"title": "Syntactic control of concurrency", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:5nxA0vEk-isC", "authors": ["D Ghica", "A Murawski", "C-H Luke Ong"], "publication_date": "2004", "journal": "Automata, Languages and Programming", "description": "We consider a finitary procedural programming language (finite data-types, no recursion) extended with parallel composition and binary semaphores. Having first shown that may-equivalence of second-order open terms is undecidable we set out to find a framework in which decidability can be regained with minimum loss of expressivity. To that end we define an annotated type system that controls the number of concurrent threads created by terms and give a fully abstract game semantics for the notion of equivalence induced by typable terms and contexts. Finally, we show that the semantics of all typable terms, at any order and in the presence of iteration, admits a regular-language representation and thus the restricted observational equivalence is decidable.", "total_citations": 21, "citation_graph": {"2004": 4, "2005": 4, "2006": 3, "2007": 4, "2008": 1, "2009": 1, "2010": 0, "2011": 0, "2012": 1, "2013": 1, "2014": 0, "2015": 0, "2016": 2}}, {"title": "Exhausting Strategies, Joker Games and Full Completeness for IMLL with Unit", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:HoB7MX3m0LUC", "authors": ["Andrzej S Murawski", "C-H Luke Ong"], "publication_date": "1999", "conference": "In Proc. 8th Conf. CTCS'99. ENTCS 29", "total_citations": 21, "citation_graph": {"2003": 1, "2004": 0, "2005": 2, "2006": 1, "2007": 2, "2008": 1, "2009": 1, "2010": 0, "2011": 0, "2012": 2, "2013": 1, "2014": 0, "2015": 0, "2016": 1, "2017": 0, "2018": 2, "2019": 1, "2020": 0, "2021": 0, "2022": 0, "2023": 2}}, {"title": "Collapsible pushdown automata and recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:TIZ-Mc8IlK0C", "authors": ["Matthew Hague", "Andrzej S Murawski", "C-H Luke Ong", "Olivier Serre"], "publication_date": "2017/8/11", "journal": "ACM Transactions on Computational Logic (TOCL)", "description": "We consider recursion schemes (not assumed to be homogeneously typed, and hence not necessarily safe) and use them as generators of (possibly infinite) ranked trees. A recursion scheme is essentially a finite typed deterministic term rewriting system that generates, when one applies the rewriting rules ad infinitum, an infinite tree, called its value tree. A fundamental question is to provide an equivalent description of the trees generated by recursion schemes by a class of machines.\nIn this article, we answer this open question by introducing collapsible pushdown automata (CPDA), which are an extension of deterministic (higher-order) pushdown automata. A CPDA generates a tree as follows. One considers its transition graph, unfolds it, and contracts its silent transitions, which leads to an infinite tree, which is finally node labelled thanks to a map from the set of control states of the CPDA to a ranked alphabet \u2026", "total_citations": 20, "citation_graph": {"2017": 1, "2018": 2, "2019": 3, "2020": 4, "2021": 3, "2022": 1, "2023": 3}}, {"title": "Evolving games and essential nets for affine polymorphism", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:abG-DnoFyZgC", "authors": ["Andrzej S Murawski", "C -H Luke Ong"], "publication_date": "2001", "conference": "Typed Lambda Calculi and Applications: 5th International Conference, TLCA 2001 Krak\u00f3w, Poland, May 2\u20135, 2001 Proceedings 5", "description": "This paper presents a game model of Second-order Intuitionistic Multiplicative Affine Logic (IMAL2). We extend Lamarche\u2019s essential nets to the second-order affine setting and use them to show that the model is fully and faithfully complete.", "total_citations": 20, "citation_graph": {"2003": 4, "2004": 1, "2005": 2, "2006": 0, "2007": 0, "2008": 5, "2009": 1, "2010": 0, "2011": 1, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 2, "2020": 0, "2021": 4}}, {"title": "Boom: Taking Boolean Program Model Checking One Step Further", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:IWHjjKOFINEC", "authors": ["G\u00e9rard Basler", "Matthew Hague", "Daniel Kroening", "C-H Luke Ong", "Thomas Wahl", "Haoxian Zhao"], "publication_date": "2010/3/20", "book": "International Conference on Tools and Algorithms for the Construction and Analysis of Systems", "description": "We present Boom, a comprehensive analysis tool for Boolean programs. We focus in this paper on model-checking non-recursive concurrent programs. Boom implements a recent variant of counter abstraction, where thread counters are used in a program-context aware way. While designed for bounded counters, this method also integrates well with the Karp-Miller tree construction for vector addition systems, resulting in a reachability engine for programs with unbounded thread creation. The concurrent version of Boom is implemented using BDDs and includes partial order reduction methods. Boom is intended for model checking system-level code via predicate abstraction. We present experimental results for the verification of Boolean device driver models.", "total_citations": 19, "citation_graph": {"2009": 1, "2010": 1, "2011": 3, "2012": 3, "2013": 1, "2014": 4, "2015": 2, "2016": 1, "2017": 2, "2018": 0, "2019": 0, "2020": 0, "2021": 1}}, {"title": "Model checking liveness properties of higher-order functional programs", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:hFOr9nPyWt4C", "authors": ["MM Lester", "RP Neatherway", "CHL Ong", "SJ Ramsay"], "publication_date": "2010", "conference": "Proceedings of ML Workshop", "description": "Recent advances in the model checking of recursion schemes have opened the prospect of a model checking approach to the verification of higher-order functional programs. We formulate the Resource Usage Verification Problem in a general (liveness) setting, where good behaviours are specified by alternating parity (word) automata; and we give a sound and complete decision procedure by reduction to the problem of model checking higher-order recursion schemes (HORS) against alternating parity tree automata. Extending Kobayashi's type-inference approach, we present an efficient algorithm for deciding a restriction of the model checking problem in which properties are expressed by alternating weak tree automata (and hence all CTL formulas). We have constructed a model checker, THORS, that implements our algorithm and a number of optimisations. Despite the hugely challenging worst-case time complexity, THORS performs remarkably well on small examples, even up to order 5. To our knowledge, this is the first model checker for HORS which allows for the specification of tree automata with a non-trivial acceptance condition, including all CTL properties.", "total_citations": 19, "citation_graph": {"2011": 2, "2012": 1, "2013": 1, "2014": 2, "2015": 2, "2016": 3, "2017": 1, "2018": 1, "2019": 3, "2020": 0, "2021": 0, "2022": 1, "2023": 1}}, {"title": "A universal innocent game model for the B\u00f6hm tree lambda theory", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:kNdYIx-mwKoC", "authors": ["Andrew Ker", "Hanno Nickau", "C-H Luke Ong"], "publication_date": "1999", "journal": "Computer Science Logic", "description": "We present a game model of the untyped \u03bb-calculus, with equational theory equal to the B\u00f6hm tree \u03bb-theory B, which is universal (i.e. every element of the model is definable by some term). This answers a question of Di Gianantonio, Franco and Honsell. Webuild on our earlier work, which uses the methods of innocent game semantics to develop a universal model inducing the maximal consistent sensible theory H*. To our knowledge these are the first syntax-independent universal models of the untyped \u03bb-calculus", "total_citations": 19, "citation_graph": {"2000": 2, "2001": 4, "2002": 3, "2003": 1, "2004": 1, "2005": 0, "2006": 0, "2007": 1, "2008": 0, "2009": 3, "2010": 0, "2011": 0, "2012": 1, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 1, "2018": 0, "2019": 0, "2020": 1}}, {"title": "Fragments of ML decidable by nested data class memory automata", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:W5xh706n7nkC", "authors": ["Conrad Cotton-Barratt", "David Hopkins", "Andrzej S Murawski", "C-H Luke Ong"], "publication_date": "2015/4/11", "book": "International Conference on Foundations of Software Science and Computation Structures", "description": "The call-by-value language RML may be viewed as a canonical restriction of Standard ML to ground-type references, augmented by a \u201cbad variable\u201d construct in the sense of Reynolds. We consider the fragment of (finitary) RML terms of order at most 1 with free variables of order at most 2, and identify two subfragments of this for which we show observational equivalence to be decidable. The first subfragment, RML, consists of those terms in which the P-pointers in the game semantic representation are determined by the underlying sequence of moves. The second subfragment consists of terms in which the O-pointers of moves corresponding to free variables in the game semantic representation are determined by the underlying moves. These results are shown using a reduction to a form of automata over data words in which the data values have a tree-structure, reflecting the tree-structure of the \u2026", "total_citations": 18, "citation_graph": {"2014": 1, "2015": 4, "2016": 2, "2017": 2, "2018": 2, "2019": 3, "2020": 0, "2021": 2, "2022": 0, "2023": 1}}, {"title": "Homer: A higher-order observational equivalence model checker", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:dhFuZR0502QC", "authors": ["David Hopkins", "C-H Luke Ong"], "publication_date": "2009", "journal": "Computer Aided Verification", "description": "We present Homer, an observational-equivalence model checker for the 3rd-order fragment of Idealized Algol (IA) augmented with iteration. It works by first translating terms of the fragment into a precise representation of their game semantics as visibly pushdown automata (VPA). The VPA-translates are then passed to a VPA toolkit (which we have implemented) to test for equivalence. Thanks to the fully abstract game semantics, observational equivalence of these IA-terms reduces to the VPA Equivalence Problem. Our checker is thus sound and complete; because it model checks open terms, our approach is also compositional. Further, if the terms are inequivalent, Homer will produce both a game-semantic and an operational-semantic counter-example, in the form of a play and a separating context respectively. We showcase these features on a number of examples and (where appropriate) compare its \u2026", "total_citations": 18, "citation_graph": {"2008": 1, "2009": 2, "2010": 3, "2011": 1, "2012": 2, "2013": 3, "2014": 2, "2015": 2, "2016": 0, "2017": 0, "2018": 0, "2019": 1, "2020": 0, "2021": 1}}, {"title": "On global model checking trees generated by higher-order recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:3s1wT3WcHBgC", "authors": ["Christopher Broadbent", "C-H Luke Ong"], "publication_date": "2009", "conference": "Foundations of Software Science and Computational Structures", "description": "Higher-order recursion schemes are systems of rewrite rules on typed non-terminal symbols, which can be used to define infinite trees. The Global Modal Mu-Calculus Model Checking Problem takes as input such a recursion scheme together with a modal \u03bc-calculus sentence and asks for a finite representation of the set of nodes in the tree generated by the scheme at which the sentence holds. Using a method that appeals to game semantics, we show that for an order-n recursion scheme, one can effectively construct a non-deterministic order-n collapsible pushdown automaton representing this set. The level of the automaton is strict in the sense that in general no non-deterministic order-(n\u2009\u2212\u20091) automaton could do likewise (assuming the requisite hierarchy theorem). The question of determinisation is left open. As a corollary we can also construct an order-n collapsible pushdown automaton \u2026", "total_citations": 17, "citation_graph": {"2010": 3, "2011": 1, "2012": 1, "2013": 1, "2014": 2, "2015": 2, "2016": 0, "2017": 1, "2018": 1, "2019": 0, "2020": 2, "2021": 2, "2022": 0, "2023": 1}}, {"title": "Fast verification of MLL proof nets via IMLL", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:7PzlFSSx8tAC", "authors": ["Andrzej S Murawski", "C-H Luke Ong"], "publication_date": "2006/7/1", "journal": "ACM Transactions on Computational Logic (TOCL)", "description": "We consider the following decision problems:ProofNet: Is a given multiplicative linear logic (MLL) proof structure a proof net?EssNet: Is a given essential net (of an intuitionistic MLL sequent) correct?In this article we show how to obtain linear-time algorithms for EssNet. As a corollary, by showing that ProofNet is linear-time reducible to EssNet (by the Trip Translation), we obtain a linear-time algorithm for ProofNet.We show further that it is possible to optimize the verification so that each node of the input structure is visited at most once. Finally, we present linear-time algorithms for sequentializing proof nets and essential nets, that is, for finding derivations of the underlying sequents.", "total_citations": 17, "citation_graph": {"2005": 1, "2006": 1, "2007": 1, "2008": 0, "2009": 0, "2010": 0, "2011": 2, "2012": 1, "2013": 0, "2014": 1, "2015": 2, "2016": 0, "2017": 1, "2018": 2, "2019": 1, "2020": 1, "2021": 1, "2022": 0, "2023": 1}}, {"title": "Change actions: models of generalised differentiation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:0N-VGjzr574C", "authors": ["Mario Alvarez-Picallo", "C-H Luke Ong"], "publication_date": "2019", "conference": "Foundations of Software Science and Computation Structures: 22nd International Conference, FOSSACS 2019, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2019, Prague, Czech Republic, April 6\u201311, 2019, Proceedings 22", "description": "Change structures, introduced by Cai et al., have recently been proposed as a semantic framework for incremental computation. We generalise change actions, an alternative to change structures, to arbitrary cartesian categories and propose the notion of change action model as a categorical model for (higher-order) generalised differentiation. Change action models naturally arise from many geometric and computational settings, such as (generalised) cartesian differential categories, group models of discrete calculus, and Kleene algebra of regular expressions. We show how to build canonical change action models on arbitrary cartesian categories, reminiscent of the F\u00e0a di Bruno construction.", "total_citations": 16, "citation_graph": {"2019": 3, "2020": 3, "2021": 7, "2022": 2, "2023": 1}}, {"title": "Two-level game semantics, intersection types, and recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:SP6oXDckpogC", "authors": ["C-H Luke Ong", "Takeshi Tsukada"], "publication_date": "2012/7/9", "book": "International Colloquium on Automata, Languages, and Programming", "description": "We introduce a new cartesian closed category of two-level arenas and innocent strategies to model intersection types that are refinements of simple types. Intuitively a property (respectively computation) on the upper level refines that on the lower level. We prove Subject Expansion\u2014any lower-level computation is closely and canonically tracked by the upper-level computation that lies over it\u2014which is a measure of the robustness of the two-level semantics. The game semantics of the type system is fully complete: every winning strategy is the denotation of some derivation. To demonstrate the relevance of the game model, we use it to construct new semantic proofs of non-trivial algorithmic results in higher-order model checking.", "total_citations": 16, "citation_graph": {"2013": 2, "2014": 4, "2015": 3, "2016": 3, "2017": 2, "2018": 0, "2019": 1, "2020": 0, "2021": 0, "2022": 1}}, {"title": "Dialogue games and innocent strategies: An approach to intensional full abstraction to PCF (preliminary announcement)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:ZHo1McVdvXMC", "authors": ["Martin Hyland", "Luke Ong"], "publication_date": "1993/7/26", "journal": "Cambridge University, UK. Note distributed August", "total_citations": 15, "citation_graph": {"1993": 1, "1994": 4, "1995": 4, "1996": 1, "1997": 0, "1998": 0, "1999": 0, "2000": 0, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 3, "2008": 0, "2009": 0, "2010": 1, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, {"title": "HoCHC: A refutationally complete and semantically invariant system of higher-order logic modulo theories", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:rmuvC79q63oC", "authors": ["C-H Luke Ong", "Dominik Wagner"], "publication_date": "2019/6/24", "conference": "2019 34th Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)", "description": "We present a simple resolution proof system for higher-order constrained Horn clauses (HoCHC)-a system of higher-order logic modulo theories-and prove its soundness and refutational completeness w.r.t. both standard and Henkin semantics. As corollaries, we obtain the compactness theorem and semi-decidability of HoCHC for semi-decidable background theories, and we prove that HoCHC satisfies a canonical model property. Moreover a variant of the well-known translation from higher-order to 1st-order logic is shown to be sound and complete for HoCHC in both semantics. We illustrate how to transfer decidability results for (fragments of) 1st-order logic modulo theories to our higher-order setting, using as example the Bernays-Schonflukel-Ramsey fragment of HoCHC modulo a restricted form of Linear Integer Arithmetic.", "total_citations": 14, "citation_graph": {"2019": 1, "2020": 4, "2021": 7, "2022": 1, "2023": 1}}, {"title": "Plays as resource terms via non-idempotent intersection types", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:uc_IGeMz5qoC", "authors": ["Takeshi Tsukada", "C-H Luke Ong"], "publication_date": "2016/7/5", "book": "Proceedings of the 31st Annual ACM/IEEE Symposium on Logic in Computer Science", "description": "A program is interpreted as a collection of resource terms by the Taylor expansion, as a collection of plays by game semantics, and as a collection of types by a non-idempotent intersection type assignment system. This paper investigates the connection between these models and aims to show that they are essentially the same in a certain sense. Technically we study the relational interpretations of resource terms and of plays, which can be seen as non-idempotent intersection type assignment systems for resource terms and plays, respectively. We show that both relational interpretations are injective, have the same image, and respect composition. This result allows us to study a property of the game model by using the syntax of a resource calculus and vice versa.", "total_citations": 13, "citation_graph": {"2017": 4, "2018": 0, "2019": 3, "2020": 1, "2021": 2, "2022": 1, "2023": 2}}, {"title": "Weak and nested class memory automata", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:JQOojiI6XY0C", "authors": ["Conrad Cotton-Barratt", "Andrzej S Murawski", "C-H Luke Ong"], "publication_date": "2015", "conference": "Language and Automata Theory and Applications: 9th International Conference, LATA 2015, Nice, France, March 2-6, 2015, Proceedings 9", "description": "Automata over infinite alphabets have recently come to be studied extensively as potentially useful tools for solving problems in verification and database theory. One popular model of automata studied is the Class Memory Automata (CMA), for which the emptiness problem is equivalent to Petri Net Reachability. We identify a restriction \u2013 which we call weakness \u2013 of CMA, and show that they are equivalent to three existing forms of automata over data languages. Further, we show that in the deterministic case they are closed under all Boolean operations, and hence have an ExpSpace-complete equivalence problem. We also extend CMA to operate over multiple levels of nested data values, and show that while these have undecidable emptiness in general, adding the weakness constraint recovers decidability of emptiness, via reduction to coverability in well-structured transition systems. We also examine \u2026", "total_citations": 13, "citation_graph": {"2015": 3, "2016": 2, "2017": 2, "2018": 1, "2019": 1, "2020": 1, "2021": 2}}, {"title": "Safety verification of asynchronous pushdown systems with shaped stacks", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:tkaPQYYpVKoC", "authors": ["Jonathan Kochems", "C -H Luke Ong"], "publication_date": "2013", "conference": "CONCUR 2013\u2013Concurrency Theory: 24th International Conference, CONCUR 2013, Buenos Aires, Argentina, August 27-30, 2013. Proceedings 24", "description": "In this paper, we study the program-point reachability problem of concurrent pushdown systems that communicate via unbounded and unordered message buffers. Our goal is to relax the common restriction that messages can only be retrieved by a pushdown process when its stack is empty. We use the notion of partially commutative context-free grammars to describe a new class of asynchronously communicating pushdown systems with a mild shape constraint on the stacks for which the program-point coverability problem remains decidable. Stacks that fit the shape constraint may reach arbitrary heights; further a process may execute any communication action (be it process creation, message send or retrieval) whether or not its stack is empty. This class extends previous computational models studied in the context of asynchronous programs, and enables the safety verification of a large class of \u2026", "total_citations": 13, "citation_graph": {"2013": 1, "2014": 1, "2015": 2, "2016": 0, "2017": 2, "2018": 2, "2019": 0, "2020": 0, "2021": 2, "2022": 2, "2023": 1}}, {"title": "A saturation method for the modal mu-calculus over pushdown systems", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:4JMBOYKVnBMC", "authors": ["M Hague", "C-HL Ong"], "publication_date": "2011/5/31", "journal": "Information and Computation", "description": "We present an algorithm for computing directly the denotation of a \u03bc-calculus formula \u03c7 over the configuration graph of a pushdown system. Our method gives the first extension of the saturation technique to the full \u03bc-calculus. Finite word automata are used to represent sets of pushdown configurations. Starting from an initial automaton, we perform a series of automaton manipulations which compute the denotation by recursion over the structure of the formula. We introduce notions of under-approximation (soundness) and over-approximation (completeness) that apply to automaton transitions rather than runs. Our algorithm is relatively simple and direct, and avoids an immediate exponential blow up. Finally, we show experimentally that the direct algorithm is more efficient than via a reduction to parity games.", "total_citations": 13, "citation_graph": {"2012": 1, "2013": 1, "2014": 1, "2015": 1, "2016": 1, "2017": 2, "2018": 1, "2019": 1, "2020": 0, "2021": 2}}, {"title": "Algorithmic Game Semantics and Component\u2212 Based Verification", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:4DMP91E08xMC", "authors": ["Samson Abramsky", "D Ghica", "L Ong", "A Murawski"], "publication_date": "2003", "description": "We present a research programme dedicated to the application of Game Semantics to program analysis and verification. We highlight several recent theoretical results and describe a prototypical software modeling and verification tool. The distinctive novel features of the tool are its ability to handle open programs and the fact that the models it produces are observationally fully abstract. These features are essential in the modeling and verification of software components such as modules. Incidentally, these features also lead to very compact models of programs.", "total_citations": 13, "citation_graph": {"2004": 1, "2005": 0, "2006": 0, "2007": 1, "2008": 0, "2009": 4, "2010": 0, "2011": 1, "2012": 1, "2013": 0, "2014": 1, "2015": 0, "2016": 1, "2017": 0, "2018": 0, "2019": 0, "2020": 1, "2021": 1}}, {"title": "Typed meta-interpretive learning of logic programs", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:Dip1O2bNi0gC", "authors": ["Rolf Morel", "Andrew Cropper", "C-H Luke Ong"], "publication_date": "2019/5/6", "book": "European Conference on Logics in Artificial Intelligence", "description": "Meta-interpretive learning (MIL) is a form of inductive logic programming that learns logic programs from background knowledge and examples. We claim that adding types to MIL can improve learning performance. We show that type checking can reduce the MIL hypothesis space by a cubic factor. We introduce two typed MIL systems: Metagol and HEXMIL, implemented in Prolog and Answer Set Programming (ASP), respectively. Both systems support polymorphic types and can infer the types of invented predicates. Our experimental results show that types can substantially reduce learning times.", "total_citations": 12, "citation_graph": {"2020": 3, "2021": 4, "2022": 1, "2023": 3}}, {"title": "TravMC2: higher-order model checking for alternating parity tree automata", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:hkOj_22Ku90C", "authors": ["Robin P Neatherway", "C-H Luke Ong"], "publication_date": "2014/7/21", "book": "Proceedings of the 2014 International SPIN Symposium on Model Checking of Software", "description": "Higher-order model checking is the problem of model checking (possibly) infinite trees generated by higher-order recursion schemes (HORS). HORS are a natural abstract model of functional programs, and HORS model checkers play a similar role to checkers of Boolean programs in the imperative setting. Most research effort so far has focused on checking safety properties specified using trivial tree automata i.e. Buechi tree automata all of whose states are final. Building on our previous work, we present a higher-order model checker, TravMC2, which supports properties specified using alternating parity tree automata (or equivalently monadic second order logic). Our experimental results offer an encouraging comparison with an existing checker, TrecS-APT.", "total_citations": 12, "citation_graph": {"2014": 1, "2015": 0, "2016": 3, "2017": 1, "2018": 2, "2019": 1, "2020": 1, "2021": 1, "2022": 1, "2023": 1}}, {"title": "More effective interpolations in software model checking", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:lmc2jWPfTJgC", "authors": ["Cong Tian", "Zhao Duan", "Zhenhua Duan", "C-H Luke Ong"], "publication_date": "2017/10/30", "conference": "2017 32nd IEEE/ACM International Conference on Automated Software Engineering (ASE)", "description": "An approach to CEGAR-based model checking which has proved to be successful on large models employs Craig interpolation to efficiently construct parsimonious abstractions. Following this design, we introduce new applications, universal safety interpolant and existential error interpolant, of Craig interpolation that can systematically reduce the program state space to be explored for safety verification. Whenever the universal safety interpolant is implied by the current path, all paths emanating from that location are guaranteed to be safe. Dually whenever the existential error interpolant is implied by the current path, there is guaranteed to be an unsafe path from the location. We show how these interpolants are computed and applied in safety verification. We have implemented our approach in a tool named InterpChecker by building on an open source software model checker. Experiments on a large number of \u2026", "total_citations": 11, "citation_graph": {"2018": 2, "2019": 3, "2020": 2, "2021": 1, "2022": 3}}, {"title": "Normalisation by traversals", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:35r97b3x0nAC", "authors": ["C-H Luke Ong"], "publication_date": "2015/11/9", "journal": "arXiv preprint arXiv:1511.02629", "description": "We present a novel method of computing the beta-normal eta-long form of a simply-typed lambda-term by constructing traversals over a variant abstract syntax tree of the term. In contrast to beta-reduction, which changes the term by substitution, this method of normalisation by traversals leaves the original term intact. We prove the correctness of the normalisation procedure by game semantics. As an application, we establish a path-traversal correspondence theorem which is the basis of a key decidability result in higher-order model checking.", "total_citations": 11, "citation_graph": {"2016": 2, "2017": 6, "2018": 1, "2019": 1, "2020": 1}}, {"title": "Hector: An Equivalence Checker for a Higher-Order Fragment of ML", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:KxtntwgDAa4C", "authors": ["David Hopkins", "Andrzej S Murawski", "C -H Luke Ong"], "publication_date": "2012", "conference": "Computer Aided Verification: 24th International Conference, CAV 2012, Berkeley, CA, USA, July 7-13, 2012 Proceedings 24", "description": "We present Hector, an observational equivalence checker for a higher-order fragment of ML. The input language is RML, the canonical restriction of standard ML to ground-type references. Hector accepts programs from a decidable fragment of RML identified by us at ICALP\u201911, which comprises programs of short-type (order at most 2 and arity at most 1) that may contain free variables whose arguments are also of short-type. This is an expressive fragment that contains complex higher-order types, and includes many examples from the literature which have proven challenging to verify using other methods. To our knowledge, Hector is the first fully-automated equivalence checker for higher-order, call-by-value programs. Both sound and complete, the tool relies on the fully abstract game semantics of RML to construct, on-the-fly, visibly pushdown automata which precisely capture program behaviour. These \u2026", "total_citations": 11, "citation_graph": {"2012": 1, "2013": 3, "2014": 1, "2015": 1, "2016": 0, "2017": 0, "2018": 0, "2019": 2, "2020": 0, "2021": 2, "2022": 1}}, {"title": "Recursion schemes, collapsible pushdown automata and higher-order model checking", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:kRWSkSYxWN8C", "authors": ["Luke Ong"], "publication_date": "2013/4/2", "book": "International Conference on Language and Automata Theory and Applications", "description": "This paper is about two models of computation that underpin recent developments in the algorithmic verification of higher-order computation. Recursion schemes are in essence the simply-typed lambda calculus with recursion, generated from first-order symbols. Collapsible pushdown automata are a generalisation of pushdown automata to higher-order stacks \u2014 which are iterations of stack of stacks \u2014 that contain symbols equipped with links. We study and compare the expressive power of the two models and the algorithmic properties of infinite structures such as trees and graphs generated by them. We conclude with a brief overview of recent applications to the model checking of higher-order functional programs. A central theme of the work is the fruitful interplay of ideas between the neighbouring fields of semantics and algorithmic verification.", "total_citations": 10, "citation_graph": {"2013": 1, "2014": 1, "2015": 2, "2016": 1, "2017": 2, "2018": 1, "2019": 1, "2020": 1}}, {"title": "Functional reachability", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:-f6ydRqryjwC", "authors": ["C-H Luke Ong", "Nikos Tzevelekos"], "publication_date": "2009/8/11", "conference": "2009 24th Annual IEEE Symposium on Logic In Computer Science", "description": "What is reachability in higher-order functional programs? We formulate reachability as a decision problem in the setting of the prototypical functional language PCF, and show that even in the recursion-free fragment generated from a finite base type, several versions of the reachability problem are undecidable from order 4 onwards, and several other versions are reducible to each other. We characterise a version of the reachability problem in terms of a new class of tree automata introduced by Stirling at FoSSaCS 2009, called Alternating Dependency Tree Automata (ADTA). As a corollary, we prove that the ADTA non-emptiness problem is undecidable, thus resolving an open problem raised by Stirling. However, by restricting to contexts constructible from a finite set of variable names, we show that the corresponding solution set of a given instance of the reachability problem is regular. Hence the relativised \u2026", "total_citations": 10, "citation_graph": {"2009": 2, "2010": 1, "2011": 1, "2012": 1, "2013": 2, "2014": 0, "2015": 2, "2016": 1}}, {"title": "Lazy lambda calculus: Theories, models and local structure characterization", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:Wp0gIr-vW9MC", "authors": ["C-H Luke Ong"], "publication_date": "1992", "journal": "Automata, Languages and Programming", "description": "Lambda Calculus is commonly thought to be the basis for functional programming. However, there is a fundamental mismatch between the \u201cstandard\u201d theory of sensible Lambda Calculus and the practice of lazy evaluation which is a distinctive feature of functional programming. This paper proposes modification of a number of key notions in the sensible theory along the lines of laziness. Starting from the strongly unsolvables as the meaningless terms, we define and investigate properties of lazy (or weakly sensible) \u03bb-theories, lazy \u03bb-models and a number of lazy behavioural preorders on \u03bb-terms. In the second part, we show that all these notions have a natural place in a class of lazy PSE-models. A major result of this paper is a new local structure theorem for lazy PSE-models. This characterizes the ordering between denotations of \u03bb-terms in the model by a new lazy behavioural preorder.", "total_citations": 10, "citation_graph": {"1996": 3, "1997": 0, "1998": 1, "1999": 1, "2000": 0, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 1, "2006": 1, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 1, "2013": 0, "2014": 0, "2015": 1, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 0, "2022": 0, "2023": 1}}, {"title": "A differential-form pullback programming language for higher-order reverse-mode automatic differentiation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:kh2fBNsKQNwC", "authors": ["Carol Mak", "Luke Ong"], "publication_date": "2020/2/19", "journal": "arXiv preprint arXiv:2002.08241", "description": "Building on the observation that reverse-mode automatic differentiation (AD) -- a generalisation of backpropagation -- can naturally be expressed as pullbacks of differential 1-forms, we design a simple higher-order programming language with a first-class differential operator, and present a reduction strategy which exactly simulates reverse-mode AD. We justify our reduction strategy by interpreting our language in any differential -category that satisfies the Hahn-Banach Separation Theorem, and show that the reduction strategy precisely captures reverse-mode AD in a truly higher-order setting.", "total_citations": 9, "citation_graph": {"2021": 4, "2022": 4, "2023": 1}}, {"title": "Deciding secrecy of security protocols for an unbounded number of sessions: The case of depth-bounded processes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:tYavs44e6CUC", "authors": ["Emanuele D\u2019Osualdo", "Luke Ong", "Alwen Tiu"], "publication_date": "2017/8/21", "conference": "2017 IEEE 30th Computer Security Foundations Symposium (CSF)", "description": "We introduce a new class of security protocols with an unbounded number of sessions and unlimited fresh data for which the problem of secrecy is decidable. The only constraint we place on the class is a notion of depthboundedness. Precisely we prove that, restricted to messages of up to a given size, secrecy is decidable for all depthbounded processes. This decidable fragment of security protocols captures many real-world symmetric key protocols, including Needham-Schroeder Symmetric Key, Otway-Rees, and Yahalom.", "total_citations": 9, "citation_graph": {"2017": 3, "2018": 1, "2019": 2, "2020": 0, "2021": 1, "2022": 2}}, {"title": "An approach to deciding the observational equivalence of Algol-like languages", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:RYcK_YlVTxYC", "authors": ["C-HL Ong"], "publication_date": "2004/12/1", "journal": "Annals of Pure and Applied Logic", "description": "We prove that the observational equivalence of third-order finitary (i.e. recursion-free) Idealized Algol (IA) is decidable using Game Semantics. By modelling the state explicitly in our games, we show that the denotation of a term M of this fragment of IA is a compactly innocent strategy-with-state, i.e. the strategy is generated by a finite view function fM. Given any such fM, we construct a real-time deterministic pushdown automaton (DPDA) that recognizes the complete plays of the knowing-strategy denotation of M. Since such plays characterize observational equivalence, and there is an algorithm for deciding whether any two DPDAs recognize the same language, we obtain a procedure for deciding the observational equivalence of third-order finitary IA. Restricted to second-order terms, the DPDA representation cuts down to a deterministic finite automaton; thus our approach gives a new proof of Ghica and McCusker \u2026", "total_citations": 9, "citation_graph": {"2005": 1, "2006": 1, "2007": 0, "2008": 2, "2009": 2, "2010": 1, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 1, "2016": 0, "2017": 1}}, {"title": "A generic strong normalization argument: Application to the calculus of constructions", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:M3ejUd6NZC8C", "authors": ["C-H Luke Ong", "Eike Ritter"], "publication_date": "1994", "journal": "Computer Science Logic", "description": "Hyland and Ong [HO93] recently showed that given an arbitrary (right-absorptive) conditionally partial combinatory algebra (Cpca), there is a systematic way to construct a Kreisel-style modified realizability topos which has more than sufficient completeness properties to provide a categorical semantics for a wide range of higher type theories. Based on the topos generated from the C-pca of an appropriate quotient of the strongly normalising untyped \u03bb*-terms (where * is just a formal constant), they obtained a \u201cgeneric\u201d strong normalization argument. This argument reduces the strong normalization property of a class of higher type theories (up to F \u03c9) to the validity of two \u201cstripping arguments\u201d which are reasonably easy to verify. This paper reports work which carries the same programme a step further. We illustrate the general applicability and simplicity of the argument by bringing it to bear on the demanding \u2026", "total_citations": 9, "citation_graph": {"1994": 1, "1995": 0, "1996": 1, "1997": 1, "1998": 2, "1999": 0, "2000": 0, "2001": 0, "2002": 1, "2003": 0, "2004": 1, "2005": 1, "2006": 0, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 1}}, {"title": "A concrete presentation of game semantics", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:ns9cj8rnVeAC", "authors": ["William Blum", "C-H Luke Ong"], "publication_date": "2008", "description": "We briefly present a new representation theory for game semantics which is very concrete: instead of playing in an arena game in which P plays the innocent strategy given by a term, the same game is played out over (a souped up version of) the abstract syntax tree of the term itself. The plays that are thus traced out are called traversals. More abstractly, traversals are the justified sequences that are obtained by performing parallel-composition less the hiding. After stating and explaining a number of Path-Traversal Correspondence Theorems, we present a tool for game semantics based on the new representation.", "total_citations": 8, "citation_graph": {"2011": 1, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 1, "2017": 3, "2018": 1, "2019": 1}}, {"title": "Polynomial Probabilistic Invariants and the Optional Stopping Theorem", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:86PQX7AUzd4C", "authors": ["Anne Schreuder", "C-H Luke Ong"], "publication_date": "2019/10/25", "journal": "arXiv preprint arXiv:1910.12634", "description": "In this paper we present methods for the synthesis of polynomial invariants for probabilistic transition systems. Our approach is based on martingale theory. We construct invariants in the form of polynomials over program variables, which give rise to martingales. These polynomials are program invariants in the sense that their expected value upon termination is the same as their value at the start of the computation. In order to guarantee this we apply the Optional Stopping Theorem. Concretely, we present two approaches. The first is restricted to linear systems. In this case under positive almost sure termination there is a reduction to finding linear invariants for deterministic transition systems. Secondly, by exploiting geometric persistence properties we construct martingale invariants for general polynomial transition system. We have implemented this approach and it works on our examples.", "total_citations": 7, "citation_graph": {"2020": 1, "2021": 2, "2022": 2, "2023": 2}}, {"title": "Information flow analysis for a dynamically typed language with staged metaprogramming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:q3oQSFYPqjQC", "authors": ["Martin Lester", "Luke Ong", "Max Sch\u00e4fer"], "publication_date": "2016/1/1", "journal": "Journal of Computer Security", "description": "Web applications written in JavaScript are regularly used for dealing with sensitive or personal data. Consequently, reasoning about their security properties has become an important problem, which is made very difficult by the highly dynamic nature of the language, particularly its support for runtime code generation via eval. In order to deal with this, we propose to investigate security analyses for languages with more principled forms of dynamic code generation.", "total_citations": 7, "citation_graph": {"2015": 4, "2016": 1, "2017": 0, "2018": 1}}, {"title": "EGuaranteeNash for Boolean games is NEXP-hard", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:5awf1xo2G04C", "authors": ["Egor Ianovski", "Luke Ong"], "publication_date": "2013/12/15", "journal": "arXiv preprint arXiv:1312.4114", "description": "Boolean games are an expressive and natural formalism through which to investigate problems of strategic interaction in multiagent systems. Although they have been widely studied, almost all previous work on Nash equilibria in Boolean games has focused on the restricted setting of pure strategies. This is a shortcoming as finite games are guaranteed to have at least one equilibrium in mixed strategies, but many simple games fail to have pure strategy equilibria at all. We address this by showing that a natural decision problem about mixed equilibria: determining whether a Boolean game has a mixed strategy equilibrium that guarantees every player a given payoff, is NEXP-hard. Accordingly, the variety of the problem is NEXP-complete. The proof can be adapted to show coNEXP-hardness of a similar question: whether all Nash equilibria of a Boolean game guarantee every player at least the given payoff.", "total_citations": 7, "citation_graph": {"2014": 1, "2015": 1, "2016": 0, "2017": 1, "2018": 2, "2019": 0, "2020": 0, "2021": 1, "2022": 1}}, {"title": "Games characterizing levy\u2013longo trees", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:g5m5HwL7SMYC", "authors": ["C-HL Ong", "Pietro Di Gianantonio"], "publication_date": "2004/1/26", "journal": "Theoretical computer science", "description": "We present a simple strongly universal innocent game model for Levy\u2013Longo trees, i.e. every point in the model is the denotation of a unique Levy\u2013Longo tree. The observational quotient of the model then gives a universal, and hence fully abstract, model of the pure Lazy Lambda Calculus.", "total_citations": 7, "citation_graph": {"2005": 1, "2006": 0, "2007": 1, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 1, "2019": 0, "2020": 1, "2021": 0, "2022": 2, "2023": 1}}, {"title": "Adapting innocent game models for the B\u00f6hm tree \u03bb-theory", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:hC7cP41nSMkC", "authors": ["Andrew D Ker", "Hanno Nickau", "C-H Luke Ong"], "publication_date": "2003/11/3", "journal": "Theoretical computer science", "description": "We present a game model of the untyped \u03bb-calculus, with equational theory equal to the B\u00f6hm tree \u03bb-theory B , which is universal (i.e. every element of the model is definable by some term). This answers a question of Di Gianantonio, Franco and Honsell. We build on our earlier work, which uses the methods of innocent game semantics to develop a universal model inducing the maximal consistent sensible theory H \u2217. To our knowledge these are the first syntax-independent universal models of the untyped \u03bb-calculus.", "total_citations": 7, "citation_graph": {"2004": 1, "2005": 1, "2006": 0, "2007": 1, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 1, "2019": 0, "2020": 1, "2021": 0, "2022": 1, "2023": 1}}, {"title": "A Semantic View of Classical Proofs: Type-Theoretic", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:evX43VCCuoAC", "authors": ["CHL Ong"], "publication_date": "1996", "journal": "Categorical, and Denotational Characterizations, Linear Logic", "total_citations": 7, "citation_graph": {"1998": 2, "1999": 2, "2000": 2, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 0, "2008": 0, "2009": 1}}, {"title": "Nonparametric hamiltonian monte carlo", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:HtEfBTGE9r8C", "authors": ["Carol Mak", "Fabian Zaiser", "Luke Ong"], "publication_date": "2021/7/1", "conference": "International Conference on Machine Learning", "description": "Probabilistic programming uses programs to express generative models whose posterior probability is then computed by built-in inference engines. A challenging goal is to develop general purpose inference algorithms that work out-of-the-box for arbitrary programs in a universal probabilistic programming language (PPL). The densities defined by such programs, which may use stochastic branching and recursion, are (in general) nonparametric, in the sense that they correspond to models on an infinite-dimensional parameter space. However standard inference algorithms, such as the Hamiltonian Monte Carlo (HMC) algorithm, target distributions with a fixed number of parameters. This paper introduces the Nonparametric Hamiltonian Monte Carlo (NP-HMC) algorithm which generalises HMC to nonparametric models. Inputs to NP-HMC are a new class of measurable functions called \u201ctree representable\u201d, which serve as a language-independent representation of the density functions of probabilistic programs in a universal PPL. We provide a correctness proof of NP-HMC, and empirically demonstrate significant performance improvements over existing approaches on several nonparametric examples.", "total_citations": 6, "citation_graph": {"2022": 4, "2023": 1}}, {"title": "On probabilistic termination of functional programs with continuous distributions", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:anf4URPfarAC", "authors": ["Raven Beutner", "Luke Ong"], "publication_date": "2021/6/19", "book": "Proceedings of the 42nd ACM SIGPLAN International Conference on Programming Language Design and Implementation", "description": "We study termination of higher-order probabilistic functional programs with recursion, stochastic conditioning and sampling from continuous distributions. Reasoning about the termination probability of programs with continuous distributions is hard, because the enumeration of terminating executions cannot provide any non-trivial bounds. We present a new operational semantics based on traces of intervals, which is sound and complete with respect to the standard sampling-based semantics, in which (countable) enumeration can provide arbitrarily tight lower bounds. Consequently we obtain the first proof that deciding almost-sure termination (AST) for programs with continuous distributions is \u03a020-complete (for CbN). We also provide a compositional representation of our semantics in terms of an intersection type system. In the second part, we present a method of proving AST for non-affine programs, i.e., recursive \u2026", "total_citations": 6, "citation_graph": {"2021": 1, "2022": 4, "2023": 1}}, {"title": "On s-finite measures and kernels", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:S16KYo8Pm5AC", "authors": ["Matthijs V\u00e1k\u00e1r", "Luke Ong"], "publication_date": "2018/10/3", "journal": "arXiv preprint arXiv:1810.01837", "description": "In this note, we develop some of the basic theory of s-finite (measures and) kernels, a little-studied class of kernels which Staton has recently convincingly argued is precisely the semantic counterpart of (first-order) probabilistic programs. We discuss their Carath\\'eodory extension and extend Staton's analysis of their product measures. We give various characterisations of such kernels and discuss their relationship to the more commonly studied classes of -finite, subprobability and probability kernels. We use these characterisations to establish suitable Radon-Nikod\\'ym, Lebesgue decomoposition and disintegration theorems for s-finite kernels. We discuss s-finite analogues of the classical randomisation lemma for probability kernels. Throughout, we give some examples to explain the connection with (first-order) probabilistic programming. Finally, we briefly explore how some of these results extend to quasi-Borel spaces, hence how they apply to higher-order probabilistic programming.", "total_citations": 6, "citation_graph": {"2019": 1, "2020": 0, "2021": 1, "2022": 2, "2023": 2}}, {"title": "S-finite kernels and game semantics for probabilistic programming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:k8Z6L05lTy4C", "authors": ["Luke Ong", "Matthijs V\u00e1k\u00e1r"], "publication_date": "2018", "journal": "POPL 2018 Workshop on Probabilistic Programming Semantics (PPS)", "description": "It is a well-known result that higher-order functions cannot generally be interpreted within the confines of standard measure theory, in the sense that the category of measurable spaces and measurable functions is not cartesian closed. This has led authors to consider more general semantic structures, like quasi Borel spaces, for analysing continuous distribution probabilistic programs involving higher-order functions [3]. In this paper, we argue that this lack of measurable space structure on sets of measurable functions is due to the extensional nature of the homset and that classical measure theory is entirely sufficient for studying higher-order probabilistic computation if we work with a more intensional notion of function. In particular, we present a framework for \u201cmeasurable game semantics\u201d as a natural combination of traditional game semantics with standard measure theory. Staton [7] has argued convincingly that s-finite kernels, a little studied class of kernels, are necessary and sufficient for the semantics of first-order probabilistic programs. In our game semantics, we show how they can also be used to give semantics for higher-order probabilistic programs. For this reason, we first establish some of their basic theory. As a proof of concept, we demonstrate that our measurable game semantics suffices to give a model of a higher-order probabilistic programming language with continuous distributions. A strength of game semantics is that we can choose to include or exclude various classes of effects like recursion, local state and control operators by varying our notion of strategy in order to obtain fully abstract models for the corresponding \u2026", "total_citations": 6, "citation_graph": {"2018": 1, "2019": 2, "2020": 2, "2021": 1}}, {"title": "Computation, Logic, Games, and Quantum Foundations-The Many Facets of Samson Abramsky: Essays Dedicted to Samson Abramsky on the Occasion of His 60th Birthday", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&pagesize=100&citation_for_view=gNFel3QAAAAJ:wbdj-CoPYUoC", "authors": ["Bob Coecke", "Luke Ong", "Prakash Panangaden"], "publication_date": "2013/11/18", "description": "This Festschrift volume, published in honor of Samson Abramsky, contains contributions written by some of his colleagues, former students, and friends. In celebration of the 60th birthday of Samson Abramsky, a conference was held in Oxford, UK, during May 28-30, 2010. The papers in this volume represent his manifold contributions to semantics, logic, games, and quantum mechanics.", "total_citations": 6, "citation_graph": {"2016": 2, "2017": 1, "2018": 1, "2019": 0, "2020": 0, "2021": 1, "2022": 1}}, {"title": "Verification of higher-order computation: a game-semantic approach", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:j3f4tGmQtD8C", "authors": ["C-H Luke Ong"], "publication_date": "2008", "journal": "Programming Languages and Systems", "description": "We survey recent developments in an approach to the verification of higher-order computation based on game semantics. Higher-order recursion schemes are in essence (programs of) the simply-typed lambda calculus with recursion, generated from uninterpreted first-order symbols. They are a highly expressive definitional device for infinite structures such as word languages and infinite ranked trees. As applications of a representation theory of innocent strategies based on traversals, we present a recent advance in the model checking of trees generated by recursion schemes, and the first machine characterization of recursion schemes (by a new variant class of higher-order pushdown automata called collapsible pushdown automata). We conclude with some speculative remarks about reachability checking of functional programs. A theme of the work is the fruitful interplay of ideas between the \u2026", "total_citations": 6, "citation_graph": {"2009": 1, "2010": 0, "2011": 0, "2012": 0, "2013": 1, "2014": 0, "2015": 1, "2016": 3}}, {"title": "Hierarchies of infinite structures generated by pushdown automata and recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:qUcmZB5y_30C", "authors": ["C-H Luke Ong"], "publication_date": "2007", "journal": "Mathematical Foundations of Computer Science 2007", "description": "Higher-order recursion schemes and higher-order pushdown automata are closely related methods for generating infinite hierarchies of infinite structures. Subsuming well-known classes of models of computation, these rich hierarchies (of word languages, trees, and graphs respectively) have excellent model-checking properties. In this extended abstract, we survey recent expressivity and decidability results about these infinite structures.", "total_citations": 6, "citation_graph": {"2009": 1, "2010": 2, "2011": 1, "2012": 0, "2013": 0, "2014": 0, "2015": 1, "2016": 1}}, {"title": "A Linear-time Algorithm for Verifying MLL Proof Nets via Essential Nets", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:vV6vV6tmYwMC", "authors": ["AS Murawski", "C-H Luke Ong"], "publication_date": "1999", "conference": "Collected Papers of the Oxford-Microsoft Symposium in Celebration of the Work of", "total_citations": 6, "citation_graph": {"1999": 1, "2000": 1, "2001": 0, "2002": 0, "2003": 2, "2004": 0, "2005": 0, "2006": 1, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 1}}, {"title": "Defunctionalization of higher-order constrained Horn clauses", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:i2xiXl-TujoC", "authors": ["Long Pham", "Steven J Ramsay", "C-H Luke Ong"], "publication_date": "2018/10/8", "journal": "arXiv preprint arXiv:1810.03598", "description": "Building on the successes of satisfiability modulo theories (SMT), Bj{\\o}rner et al. initiated a research programme advocating Horn constraints as a suitable basis for automatic program verification. The notion of first-order constrained Horn clauses has recently been extended to higher-order logic by Cathcart Burn et al. To exploit the remarkable efficiency of SMT solving, a natural approach to solve systems of higher-order Horn constraints is to reduce them to systems of first-order Horn constraints. This paper presents a defunctionalization algorithm to achieve the reduction. Given a well-sorted higher-order constrained Horn clause (HoCHC) problem instance, the defunctionalization algorithm constructs a first-order well-sorted constrained Horn clause problem. In addition to well-sortedness of the algorithm's output, we prove that if an input HoCHC is solvable, then the result of its defunctionalization is solvable. The converse also holds, which we prove using a recent result on the continuous semantics of HoCHC. To our knowledge, this defunctionalization algorithm is the first sound and complete reduction from systems of higher-order Horn constraints to systems of first-order Horn constraints. We have constructed DefMono, a prototype implementation of the defunctionalization algorithm. It first defunctionalizes an input HoCHC problem and then feeds the result into a backend SMT solver. We have evaluated the performance of DefMono empirically by comparison with two other higher-order verification tools.", "total_citations": 5, "citation_graph": {"2018": 1, "2019": 1, "2020": 2, "2021": 1}}, {"title": "On hierarchical communication topologies in the-calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:j8SEvjWlNXcC", "authors": ["Emanuele D\u2019Osualdo", "C-H Luke Ong"], "publication_date": "2016/4/3", "book": "European Symposium on Programming", "description": "This paper is concerned with the shape invariants satisfied by the communication topology of s, and the automatic inference of these invariants. A P is hierarchical if there is a finite forest such that the communication topology of every term reachable from P satisfies a -shaped invariant. We design a static analysis to prove a term hierarchical by means of a novel type system that enjoys decidable inference. The soundness proof of the type system employs a non-standard view of reactions. The coverability problem for hierarchical terms is decidable. This is proved by showing that every hierarchical term is depth-bounded, an undecidable property known in the literature. We thus obtain an expressive static fragment of the with decidable safety verification problems.", "total_citations": 5, "citation_graph": {"2017": 2, "2018": 0, "2019": 1, "2020": 0, "2021": 0, "2022": 1}}, {"title": "More Universal Game Models of Untyped \u03bb-Calculus: The B\u00f6hm Tree Strikes Back", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:35N4QoGY0k4C", "authors": ["AD Ker", "H Nickau", "C-HL Ong"], "publication_date": "1999", "conference": "CSL'99 CONF. PROC., LNCS", "total_citations": 5, "citation_graph": {"1999": 1, "2000": 1, "2001": 1, "2002": 0, "2003": 0, "2004": 0, "2005": 1, "2006": 0, "2007": 0, "2008": 1}}, {"title": "Type Theories for Autonomous and-Autonomous Categories: I. Type Theories and Rewrite Systems II. Internal Languages and Coherence Theorems", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:l7t_Zn2s7bgC", "authors": ["TW Koh", "CHL Ongy"], "publication_date": "1998", "description": "We introduce a family of type theories as internal languages for autonomous (or symmetric monoidal closed) and-autonomous categories, in the same sense that simply-typed-calculus (augmented by appropriate constructs for products and the terminal object) is the internal language for cartesian closed categories. The rules are presented in the style of Gentzen's Sequent Calculus. A key feature is the systematic treatment of naturality conditions by explicitly representing the categorical composition, or cut in the type theory, by explicit substitution, and the introduction of new let-constructs, one for each of the three type constructors>; and (, and a Parigot-style-abstraction to give expression to the involutive negation. The commutation congruences of these theories are precisely those imposed by the naturality conditions. In particular the type theory for-autonomous categories may be regarded as a term assignment system for the multiplicative (;(;?;>)-fragment of Classical Linear Logic (with tensor unit> and par unit?). The associated rewrite systems are all strongly normalizing; modulo a simple notion of congruence, they are also con uent.\nIn Part II, we show that the eight equational and four congruence axioms of the-autonomous type theory completely characterise-autonomous categories. More precisely we prove that that there is a canonical interpretation of the type theories in-autonomous categories which is complete ie for any type theory, there is a-autonomous category whose theory is exactly that. As a corollary, we solve a Coherence Problem a la Lambek 15]: the equality of maps in any free-autonomous category (generated from a discrete \u2026", "total_citations": 5, "citation_graph": {"1999": 2, "2000": 0, "2001": 0, "2002": 0, "2003": 1, "2004": 0, "2005": 2}}, {"title": "Pi-calculus, dialogue games and PCF, FPCA'95", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:edDO8Oi4QzsC", "authors": ["M Hyland", "L Ong"], "publication_date": "1995", "total_citations": 5, "citation_graph": {"1996": 1, "1997": 0, "1998": 0, "1999": 1, "2000": 0, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 0, "2008": 1, "2009": 0, "2010": 0, "2011": 1}}, {"title": "On full abstraction for PCF (preliminary version)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:vDijr-p_gm4C", "authors": ["JME Hyland", "CHL Ong"], "publication_date": "1994/10", "journal": "preprint", "total_citations": 5, "citation_graph": {"1995": 1, "1996": 2, "1997": 0, "1998": 0, "1999": 0, "2000": 0, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 1}}, {"title": "Guaranteed bounds for posterior inference in universal probabilistic programming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:DUooU5lO8OsC", "authors": ["Raven Beutner", "C-H Luke Ong", "Fabian Zaiser"], "publication_date": "2022/6/9", "book": "Proceedings of the 43rd ACM SIGPLAN International Conference on Programming Language Design and Implementation", "description": "We propose a new method to approximate the posterior distribution of probabilistic programs by means of computing guaranteed bounds. The starting point of our work is an interval-based trace semantics for a recursive, higher-order probabilistic programming language with continuous distributions. Taking the form of (super-/subadditive) measures, these lower/upper bounds are non-stochastic and provably correct: using the semantics, we prove that the actual posterior of a given program is sandwiched between the lower and upper bounds (soundness); moreover, the bounds converge to the posterior (completeness). As a practical and sound approximation, we introduce a weight-aware interval type system, which automatically infers interval bounds on not just the return value but also the weight of program executions, simultaneously. We have built a tool implementation, called GuBPI, which automatically \u2026", "total_citations": 4, "citation_graph": {"2022": 1, "2023": 3}}, {"title": "Supermartingales, ranking functions and probabilistic lambda calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:LO7wyVUgiFcC", "authors": ["Andrew Kenyon-Roberts", "C-H Luke Ong"], "publication_date": "2021/6/29", "conference": "2021 36th Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)", "description": "We introduce a method for proving almost sure termination in the context of lambda calculus with continuous random sampling and explicit recursion, based on ranking supermartingales. This result is extended in three ways. Antitone ranking functions have weaker restrictions on how fast they must decrease, and are applicable to a wider range of programs. Sparse ranking functions take values only at a subset of the program's reachable states, so they are simpler to define and more flexible. Ranking functions with respect to alternative reduction strategies give yet more flexibility, and significantly increase the applicability of the ranking supermartingale approach to proving almost sure termination, thanks to a novel (restricted) confluence result which is of independent interest. The notion of antitone ranking function was inspired by similar work by McIver, Morgan, Kaminski and Katoen in the setting of a first-order \u2026", "total_citations": 4, "citation_graph": {"2021": 2, "2022": 2}}, {"title": "Higher-Order Recursion Schemes and Collapsible Pushdown Automata: Logical Properties", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:_FM0Bhl9EiAC", "authors": ["Christopher H Broadbent", "Arnaud Carayol", "C-H Luke Ong", "Olivier Serre"], "publication_date": "2021/5/15", "journal": "ACM Transactions on Computational Logic (TOCL)", "description": "This article studies the logical properties of a very general class of infinite ranked trees, namely, those generated by higher-order recursion schemes. We consider, for both monadic second-order logic and modal <?TeX $\\mu$?>-calculus, three main problems: model-checking, logical reflection (a.k.a. global model-checking, that asks for a finite description of the set of elements for which a formula holds), and selection (that asks, if exists, for some finite description of a set of elements for which an MSO formula with a second-order free variable holds). For each of these problems, we provide an effective solution. This is obtained, thanks to a known connection between higher-order recursion schemes and collapsible pushdown automata and on previous work regarding parity games played on transition graphs of collapsible pushdown automata.", "total_citations": 4, "citation_graph": {"2021": 3, "2022": 0, "2023": 1}}, {"title": "The complexity of decision problems about equilibria in two-player Boolean games", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:M7yex6snE4oC", "authors": ["Egor Ianovski", "Luke Ong"], "publication_date": "2018/8/1", "journal": "Artificial Intelligence", "description": "Boolean games allow us to succinctly represent strategic games with binary payoffs in the case where the players' preferences have a structure readily expressible in propositional logic. Since their introduction, the computational aspects of Boolean games have been of interest to the multiagent community, but so far the focus has been exclusively on pure strategy equilibria. In this paper we consider the complexity of problems involving mixed strategy equilibria, such as the existence of an equilibrium satisfying a given payoff constraint. The results are obtained by the observation that a mixed strategy can hold enough information to encode the computation history of an exponential time Turing machine.", "total_citations": 4, "citation_graph": {"2019": 1, "2020": 1, "2021": 2}}, {"title": "Models of Higher-Order Computation: Recursion Schemes and Collapsible Pushdown Automata.", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:ldfaerwXgEUC", "authors": ["C-H Luke Ong"], "publication_date": "2010/3/9", "book": "Logics and Languages for Reliability and Security", "description": "We survey recent developments in a systematic approach to the verification of higher-order computation based on two models:(the respective higher-order hierarchies of) recursion schemes and pushdown automata. Higher-order recursion schemes are in essence the simply-typed lambda calculus with recursion, generated from uninterpreted first-order symbols. Higher-order pushdown automata are a generalisation of pushdown automata to higher-order stacks, which are iterations of stack of stacks. They are highly expressive definitional devices for word languages and such infinite structures as trees and graphs. We study the expressive power of the two models and the algorithmic properties of the infinite structures generated by them. As an algorithmic application of game semantics, we present recent results in the model checking of infinite trees generated by recursion schemes, and a machine characterisation of recursion schemes by a new variant of higher-order pushdown automata called collapsible pushdown automata. We survey recent advances in the solution of parity games over the configuration graphs of collapsible pushdown automata. We conclude with some remarks on an application to the verification of higher-order functional programs. A theme of the work is the fruitful interplay of ideas between the neighbouring fields of semantics and verification.", "total_citations": 4, "citation_graph": {"2011": 2, "2012": 1, "2013": 0, "2014": 1}}, {"title": "Model checking Algol-like languages using game semantics", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:TQgYirikUcIC", "authors": ["C-H Luke Ong"], "publication_date": "2002", "journal": "FST TCS 2002: Foundations of Software Technology and Theoretical Computer Science", "description": "We survey a recent development of Game Semantics in a new, algorithmic direction, with a view to applications in computer-assisted verification and program analysis.", "total_citations": 4, "citation_graph": {"2004": 2, "2005": 0, "2006": 1, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 1}}, {"title": "A linear-time algorithm for verifying MLL proof nets via essential nets", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:2P1L_qKh6hAC", "authors": ["AS Murawski", "C-H Luke Ong"], "publication_date": "2000", "conference": "Collected Papers of the Oxford-Microsoft Symposium in Celebration of the Work of", "total_citations": 4, "citation_graph": {"2000": 1, "2001": 0, "2002": 0, "2003": 1, "2004": 0, "2005": 0, "2006": 1, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 1}}, {"title": "Full completeness for multiplicative linear logic without the Mix-rule", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:LjlpjdlvIbIC", "authors": ["M Hyland", "L Ong"], "publication_date": "1993", "journal": "Preprint", "total_citations": 4, "citation_graph": {"1995": 1, "1996": 1, "1997": 0, "1998": 0, "1999": 0, "2000": 1, "2001": 0, "2002": 0, "2003": 0, "2004": 0, "2005": 0, "2006": 0, "2007": 1}}, {"title": "Cycleq: an efficient basis for cyclic equational reasoning", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:_5tno0g5mFcC", "authors": ["Eddie Jones", "C-H Luke Ong", "Steven Ramsay"], "publication_date": "2022/6/9", "book": "Proceedings of the 43rd ACM SIGPLAN International Conference on Programming Language Design and Implementation", "description": "We propose a new cyclic proof system for automated, equational reasoning about the behaviour of pure functional programs. The key to the system is the way in which cyclic proofs and equational reasoning are mediated by the use of contextual substitution as a cut rule. We show that our system, although simple, already subsumes several of the approaches to implicit induction variously known as \u201cinductionless induction\u201d, \u201crewriting induction\u201d, and \u201cproof by consistency\u201d. By restricting the form of the traces, we show that global correctness in our system can be verified incrementally, taking advantage of the well-known size-change principle, which leads to an efficient implementation of proof search. Our CycleQ tool, implemented as a GHC plugin, shows promising results on a number of standard benchmarks.", "total_citations": 3, "citation_graph": {"2023": 3}}, {"title": "Initial limit datalog: a new extensible class of decidable constrained horn clauses", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:0izLItjtcgwC", "authors": ["Toby Cathcart Burn", "Luke Ong", "Steven Ramsay", "Dominik Wagner"], "publication_date": "2021/6/29", "conference": "2021 36th Annual ACM/IEEE Symposium on Logic in Computer Science (LICS)", "description": "We present initial limit Datalog, a new extensible class of constrained Horn clauses for which the satisfiability problem is decidable. The class may be viewed as a generalisation to higher-order logic (with a simple restriction on types) of the first-order language limit DatalogZ (a fragment of Datalog modulo linear integer arithmetic), but can be instantiated with any suitable background theory. For example, the fragment is decidable over any countable well-quasi-order with a decidable first-order theory, such as natural number vectors under componentwise linear arithmetic, and words of a bounded, context-free language ordered by the subword relation. Formulas of initial limit Datalog have the property that, under some assumptions on the background theory, their satisfiability can be witnessed by a new kind of term model which we call entwined structures. Whilst the set of all models is typically uncountable, the set of \u2026", "total_citations": 3, "citation_graph": {"2022": 1, "2023": 2}}, {"title": "ML and extended branching VASS", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:BUYA1_V_uYcC", "authors": ["Conrad Cotton-Barratt", "Andrzej S Murawski", "C -H Luke Ong"], "publication_date": "2017", "conference": "Programming Languages and Systems: 26th European Symposium on Programming, ESOP 2017, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2017, Uppsala, Sweden, April 22\u201329, 2017, Proceedings 26", "description": "We prove that the observational equivalence problem for a finitary fragment of ML is recursively equivalent to the reachability problem for extended branching vector addition systems with states (EBVASS). Our proof uses the fully abstract game semantics of the language. We introduce a new class of automata, VPCMA, as a representation of the game semantics. VPCMA are a version of class memory automata equipped with a visibly pushdown stack; they serve as a bridge enabling interreducibility of decision problems between the game semantics and EBVASS. The results of this paper complete our programme to give an automata classification of the ML types with respect to the observational equivalence problem for closed terms.", "total_citations": 3, "citation_graph": {"2018": 1, "2019": 2}}, {"title": "Decidable models of recursive asynchronous concurrency", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:_Ybze24A_UAC", "authors": ["Jonathan Kochems", "C-H Luke Ong"], "publication_date": "2014/10/31", "journal": "arXiv preprint arXiv:1410.8852", "description": "Asynchronously communicating pushdown systems (ACPS) that satisfy the empty-stack constraint (a pushdown process may receive only when its stack is empty) are a popular decidable model for recursive programs with asynchronous atomic procedure calls. We study a relaxation of the empty-stack constraint for ACPS that permits concurrency and communication actions at any stack height, called the shaped stack constraint, thus enabling a larger class of concurrent programs to be modelled. We establish a close connection between ACPS with shaped stacks and a novel extension of Petri nets: Nets with Nested Coloured Tokens (NNCTs). Tokens in NNCTs are of two types: simple and complex. Complex tokens carry an arbitrary number of coloured tokens. The rules of NNCT can synchronise complex and simple tokens, inject coloured tokens into a complex token, and eject all tokens of a specified set of colours to predefined places. We show that the coverability problem for NNCTs is Tower-complete. To our knowledge, NNCT is the first extension of Petri nets, in the class of nets with an infinite set of token types, that has primitive recursive coverability. This result implies Tower-completeness of coverability for ACPS with shaped stacks.", "total_citations": 3, "citation_graph": {"2014": 1, "2015": 1, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 0, "2021": 1}}, {"title": "Information flow analysis for a dynamically typed functional language with staged metaprogramming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:XvxMoLDsR5gC", "authors": ["Martin Lester", "Luke Ong", "Max Schaefer"], "publication_date": "2013/2/13", "journal": "arXiv preprint arXiv:1302.3178", "description": "Web applications written in JavaScript are regularly used for dealing with sensitive or personal data. Consequently, reasoning about their security properties has become an important problem, which is made very difficult by the highly dynamic nature of the language, particularly its support for runtime code generation. As a first step towards dealing with this, we propose to investigate security analyses for languages with more principled forms of dynamic code generation. To this end, we present a static information flow analysis for a dynamically typed functional language with prototype-based inheritance and staged metaprogramming. We prove its soundness, implement it and test it on various examples designed to show its relevance to proving security properties, such as noninterference, in JavaScript. To our knowledge, this is the first fully static information flow analysis for a language with staged metaprogramming, and the first formal soundness proof of a CFA-based information flow analysis for a functional programming language.", "total_citations": 3, "citation_graph": {"2013": 1, "2014": 0, "2015": 0, "2016": 1, "2017": 0, "2018": 1}}, {"title": "Local computation of beta-reduction", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:7T2F9Uy0os0C", "authors": ["William Blum", "CH Luke Ong"], "publication_date": "2008", "journal": "Work In progress", "description": "Analyzing the effect that a syntactic restriction (such as safety) has on the game-47 semantic model is a difficult task since the main feature of game semantics is precisely to 48 be syntax-independent. The aim of this chapter is to establish an explicit correspondence 49 between the game denotation of a term and its syntax. This will be used in the next 50 chapter to give a characterization of the game semantics of the safe lambda calculus. 51 Our approach follows ideas recently introduced by Ong [1], namely the notion of com-52 putation tree of a simply-typed lambda-term and traversals over the computation tree. 53 A computation tree is just an abstract syntax tree (AST) representation of the \u03b7-long 54 normal form of a term. Traversals are justified sequences of nodes of the computation 55 tree respecting some formation rules. They are meant to describe the computation of the 56 term, but at the same time they carry information about the syntax of the term in the 57 following sense: the P-view of a traversal (computed in the same way as P-view of plays in 58 game semantics) is a path in the computation tree. Traversals provide a way to perform 59 local computation of \u03b2-reductions as opposed to a global approach where \u03b2-redexes are 60 contracted using substitution. 61\nThe culmination of this chapter is the Correspondence Theorem (Theorem 2.2). It 62 states that traversals over the computation tree are just representations of the uncovering 63 of plays in the strategy-denotation of the term. Hence there is an isomorphism between the 64 strategy denotation of a term and its revealed game denotation. In a nutshell, the revealed 65 denotation is \u2026", "total_citations": 3, "citation_graph": {"2008": 1, "2009": 0, "2010": 0, "2011": 1, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 0, "2017": 0, "2018": 0, "2019": 0, "2020": 1}}, {"title": "Some results on a game-semantic approach to verifying finitely-presentable infinite structures", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:HDshCWvjkbEC", "authors": ["C-H Luke Ong"], "publication_date": "2006", "journal": "Computer Science Logic", "description": "We present some results on a game-semantic approach to verifying infinite structures that are generated by higher-order recursion schemes. The key idea is a certain Transference Principle from the structure generated by a given recursion scheme to an auxiliary computation tree, which is itself generated by a related order-0 recursion scheme. By a structural analysis of the computation tree based on the innocent game semantics of the recursion scheme, we can infer certain properties of the generated structure by appropriate algorithmic analysis of the computation tree.", "total_citations": 3, "citation_graph": {"2007": 2, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2013": 1}}, {"title": "Exhausting Strategies, Joker Games and Full Completeness for IMLL with Unit (Preliminary Version)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:isC4tDSrTZIC", "authors": ["Andrzej S Murawski", "C-HL Ong"], "publication_date": "1999/1/1", "journal": "Electronic Notes in Theoretical Computer Science", "description": "We present a game description of free symmetric monoidal closed categories, which can also be viewed as a fully complete model for the Intuitionistic Multiplicative Linear Logic with the tensor unit. We model the unit by a distinguished one-move game called Joker. Special rules apply to the joker move. Proofs are modelled by what we call conditionally exhausting strategies, which are deterministic and total only at positions where no joker move exists in the immediate neighbourhood, and satisfy a kind of reachability condition called P-exhaustion. We use the model to give an analysis of a counting problem in free autonomous categories which generalises the Triple Unit Problem.", "total_citations": 3, "citation_graph": {"2002": 1, "2003": 0, "2004": 0, "2005": 1, "2006": 0, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 1}}, {"title": "A General Precongruence Theorem for Applicative Bisimulations", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:3fE2CSJIrl8C", "authors": ["C-H Luke Ong"], "publication_date": "1992", "book": "Draft", "total_citations": 3, "citation_graph": {"1997": 1, "1998": 1, "1999": 0, "2000": 0, "2001": 1}}, {"title": "The difference lambda-calculus: A language for difference categories", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:9pM33mqn1YgC", "authors": ["Mario Alvarez-Picallo", "C-H Luke Ong"], "publication_date": "2020/11/30", "journal": "arXiv preprint arXiv:2011.14476", "description": "Cartesian difference categories are a recent generalisation of Cartesian differential categories which introduce a notion of \"infinitesimal\" arrows satisfying an analogue of the Kock-Lawvere axiom, with the axioms of a Cartesian differential category being satisfied only \"up to an infinitesimal perturbation\". In this work, we construct a simply-typed calculus in the spirit of the differential lambda-calculus equipped with syntactic infinitesimals and show how its models correspond to difference lambda-categories, a family of Cartesian difference categories equipped with suitably well-behaved exponentials.", "total_citations": 2, "citation_graph": {"2021": 1, "2022": 1}}, {"title": "The extended theory of trees and algebraic (co) datatypes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:4fGpz3EwCPoC", "authors": ["Fabian Zaiser", "C-H Luke Ong"], "publication_date": "2020/5/13", "journal": "arXiv preprint arXiv:2005.06659", "description": "The first-order theory of finite and infinite trees has been studied since the eighties, especially by the logic programming community. Following Djelloul, Dao and Fr\\\"uhwirth, we consider an extension of this theory with an additional predicate for finiteness of trees, which is useful for expressing properties about (not just datatypes but also) codatatypes. Based on their work, we present a simplification procedure that determines whether any given (not necessarily closed) formula is satisfiable, returning a simplified formula which enables one to read off all possible models. Our extension makes the algorithm usable for algebraic (co)datatypes, which was impossible in their original work due to restrictive assumptions. We also provide a prototype implementation of our simplification procedure and evaluate it on instances from the SMT-LIB.", "total_citations": 2, "citation_graph": {"2020": 1, "2021": 1}}, {"title": "ML, visibly pushdown class memory automata, and extended branching vector addition systems with states", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:5qfkUJPXOUwC", "authors": ["Conrad Cotton-Barratt", "Andrzej S Murawski", "C-H Luke Ong"], "publication_date": "2019/4/26", "journal": "ACM Transactions on Programming Languages and Systems (TOPLAS)", "description": "We prove that the observational equivalence problem for a finitary fragment of the programming langauge ML is recursively equivalent to the reachability problem for extended branching vector addition systems with states (EBVASS). This result has two natural and independent parts. We first prove that the observational equivalence problem is equivalent to the emptiness problem for a new class of class memory automata equipped with a visibly pushdown stack, called Visibly Pushdown Class Memory Automata (VPCMA). Our proof uses the fully abstract game semantics of the language. We then prove that the VPCMA emptiness problem is equivalent to the reachability problem for EBVASS. The results of this article complete our programme to give an automata classification of the ML types with respect to the observational equivalence problem for closed terms.", "total_citations": 2, "citation_graph": {"2021": 1, "2022": 0, "2023": 1}}, {"title": "Higher-order constrained horn clauses and refinement types", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:L7CI7m0gUJcC", "authors": ["Toby Cathcart Burn", "C-H Luke Ong", "Steven J Ramsay"], "publication_date": "2017/5/17", "journal": "arXiv preprint arXiv:1705.06216", "description": "Motivated by applications in automated verification of higher-order functional programs, we develop a notion of constrained Horn clauses in higher-order logic and a decision problem concerning their satisfiability. We show that, although satisfiable systems of higher-order clauses do not generally have least models, there is a notion of canonical model obtained through a reduction to a problem concerning a kind of monotone logic program. Following work in higher-order program verification, we develop a refinement type system in order to reason about and automate the search for models. This provides a sound but incomplete method for solving the decision problem. Finally, we show that an extension of the decision problem in which refinement types are used directly as guards on existential quantifiers can be reduced to the original problem. This result can be used to show that properties of higher-order functions that are definable using refinement types are also expressible using higher-order constrained Horn clauses.", "total_citations": 2, "citation_graph": {"2018": 1, "2019": 1}}, {"title": "Some advances in linear logic", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:eq2jaN3J8jMC", "authors": ["Michele Pagani", "Jean Goubault-Larrecq", "ENS Cachan", "Simone Martini", "Laurent Regnier", "Thomas Ehrhard", "Christophe Fouquer\u00e9", "Stefano Guerrini", "Luke Ong"], "publication_date": "2013/12", "journal": "M\u00e9moire pour l\u2019obtention de l\u2019habilitation \u00e0 diriger les recherches", "description": "Ce document a \u00e9t\u00e9 con\u00e7u pour d\u00e9crire mon parcours scientifique depuis la fin de ma th\u00e8se de doctorat (avril 2006) jusqu\u2019\u00e0 aujourd\u2019hui. En cons\u00e9quence, les sujets suivent \u00e0 peu pr\u00e8s l\u2019ordre chronologique de ma recherche afin de donner une id\u00e9e de son \u00e9volution.\nApr\u00e8s ma th\u00e8se, je me suis concentr\u00e9 sur l\u2019\u00e9tude des propri\u00e9t\u00e9s de r\u00e9\u00e9criture de l\u2019\u00e9limination des coupures de la logique lin\u00e9aire et de son extension diff\u00e9rentielle. J\u2019ai \u00e9t\u00e9 attir\u00e9 d\u2019une part par ses relations avec des calculs avec ressources born\u00e9es et de concurrence, de l\u2019autre part par son \u00e9l\u00e9gance et sa robustesse en tant que syst\u00e8me de r\u00e9\u00e9criture. C\u2019est seulement \u00e0 travers mes travaux r\u00e9cents que j\u2019ai pu saisir toute la richesse des s\u00e9mantiques quantitatives, qui sont \u00e0 l\u2019origine de la logique lin\u00e9aire et de son extension diff\u00e9rentielle, et qui leur donne un fondement math\u00e9matique et une allure particuli\u00e8re parmi d\u2019autres syst\u00e8mes logiques. Les s\u00e9mantiques quantitatives s\u2019 inscrivent dans un profond renouvellement de la correspondance de Curry-Howard, entre la s\u00e9mantique formelle des langages de programmation d\u2019un c\u00f4t\u00e9 et la th\u00e9orie de la d\u00e9monstration de l\u2019autre. L\u2019alg\u00e8bre lin\u00e9aire et l\u2019analyse fonctionnelle s\u2019 imposent comme troisi\u00e8me p\u00f4le de cette correspondance, en mettant au centre la notion de ressource du calcul. Il s\u2019 agit d\u2019une approche tr\u00e8s riche, qui peut potentiellement \u00eatre appliqu\u00e9e dans diff\u00e9rents domaines de l\u2019informatique th\u00e9orique. Nous en sommes maintenant \u00e0 un stade de la recherche o\u00f9 cette potentialit\u00e9 peut et doit \u00eatre transform\u00e9e en acte. Il nous faut ainsi donner des exemples concrets d\u2019applications de cette approche: une \u00e9tude de nouvelles primitives \u2026", "total_citations": 2, "citation_graph": {"2023": 2}}, {"title": "Verifying Erlang-style concurrency automatically", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:uWQEDVKXjbEC", "authors": ["Emanuele D\u2019Osualdo", "Jonathan Kochems", "CH Luke Ong"], "publication_date": "2011", "description": "We present an approach to verify Erlang-style concurrent programs automatically, using a combination of static analysis and infinite-state model checking. Erlang is a higher-order, concurrent and dynamically-typed functional language with patternmatching algebraic data types, augmented with process creation and message-passing primitives. We introduce Communicating Pattern-Matching Recursion Schemes (CPMRS) as a simple and accurate model of computation for the formal analysis of Erlang programs. To demonstrate that CPMRS is fit for purpose, we use it to analyse the reachability problem of higher-order programs that spawn a fixed number of processes, each equipped with an unbounded mailbox. Since the problem is undecidable, our strategy is to compute an over-approximation of the reachable program points. The approximation has three stages. First we perform a binding analysis of the input \u2026", "total_citations": 2, "citation_graph": {"2013": 1, "2014": 1}}, {"title": "A saturation method for the modal mu-calculus with backwards modalities over pushdown systems", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:RHpTSmoSYBkC", "authors": ["Matthew Hague", "C-HL Ong"], "publication_date": "2010/6/30", "journal": "arXiv preprint arXiv:1006.5906", "description": "We present an extension of an algorithm for computing directly the denotation of a mu-calculus formula X over the configuration graph of a pushdown system to allow backwards modalities. Our method gives the first extension of the saturation technique to the full mu-calculus with backwards modalities.", "total_citations": 2, "citation_graph": {"2010": 2}}, {"title": "Games Characterizing Levy-Longo Trees", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:lSLTfruPkqcC", "authors": ["C-H Luke Ong", "Pietro Di Gianantonio"], "publication_date": "2002", "journal": "Automata, Languages and Programming", "description": "We present a simple strongly universal innocent game model for Levy-Longo trees i.e. every point in the model is the denotation of a unique Levy-Longo tree. The observational quotient of the model then gives a universal, and hence fully abstract, model of the pure Lazy Lambda Calculus.", "total_citations": 2, "citation_graph": {"2003": 1, "2004": 0, "2005": 1}}, {"title": "SLR\u2212 is PTIME complete", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:foquWX3nUaYC", "authors": ["AS Murawski", "CHL Ong"], "publication_date": "2000", "journal": "Unpublished note, Ftp-able from Ong\u2019s home page", "total_citations": 2, "citation_graph": {"2004": 1, "2005": 0, "2006": 0, "2007": 0, "2008": 1}}, {"title": "On full abstraction for pcf: I, ii and iii (preliminary version)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:ruyezt5ZtCIC", "authors": ["J Martin E Hyland", "C-H Luke Ong"], "publication_date": "1994", "description": "We present an order-extensional, order (or inequationally) fully abstract model for Scott's language PCF. The approach we have taken is very concrete and in nature goes back to Kleene [Kle78] and Gandy [Gan93] in one tradition, and to Kahn and Plotkin [KP93], and Berry and Curien [BC82] in another. Our model of computation is based on a kind of game in which each play consists of a dialogue of questions and answers between two players who observe the following Principles of Civil Conversation:", "total_citations": 2, "citation_graph": {"2003": 1, "2004": 0, "2005": 0, "2006": 0, "2007": 0, "2008": 0, "2009": 0, "2010": 0, "2011": 0, "2012": 0, "2013": 0, "2014": 0, "2015": 0, "2016": 1}}, {"title": "Exact Bayesian Inference on Discrete Models via Probability Generating Functions: A Probabilistic Programming Approach", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:9c2xU6iGI7YC", "authors": ["Fabian Zaiser", "Andrzej S Murawski", "Luke Ong"], "publication_date": "2023/5/26", "journal": "arXiv preprint arXiv:2305.17058", "description": "We present an exact Bayesian inference method for discrete statistical models, which can find exact solutions to many discrete inference problems, even with infinite support and continuous priors. To express such models, we introduce a probabilistic programming language that supports discrete and continuous sampling, discrete observations, affine functions, (stochastic) branching, and conditioning on events. Our key tool is probability generating functions: they provide a compact closed-form representation of distributions that are definable by programs, thus enabling the exact computation of posterior probabilities, expectation, variance, and higher moments. Our inference method is provably correct, fully automated and uses automatic differentiation (specifically, Taylor polynomials), but does not require computer algebra. Our experiments show that its performance on a range of real-world examples is competitive with approximate Monte Carlo methods, while avoiding approximation errors.", "total_citations": 1, "citation_graph": {"2023": 1}}, {"title": "Nonparametric Involutive Markov Chain Monte Carlo", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:2VqYfGB8ITEC", "authors": ["Carol Mak", "Fabian Zaiser", "Luke Ong"], "publication_date": "2022/6/28", "conference": "International Conference on Machine Learning", "description": "A challenging problem in probabilistic programming is to develop inference algorithms that work for arbitrary programs in a universal probabilistic programming language (PPL). We present the nonparametric involutive Markov chain Monte Carlo (NP-iMCMC) algorithm as a method for constructing MCMC inference algorithms for nonparametric models expressible in universal PPLs. Building on the unifying involutive MCMC framework, and by providing a general procedure for driving state movement between dimensions, we show that NP-iMCMC can generalise numerous existing iMCMC algorithms to work on nonparametric models. We prove the correctness of the NP-iMCMC sampler. Our empirical study shows that the existing strengths of several iMCMC algorithms carry over to their nonparametric extensions. Applying our method to the recently proposed Nonparametric HMC, an instance of (Multiple Step) NP-iMCMC, we have constructed several nonparametric extensions (all of which new) that exhibit significant performance improvements.", "total_citations": 1, "citation_graph": {"2023": 1}}, {"title": "Collapsible Pushdown Parity Games", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:GtLg2Ama23sC", "authors": ["Christopher H Broadbent", "Arnaud Carayol", "Matthew Hague", "Andrzej S Murawski", "C-H Luke Ong", "Olivier Serre"], "publication_date": "2021/7/22", "journal": "ACM Transactions on Computational Logic (TOCL)", "description": "This article studies a large class of two-player perfect-information turn-based parity games on infinite graphs, namely, those generated by collapsible pushdown automata. The main motivation for studying these games comes from the connections from collapsible pushdown automata and higher-order recursion schemes, both models being equi-expressive for generating infinite trees. Our main result is to establish the decidability of such games and to provide an effective representation of the winning region as well as of a winning strategy. Thus, the results obtained here provide all necessary tools for an in-depth study of logical properties of trees generated by collapsible pushdown automata/recursion schemes.", "total_citations": 1, "citation_graph": {"2023": 1}}, {"title": "Simulating cardinal preferences in Boolean games: A proof technique", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:-FonjvnnhkoC", "authors": ["Egor Ianovski", "Luke Ong"], "publication_date": "2018/8/1", "journal": "Information and Computation", "description": "Boolean games are a succinct representation of strategic games with a logical flavour. While they have proved to be a popular formalism in the multiagent community, a commonly cited shortcoming is their inability to express richer utilities than success or failure. In addition to being a modelling limitation, this parsimony of preference has made proving complexity bounds difficult. We address the second of these issues by demonstrating how cardinal utilities can be simulated via expected utility. This allows us to prove that RationalNash and IrrationalNash are NEXP-hard, and to translate hardness results for IsNash and DValue into the Boolean games framework.", "total_citations": 1, "citation_graph": {"2021": 1}}, {"title": "InterpChecker: Reducing State Space via Interpolations: (Competition Contribution)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:kz9GbA2Ns4gC", "authors": ["Zhao Duan", "Cong Tian", "Zhenhua Duan", "C-H Luke Ong"], "publication_date": "2018/4/14", "book": "International Conference on Tools and Algorithms for the Construction and Analysis of Systems", "description": "InterpChecker is a tool for verifying safety properties of C programs. It reduces the state space of programs throughout the verification via two new kinds of interpolations and associated optimization strategies. The implementation builds on the open-source, configurable software verification tool, CPAChecker.", "total_citations": 1, "citation_graph": {"2019": 1}}, {"title": "Automata, Logic and Games", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:VOx2b1Wkg3QC", "authors": ["CHL Ong"], "publication_date": "2015/1/28", "description": "Definition and examples. B\u00fcchi automata are not determinisable. Closure properties of B\u00fcchi-recognisable languages. B\u00fcchi\u2019s proof of complementation via Ramsey\u2019s Theorem. B\u00fcchi\u2019s characterisation and \u03c9-regular expressions. Decision problems and their complexity: non-emptiness is NL-complete, and universality is PSPACE-complete. Other acceptance conditions: Muller, Rabin, Streett and Parity. Determinisation and McNaughton\u2019s Theorem.", "total_citations": 1, "citation_graph": {"2023": 1}}, {"title": "Logic, Language, Information, and Computation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:V3AGJWp-ZtQC", "authors": ["Luke Ong", "Ruy De Queiroz"], "publication_date": "2012/8/18", "description": "Edited in collaboration with FoLLI, the Association of Logic, Language and Information this book constitutes the refereed proceedings of the 19th Workshop on Logic, Language, Information and Communication, WoLLIC 2012, held in Buenos Aires, Argentina, in September 2012. The papers accompanying 8 invited lectures are presented together with 16 contributed papers; the latter were carefully reviewed and selected from 46 submissions. The papers report advances in inter-disciplinary research involving formal logic, theory of computation, foundations of mathematics, and computational linguistics.", "total_citations": 1, "citation_graph": {"2018": 1}}, {"title": "Subtyping for model checking recursion schemes", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:NMxIlDl6LWMC", "authors": ["CHL Ong", "SJ Ramsay"], "publication_date": "2009", "journal": "COMPUTING LABORATORY STUDENT CONFERENCE 2009", "description": "We present a new type system for proving intersection-type judgements about purelyapplicative terms generated from a set of constants. The system is novel in that it contains a restricted form of the usual subtyping rule for intersection types, which leads to an efficient type checking algorithm. In spite of this restriction, the system is adequate for use as the core of a sound and complete model checking algorithm for Kobayashi\u2019s resource-usage verification problem [3]. The key to the result is the relatively limited setting of the simplytyped, applicative terms of higher-order recursion schemes. A (deterministic) higher-order recursion scheme is a definitional device for a finite or infinite tree labelled by symbols from some ranked alphabet. The tree can be seen to be generated by a process of (infinitary) rewriting using a system of simply-typed, higher-order grammar rules. Starting from some initial, non-terminal symbol, the rules are unfolded ad infinitum, thus determining some infinite tree. For example, we can specify a recursion scheme by giving the two grammar rules: S\u2192 F c and Fx\u2192 ax (F (bx)) and noting that the alphabet of terminal symbols is exactly a, b and c, of arities 2, 1 and 0 respectively. Rewriting from initial non-terminal symbol S produces the {a, b, c}-labelled, infinite tree depicted below: a c a b c a b b c a b", "total_citations": 1, "citation_graph": {"2013": 1}}, {"title": "Algorithmic game semantics and its applications", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:TFP_iSt0sucC", "authors": ["S Abramsky", "CHL Ong"], "publication_date": "2006/1/31", "journal": "Final Report", "description": "Game Semantics was introduced in the early nineties in the construction of the first fully complete model of Classical Multiplicative Linear Logic, and in the construction of the first syntax-independent fully abstract model of PCF. By the time of the project proposal\u2013some ten years on, Game Semantics had emerged as a powerful paradigm for giving accurate semantics to a variety of programming languages and logical systems. It had been used to construct fully abstract models for a wide spectrum of programming languages covering features such as recursive types and polymorphism, non-local control operators, block-allocated local variables, general references, probabilistic and non-deterministic constructs, etc.\nThe aim of the project was to develop Game Semantics in a new, algorithmic direction, with a view to applications in computer-assisted verification and program analysis. Game Semantics has several features which make it very promising from this point of view. It provides a very concrete way of building fully abstract models. It has a clear operational content, while admitting compositional methods in the style of denotational semantics. The basic objects studied in Game Semantics are games, and strategies on games. Strategies can be seen as certain kinds of highly-constrained processes, hence they admit the same kind of automata-theoretic representations central to model checking and allied methods in computer-assisted verification. Moreover games and strategies naturally form themselves into rich mathematical structures which yield very accurate models of advanced high-level programming languages, as the various full \u2026", "total_citations": 1, "citation_graph": {"2012": 1}}, {"title": "Game Semantics and its Applications", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:D_sINldO8mEC", "authors": ["Luke Ong"], "publication_date": "2004/6", "journal": "ICCL Summer School, Dresden, Germany", "description": "Game Semantics and its Applications 1 Introduction and Overview Page 1 ICCL Summer School 2004 Game Semantics and its Applications Luke Ong Oxford University Computing Laboratory www.comlab.ox.ac.uk/oucl/work/luke.ong/ Game Semantics and its Applications, ICCL Summer School, Dresden, June\u201904. Part 0, Slide 1 Outline of the Course: Five Parts 1. Introduction and Overview 2. Categories of Games and Strategies 3. PCF and the Full Abstraction Problem 4. Modelling Higher-order Procedural Languages: Idealized Algol 5. Algorithmic Game Semantics and Software Model Checking Course material Slides are fairly detailed, contain full definitions, examples and key theorems. Pointers to proofs in the literature. Bibliography. Open problems and research directions. [Detailed LATEX-ed lecture notes from my home page \u2013 in the fullness of time!] Game Semantics and its Applications, ICCL Summer School, \u2026", "total_citations": 1, "citation_graph": {"2015": 1}}, {"title": "A note on deterministic pushdown languages", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:_Qo2XoVZTnwC", "authors": ["JG de Miranda", "CHL Ong"], "publication_date": "2004", "description": "In this note we dene a level- n grammar as a generator of a string language. We will see that, subject to a syntactic restriction known as safety, our denition is equivalent to another, older denition of a level-n grammar which constitutes the OI-hierarchy of Damm [Dam82, DG86]. Our motivation for a re-packaged denition is that it renders us with a readily accessible denition for what it means to be a deterministic level-n grammar. We then show that a language L is accepted by a deterministic level- n pushdown automaton [Mas74] if and only if L is generated by a safe deterministic level-n grammar. The translations in both directions are eective. Both the\\if\" and\\only if\" part are based on the proofs given in [KNU02]. However, for the\\only if\" part we will make use of a technical lemma that gives a new normal form for deterministic higher order pushdown automata. Thus, our note provides a grammatical characterisation of \u2026", "total_citations": 1, "citation_graph": {"2005": 1}}, {"title": "Computer Science Logic", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:u_35RYKgDlwC", "authors": ["Luke Ong"], "description": "The Annual Conference of the European Association for Computer Science Logic (EACSL), CSL 2005, was held at the University of Oxford on 22\u201325 August 2005. The conference series started as a programme of International Workshops on Computer Science Logic, and then in its 6th meeting became the Annual Conference of the EACSL. This conference was the 19th meeting and 14th EACSL conference; it was organized by the Computing Laboratory at the University of Oxford.\nThe CSL 2005 Programme Committee considered 108 submissions from 25 countries during a two-week electronic discussion; each paper was refereed by at least three reviewers. The Committee selected 33 papers for presentation at the conference and publication in these proceedings. The Programme Committee invited lectures from Matthias Baaz, Ulrich Berger, Maarten Marx and Anatol Slissenko; the papers provided by the invited \u2026", "total_citations": 1, "citation_graph": {"2023": 1}}, {"title": "Template-Based Static Posterior Inference for Bayesian Probabilistic Programming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:dBIO0h50nwkC", "authors": ["Peixin Wang", "Hongfei Fu", "Tengshun Yang", "Guanyan Li", "Luke Ong"], "publication_date": "2023/7/24", "journal": "arXiv preprint arXiv:2307.13160", "description": "In Bayesian probabilistic programming, a central problem is to estimate the normalised posterior distribution (NPD) of a probabilistic program with conditioning. Prominent approximate approaches to address this problem include Markov chain Monte Carlo and variational inference, but neither can generate guaranteed outcomes within limited time. Moreover, most existing formal approaches that perform exact inference for NPD are restricted to programs with closed-form solutions or bounded loops/recursion. A recent work (Beutner et al., PLDI 2022) derived guaranteed bounds for NPD over programs with unbounded recursion. However, as this approach requires recursion unrolling, it suffers from the path explosion problem. Furthermore, previous approaches do not consider score-recursive probabilistic programs that allow score statements inside loops, which is non-trivial and requires careful treatment to ensure the integrability of the normalising constant in NPD. In this work, we propose a novel automated approach to derive bounds for NPD via polynomial templates. Our approach can handle probabilistic programs with unbounded while loops and continuous distributions with infinite supports. The novelties in our approach are three-fold: First, we use polynomial templates to circumvent the path explosion problem from recursion unrolling; Second, we derive a novel multiplicative variant of Optional Stopping Theorem that addresses the integrability issue in score-recursive programs; Third, to increase the accuracy of the derived bounds via polynomial templates, we propose a novel technique of truncation that truncates a program into a \u2026"}, {"title": "Fast and Correct Gradient-Based Optimisation for Probabilistic Programming via Smoothing", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:OTTXONDVkokC", "authors": ["Basim Khajwal", "C-H Luke Ong", "Dominik Wagner"], "publication_date": "2023/4/17", "book": "European Symposium on Programming", "description": "We study the foundations of variational inference, which frames posterior inference as an optimisation problem, for probabilistic programming. The dominant approach for optimisation in practice is stochastic gradient descent. In particular, a variant using the so-called reparameterisation gradient estimator exhibits fast convergence in a traditional statistics setting. Unfortunately, discontinuities, which are readily expressible in programming languages, can compromise the correctness of this approach. We consider a simple (higher-order, probabilistic) programming language with conditionals, and we endow our language with both a measurable and a smoothed (approximate) value semantics. We present type systems which establish technical pre-conditions. Thus we can prove stochastic gradient descent with the reparameterisation gradient estimator to be correct when applied to the smoothed problem. Besides, we can solve the original problem up to any error tolerance by choosing an accuracy coefficient suitably. Empirically we demonstrate that our approach has a similar convergence as a key competitor, but is simpler, faster, and attains orders of magnitude reduction in worknormalised variance."}, {"title": "Static Analysis of Posterior Inference in Bayesian Probabilistic Programming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:IUKN3-7HHlwC", "authors": ["Peixin Wang", "Hongfei Fu", "Tengshun Yang", "Guanyan Li", "Luke Ong"], "publication_date": "2023/3/10", "description": "In Bayesian probabilistic programming, a central problem is to estimate the normalised posterior distribution (NPD) of a probabilistic program with score statements. Prominent approximate approaches to address this problem cannot generate guaranteed outcomes within a finite time limit, and previous formal approaches w.r.t. exact inference for NPD are restricted to programs with bounded loops/recursion. A recent work (Beutner et al., PLDI 2022) proposed an automated approach that derives guaranteed bounds for NPD over programs with unbounded recursion. However, as this approach requires recursion unrolling, it suffers from the path explosion problem. Moreover, existing approaches do not consider score-recursive probabilistic programs that allow score statements inside loops, which is non-trivial and requires careful treatment to ensure the integrability of the normalising constant. In this work, we propose a novel automated approach to derive bounds for NPD via polynomial templates, fixed-point theorems and Optional Stopping Theorem (OST). Our approach can handle probabilistic programs with unbounded while-loops and continuous distributions with infinite supports. Our novelties are threefold: First, the use of polynomial templates circumvents the path explosion problem from recursion unrolling; Second, we derive a novel variant of OST that addresses the integrability issues in score-recursive programs; Third, to increase the accuracy of the derived bounds, our approach adopts a novel technique of truncation onto a bounded range of program values. Experiments over a wide range of benchmarks demonstrate that our approach \u2026"}, {"title": "Rethinking Variational Inference for Probabilistic Programs with Stochastic Support", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:mlAyqtXpCwEC", "authors": ["Tim Reichelt", "Luke Ong", "Thomas Rainforth"], "publication_date": "2022/12/6", "journal": "Advances in Neural Information Processing Systems", "description": "We introduce Support Decomposition Variational Inference (SDVI), a new variational inference (VI) approach for probabilistic programs with stochastic support. Existing approaches to this problem rely on designing a single global variational guide on a variable-by-variable basis, while maintaining the stochastic control flow of the original program. SDVI instead breaks the program down into sub-programs with static support, before automatically building separate sub-guides for each. This decomposition significantly aids in the construction of suitable variational families, enabling, in turn, substantial improvements in inference performance."}, {"title": "Expectation programming: Adapting probabilistic programming systems to estimate expectations efficiently", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:6ZxmRoH8BuwC", "authors": ["Tim Reichelt", "Adam Goli\u0144ski", "Luke Ong", "Tom Rainforth"], "publication_date": "2022/8/17", "conference": "Uncertainty in Artificial Intelligence", "description": "We show that the standard computational pipeline of probabilistic programming systems (PPSs) can be inefficient for estimating expectations and introduce the concept of expectation programming to address this. In expectation programming, the aim of the backend inference engine is to directly estimate expected return values of programs, as opposed to approximating their conditional distributions. This distinction, while subtle, allows us to achieve substantial performance improvements over the standard PPS computational pipeline by tailoring computation to the expectation we care about. We realize a particular instance of our expectation programming concept, Expectation Programming in Turing (EPT), by extending the PPS Turing to allow so-called target-aware inference to be run automatically. We then verify the statistical soundness of EPT theoretically, and show that it provides substantial empirical gains in practice."}, {"title": "Probabilistic Verification Beyond Context-Freeness", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:WJVC3Jt7v1AC", "authors": ["Guanyan Li", "Andrzej Murawski", "Luke Ong"], "publication_date": "2022/8/2", "book": "Proceedings of the 37th Annual ACM/IEEE Symposium on Logic in Computer Science", "description": "Probabilistic pushdown automata (recursive state machines) are a widely known model of probabilistic computation associated with many decidable problems concerning termination (time) and linear-time model checking. Higher-order recursion schemes (HORS) are a prominent formalism for the analysis of higher-order computation.\nRecent studies showed that, for the probabilistic variant of HORS, even the basic problem of determining whether a scheme terminates almost surely is undecidable. Moreover, the undecidability already holds for order-2 schemes (order-1 schemes are known to correspond to pushdown automata).\nMotivated by these results, we study restricted probabilistic tree-stack automata (rPTSA), which in the nondeterministic setting are known to characterise a proper extension of context-free languages, namely, the multiple context-free languages. We show that several verification problems \u2026"}, {"title": "Initial limit Datalog: a new extensible class of decidable constrained Horn clauses", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:NXb4pA-qfm4C", "authors": ["Toby Cathcart Burn", "CH Ong", "Steven Ramsay", "Dominik Wagner"], "publication_date": "2021/7/7", "description": "We present initial limit Datalog, a new extensible class of constrained Horn clauses for which the satisfiability problem is decidable. The class may be viewed as a generalisation to higher-order logic (with a simple restriction on types) of the first-order language limit Datalog Z (a fragment of Datalog modulo linear integer arithmetic), but can be instantiated with any suitable background theory. For example, the fragment is decidable over any countable well-quasi-order with a decidable first-order theory, such as natural number vectors under componentwise linear arithmetic, and words of a bounded, context-free language ordered by the subword relation. Formulas of initial limit Datalog have the property that, under some assumptions on the background theory, their satisfiability can be witnessed by a new kind of term model which we call entwined structures. Whilst the set of all models is typically uncountable, the set of all entwined structures is recursively enumerable, and model checking is decidable."}, {"title": "Expectation Programming", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:FAceZFleit8C", "authors": ["Tim Reichelt", "Adam Goli\u0144ski", "Luke Ong", "Tom Rainforth"], "publication_date": "2021/6", "journal": "arXiv e-prints", "description": "Building on ideas from probabilistic programming, we introduce the concept of an expectation programming framework (EPF) that automates the calculation of expectations. Analogous to a probabilistic program, an expectation program is comprised of a mix of probabilistic constructs and deterministic calculations that define a conditional distribution over its variables. However, the focus of the inference engine in an EPF is to directly estimate the resulting expectation of the program return values, rather than approximate the conditional distribution itself. This distinction allows us to achieve substantial performance improvements over the standard probabilistic programming pipeline by tailoring the inference to the precise expectation we care about. We realize a particular instantiation of our EPF concept by extending the probabilistic programming language Turing to allow so-called target-aware inference to be run \u2026"}, {"title": "Flow Analysis as a Higher-order Constraint Problem", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:Ri6SYOTghG4C", "authors": ["Luke Ong", "Steven Ramsay"], "publication_date": "2018/1", "description": "A central problem in program analysis [5] is to predict, statically, which values may occupy a variable at runtime. In a functional programming language the task, known as flow analysis, is particularly difficult since the control flow of the program cannot be accurately determined from the program syntax due to the prescence of higher-order functions. Nevertheless, the problem is such an important and natural one that it has been well studied, with most approaches being equivalent to, or some variation on, Shivers\u2019 seminal analysis 0-CFA. This analysis is particularly appealing because it has a constraint-based formulation: the analysis generates a set of constraints (in this case subset inclusions) which capture the essence of the problem and whose satisfaction yields a solution to the original problem.\nHowever, until recently, most approaches to the problem involve approximating higherorder control flow using first-order apparatus (eg tree grammars, set constraints or abstract machines). Some attempts have been made to do better using new technology (eg pushdown automata, indexed grammars, higher-order model checking [8]) but there is currently no crisp, constraint-based formulation of a truely higher-order flow analysis. This project aims to develop a flow analysis for functional programs (or an applied lambda calculus) formulated as a higher-order constraint problem (the unknowns that are constrained are of higher-type). One starting point is the work on exact flow analysis using higher-order model checking, since we know that higher-order model checking [3, 7, 6] can itself be recast, in a natural way, as a higher-order constraint problem \u2026"}, {"title": "Formal Methods and Software Engineering: 19th International Conference on Formal Engineering Methods, ICFEM 2017, Xi'an, China, November 13-17, 2017, Proceedings", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:MLfJN-KU85MC", "authors": ["Zhenhua Duan", "Luke Ong"], "publication_date": "2017/10/13", "description": "The International Conference on Formal Engineering Methods (ICFEM) is a forum for advances in formal engineering methods. Among other topics, ICFEM covers verification and validation, software engineering, formal specification and modeling, software security, and software reliability. Since its inception in 1997, ICFEM has served as a primary venue for formal methods theory that promises to bring practical and tangible benefits, as well as practical developments that have been incorporated into real production systems. In recent years, ICFEM has taken place in Tokyo (2016), Paris (2015), Luxembourg (2014), Queenstown (2013), Kyoto (2012), Durham (2011), and Shanghai (2010)."}, {"title": "Higher-Order Constrained Horn Clauses and Refinement Types", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:_axFR9aDTf0C", "authors": ["Toby Cathcart Burn", "C-H Luke Ong", "Steven J Ramsay"], "publication_date": "2017/5", "journal": "arXiv e-prints", "description": "Motivated by applications in automated verification of higher-order functional programs, we develop a notion of constrained Horn clauses in higher-order logic and a decision problem concerning their satisfiability. We show that, although satisfiable systems of higher-order clauses do not generally have least models, there is a notion of canonical model obtained through a reduction to a problem concerning a kind of monotone logic program. Following work in higher-order program verification, we develop a refinement type system in order to reason about and automate the search for models. This provides a sound but incomplete method for solving the decision problem. Finally, we show that an extension of the decision problem in which refinement types are used directly as guards on existential quantifiers can be reduced to the original problem. This result can be used to show that properties of higher-order functions \u2026"}, {"title": "Automata, Logic and Games for the-Calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:epqYDVWIO7EC", "authors": ["C-H Luke Ong"], "publication_date": "2016/12/3", "book": "Indian Conference on Logic and Its Applications", "description": "Automata, logic and games provide the mathematical theory that underpins the model checking of reactive systems."}, {"title": "Refinement Types and Higher-Order Constrained Horn Clauses", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:zLWjf1WUPmwC", "authors": ["C-H Luke Ong", "Steven J Ramsay"], "publication_date": "2016/12", "journal": "CoALP-Ty\u201916", "description": "Constrained Horn clauses have recently emerged as a very promising candidate for a logical basis for automatic program verification (especially symbolic model checking). There is evidence to suggest that many first-order verification problems which, at their heart, require finding relations satisfying some given conditions, can be posed as questions of solving systems of Horn clauses, modulo constraints expressed in some suitable background theory [1, 2]. Consequently, researchers have developed several highly efficient solvers for first-order constrained Horn clauses. We are interested in verifying higher-order programs. Here too it seems very worthwhile to look for a unifying, logical basis for automated program verification. Furthermore, it is natural to frame the verification problem as a search for relations that meet appropriate criteria, and for these criteria to be expressed as constrained Horn clauses. However, one major difference with the foregoing work is that the relations will, in general, be of higher type. For example, consider the following higher-order program (shown on the left): letadd xy= x+ y let reciter0 fn= if n\u2264 0then0elsef n (iter0 f (n\u2212 1)) in \u03bbn. assert (n\u2264 iter0 add n)\n\u2200 xyz. z= x+ y\u21d2 Add xyz\u2200 f nr. n\u2264 0\u2227 r= 0\u21d2 Iter0 f nr\u2200 f nr.(\u2203 pn> 0\u2227 Iter0 f (n\u2212 1) p\u2227 f npr)\u21d2 Iter0 f nr\u2200 nr. Iter0 Add nr\u21d2 n\u2264 r\nThe term iter0 addn is the sum of the integers from 1 to n in case n is non-negative and is 0 otherwise. The program is safe just in case the assertion is never violated, ie the summation is not smaller than n. To verify safety, we must find an invariant that implies the required property. For our purposes, an invariant will be an over \u2026"}, {"title": "A Type System for proving Depth Boundedness in the pi-calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:kzcrU_BdoSEC", "authors": ["Emanuele D'Osualdo", "Luke Ong"], "publication_date": "2015/2/3", "journal": "arXiv preprint arXiv:1502.00944", "description": "The depth-bounded fragment of the pi-calculus is an expressive class of systems enjoying decidability of some important verification problems. Unfortunately membership of the fragment is undecidable. We propose a novel type system, parameterised over a finite forest, that formalises name usage by pi-terms in a manner that respects the forest. Type checking is decidable and type inference is computable; furthermore typable pi-terms are guaranteed to be depth bounded. The second contribution of the paper is a proof of equivalence between the semantics of typable terms and nested data class memory automata, a class of automata over data words. We believe this connection can help to establish new links between the rich theory of infinite-alphabet automata and nominal calculi."}, {"title": "Simulating cardinal payoffs in Boolean games to prove hardness", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:-_dYPAW6P2MC", "authors": ["Egor Ianovski", "Luke Ong"], "publication_date": "2015", "journal": "3rd International Workshop on Strategic Reasoning", "description": "Boolean games are a succinct representation of strategic games with a logical flavour. While they have proved to be a popular formalism in the multiagent community, a commonly cited shortcoming is their inability to express richer utilities than success or failure. In addition to being a modelling limitation, this parsimony of preference has made proving complexity bounds difficult. We address the second of these issues by demonstrating how cardinal utilities can be simulated via expected utility. This allows us to prove that RATIONALNASH and IRRATIONALNASH are NEXP-hard."}, {"title": "Logic, Language, Information and Computation (WoLLIC 2012)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:tzM49s52ZIMC", "authors": ["Luke Ong", "Ruy JGB de Queiroz"], "publication_date": "2015", "journal": "Theoretical Computer Science", "description": "Logic, Language, Information and Computation (WoLLIC 2012) \u00d7 Close The Infona portal uses cookies, ie strings of text saved by a browser on the user's device. The portal can access those files and use them to remember the user's data, such as their chosen settings (screen view, interface language, etc.), or their login data. By using the Infona portal the user accepts automatic saving and using this information for portal operation purposes. More information on the subject can be found in the Privacy Policy and Terms of Service. By closing this window the user confirms that they have read the information on cookie usage, and they accept the privacy policy and the way cookies are used by the portal. You can change the cookie settings in your browser. I accept Polski English Login or register account remember me Password recovery INFONA - science communication portal INFONA Search advanced search Browse \u2026"}, {"title": "Conference Report 19th Workshop on Logic, Language, Information and Computation (WoLLIC 2012)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:UHK10RUVsp4C", "authors": ["Luke Ong", "Carlos Areces", "Santiago Figueira", "Ruy de Queiroz"], "publication_date": "2014/8/1", "journal": "LOGIC JOURNAL OF THE IGPL"}, {"title": "Evora, Portugal July 22\u201327, 2013", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:t7zJ5fGR-2UC", "authors": ["Abderezak Ould Houcine", "Luke Ong"], "publication_date": "2014/6", "journal": "The Bulletin of Symbolic Logic", "description": "The main conference topics were Computability Theory and Logic for Computer Science; Foundations of Mathematics and Philosophy of Logic; Model Theory; Proof Theory and Constructive Mathematics; and Set Theory. The program included two tutorial courses, eleven invited plenary lectures, and twenty invited lectures in five special sessions. There were seventy eight contributed talks and 168 participants. Twenty two students and recent Ph. D\u2019s were awarded ASL travel grants."}, {"title": "19th workshop on logic, language, information and computation (wollic 2012)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:dTyEYWd-f8wC", "authors": ["Luke Ong", "Carlos Areces", "Santiago Figueira", "Ruy de Queiroz"], "publication_date": "2013/9", "journal": "Bulletin of Symbolic Logic", "description": "The 19th Workshop on Logic, Language, Information and Computation (WoLLIC 2012) was held in Buenos Aires, Argentina September 3\u20136, 2012, at the Facultad de Ciencias Econ\u00f3micas of the Universidad de Buenos Aires. It was the nineteenth in a series of workshops that started in 1994 with the aim of fostering interdisciplinary research in pure and applied logic."}, {"title": "NII \u6e58\u5357\u4f1a\u8b70\u5831\u544a: \u9ad8\u968e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u306e\u305f\u3081\u306e\u81ea\u52d5\u5316\u6280\u8853", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:URolC5Kub84C", "authors": ["Naoki KOBAYASHI", "Luke ONG", "David Van HORN"], "publication_date": "2013/3", "journal": "Progress in informatics"}, {"title": "Information Flow Analysis for JavaScript", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:eflP2zaiRacC", "authors": ["Martin Lester"], "publication_date": "2012/11/16", "journal": "Computer Science Student Conference 2012", "description": "Web applications written in JavaScript are regularly used for dealing with sensitive or personal data. Consequently, reasoning about their security properties has become an important problem, which is made very difficult by the highly dynamic nature of the language, particularly its support for runtime code generation through the eval construct. We have developed a static information flow analysis for a dynamically typed, functional language with staged metaprogramming that has semantics similar to JavaScript. Our analysis works by extending the well-known Control Flow Analysis (CFA) with an abstraction for staged code and information flow constraints. We have formally proved the soundness of our analysis in the mechanised theorem prover Coq and implemented it in OCaml [6]. This is the first information flow analysis for a language with staged metaprogramming and the first formal soundness proof of a CFA-based information flow analysis for a functional language. We argue that our work is applicable to an information flow analysis for full JavaScript, including eval, and could easily be transferred to other CFA-based analyses.\nInformation Flow and Noninterference The study of information flow security stems from the observation that programs contain both direct and indirect information flows [2]. Consider evaluation of the program (if (h){l} else {0}). The result may be l, so there is a direct flow from l to the result. However, we might also infer from the result whether h is true or false. As h affects the result of the program through control flow, but does not directly contribute to the result, there is an indirect flow from h to the result. Early work on \u2026"}, {"title": "High-Order Model Checking", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:u9iWguZQMMsC", "authors": ["C-H Luke Ong"], "publication_date": "2012/2/14", "journal": "EPTCS 77", "description": "Recursion schemes are in essence the simply-typed lambda calculus with recursion, generated from uninterpreted first-order symbols. An old model of computation much studied in the Seventies, there has been a revival of interest in recursion schemes as generators of infinite structures (such as infinite trees) with rich algorithmic properties. Higher-order model checking\u2014the model checking of trees generated by higher-order recursion schemes\u2014is a natural generalisation of finite-state and pushdown model checking; it can serve as a basis for software model checkers for functional languages such as ML and Haskell.\nAfter a quick survey of expressivity and decidability results in higher-order model checking [6, 2, 5, 1], we present our recent application [7] to the model checking of higher-order functional programs with pattern-matching algebraic data types. We are concerned with the (undecidable) verification problem: given a correctness property \u03c6, a functional program \u4e61 and a regular input set I, does every term that is reachable from I under rewriting by \u4e61 satisfy \u03c6? Our solution is a sound semi-algorithm (ie given a noinstance of the verification problem, the method is guaranteed to terminate) which uses counterexampleguided abstraction refinement, and is based on a backend model checker. Given a trivial automaton (ie B\u00fcchi tree automaton with a trivial acceptance condition) and a nondeterministic higher-order recursion scheme with case construct over finite date-types, the model checker decides if the language of trees generated by the scheme is accepted by the automaton. The model checking problem is characterised by an \u2026"}, {"title": "Automated techniques for higher-order program verification", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:dQ2og3OwTAUC", "authors": ["Naoki Kobayashi", "Luke Ong", "David Van Horn"], "publication_date": "2011/9/23", "description": "With the increasing importance of software reliability, program verification has been an important and hot research topic. Recently, we have seen some good progress in automated techniques for verification of higher-order programs. Studies of game semantics have yielded compositional model checkers and automated program equivalence checkers for Algol-like programming languages, and studies of higher-order recursion schemes and pushdown automata have yielded model checkers for higher-order functional programs. Classical control flow analysis has been recently revisited to yield more precise and/or efficient methods than Shivers\u2019k-CFA.\nThe aim of the workshop was to bring together researchers on automated techniques for higher-order program verification and analyses, and provide them with an opportunity to exchange new research results, and discuss further extensions. The workshop also aimed for cross-fertilization of different techniques for higher-order program verification, such as game semantics, type theories, higher-order grammars and pushdown systems, control flow analyses, and abstract interpretation."}, {"title": "Theoretical Aspects of Software Engineering", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:XiVPGOgt02cC", "authors": ["Zhenhua Duan", "Luke Ong"], "publication_date": "2011/8/29", "description": "The following topics are dealt with: program testing; formal specification; formal verification; program verification; and Web services."}, {"title": "TASE 2011 Foreword", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:olpn-zPbct0C", "authors": ["Zhenhua Duan", "Luke Ong"], "publication_date": "2011/8", "description": "This volume contains the proceedings of the Fifth International Conference on Theoretical Aspects of Software Engineering (TASE 2011), sponsored by IEEE CS and IFIP. TASE 2011 is a forum for researchers from academia, industry, and government to present ideas, results, and ongoing research on theoretical advances in software engineering."}, {"title": "Proceedings of the 10th international conference on Typed lambda calculi and applications", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:sNmaIFBj_lkC", "authors": ["Luke Ong"], "publication_date": "2011/6/1", "description": "Proceedings of the 10th international conference on Typed lambda calculi and applications | Guide Proceedings ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsTLCA'11 ABSTRACT No abstract available. Comments Login options Check if you have access through your login credentials or your institution to get full access on this article. Sign in Full Access Get this Publication Information Contributors Published in Guide Proceedings cover image TLCA'11: Proceedings of the 10th international conference on Typed lambda calculi and applications June 2011 245 pages ISBN:9783642216909 Editor: Luke Ong Copyright \u00a9 \u2026"}, {"title": "Typed Lambda Calculi and Applications: 10th International Conference, TLCA 2011, Novi Sad, Serbia, June 1-3, 2011. Proceedings", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:dfsIfKJdRG4C", "authors": ["Luke Ong"], "publication_date": "2011/5/23", "description": "This volume contains the papers of the 10th International Conference on Typed Lambda Calculi and Applications (TLCA 2011), which was held during 1-3 June 2011, in Novi Sad, Serbia. The Conference was part of the 6th International Conference on Rewriting, Deduction, and Programming (RDP 2011), together with the 22nd International Conference on Rewriting Techniques and Applications (RTA 2011), the 10th International Workshop on Reduction Strategies in Rewriting and Programming (WRS 2011), the Workshop on Compilers by Rewriting, Automated (COBRA 2011), the Workshop on Theory and Practice of Delimited Continuations (TPDC 2011), the Workshop on the Two Faces of Complexity (2FC 2011), and the annual meeting of the IFIP Working Group 1.6 on Term Rewriting.\nThe TLCA series of conferences serves as a forum for presenting original research results that are broadly relevant to the theory and applications of lambda calculus. Previous TLCA conferences were held in Utrecht (1993), Edinburgh (1995), Nancy (1997), L\u2019Aquila (1999), Krak\u00f3w (2001), Valencia (2003), Nara (2005), Paris (2007) and Bras\u0131lia (2009). A total of 15 papers were accepted out of 44 submissions for presentation at TLCA 2011 and for inclusion in the proceedings. Each submitted paper was reviewed by at least three members of the Programme Committee, who were assisted in their work by 67 external reviewers. I would like to thank the members of the Programme Committee and the external reviewers for their review work, as well as Andrei Voronkov for providing the EasyChair system which proved invaluable throughout the review process and \u2026"}, {"title": "Foundations of Software Science and Computational Structures: 13th International Conference, FOSSACS 2010, Held as Part of the Joint European Conferences on Theory and Practice \u2026", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:zA6iFVUQeVQC", "authors": ["C-H Luke Ong"], "publication_date": "2010/4/21", "description": "This volume contains the proceedings of the 13th International Conference on the Foundations of Software Science and Computational Structures (FoSSaCS) 2010, held in Paphos, Cyprus, 20\u201328 March 2010. FoSSaCS is an event of the Joint European Conferences on Theory and Practice of Software (ETAPS). The previous 12 FoSSaCS conferences took place in Lisbon (1998), Amsterdam (1999), Berlin (2000), Genoa (2001), Grenoble (2002), Warsaw (2003), Barcelona (2004), Edinburgh (2005), Vienna (2006), Braga (2007), Budapest (2008) and York (2009). FoSSaCS presents original papers on the foundations of software science. The Programme Committee (PC) invited submissions on theories and methods to support analysis, synthesis, transformation and verification of programs and software systems.\nWe received 110 abstracts and 86 full paper submissions; of these, 25 were selected for presentation at FoSSaCS and inclusion in the proceedings. Also included is the abstract of a lecture,\u201cIntroduction to Decidability of Higher-Order Matching\u201d by Colin Stirling, the FoSSaCS 2010 invited speaker. The PC members, and the external experts they consulted, wrote a total of over 460 paper reviews, and the discussion phase of the meeting involved several hundred messages. The competition was extremely keen; unfortunately many good papers could not be accepted."}, {"title": "Fifth IFIP International Conference on Theoretical Computer Science-TCS 2008: IFIP 20th World Computer Congress, TC 1, Foundations of Computer Science, September 7-10, 2008 \u2026", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:BrmTIyaxlBUC", "authors": ["Giorgio Ausiello", "Juhani Karhum\u00e4ki", "Giancarlo Mauri", "Luke Ong"], "publication_date": "2008/7/22", "description": "International Federation for Information Processing The IFIP series publishes state-of-the-art results in the sciences and technologies of information and communication. The scope of the series includes: foundations of computer science; software theory and practice; education; computer applications in technology; communication systems; systems modeling and optimization; information systems; computers and society; computer systems technology; security and protection in information processing systems; artificial intelligence; and human-computer interaction. Proceedings and post-proceedings of refereed international conferences in computer science and interdisciplinary fields are featured. These results often precede journal publication and represent the most current research. The principal aim of the IFIP series is to encourage education and the dissemination and exchange of information about all aspects of computing. For more information about the 300 other books in the IFIP series, please visit www. springer. com. For more information about IFIP, please visit www. ifip. org."}, {"title": "Symbolic Backwards Reachability Analysis for Higher&# x2212; Order Pushdown Systems", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:yD5IFk8b50cC", "authors": ["Matthew Hague", "C-H Luke Ong"], "publication_date": "2007"}, {"title": "Computer Science Logic: 19th International Workshop, CSL 2005, 14th Annual Conference of the EACSL, Oxford, UK, August 22-25, 2005, Proceedings", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:ZuybSZzF8UAC", "authors": ["Luke Ong"], "publication_date": "2005/9/7", "description": "The Annual Conference of the European Association for Computer Science Logic (EACSL), CSL 2005, was held at the University of Oxford on 22\u201325 August 2005. The conference series started as a programme of International Workshops on Computer Science Logic, and then in its 6th meeting became the Annual Conference of the EACSL. This conference was the 19th meeting and 14th EACSL conference; it was organized by the Computing Laboratory at the University of Oxford.\nThe CSL 2005 Programme Committee considered 108 submissions from 25 countries during a two-week electronic discussion; each paper was refereed by at least three reviewers. The Committee selected 33 papers for presentation at the conference and publication in these proceedings. The Programme Committee invited lectures from Matthias Baaz, Ulrich Berger, Maarten Marx and Anatol Slissenko; the papers provided by the invited speakers appear at the front of this volume. Instituted in 2005, the Ackermann Award is the EACSL Outstanding Dissertation Award for Logic in Computer Science. The award winners for the inaugural year, Mikolaj Bojanczyk, Konstantin Korovin and Nathan Segerlind, were invited to present their work at the conference. Citations for the awards, abstracts of the theses, and biographical sketches of the award winners are at the end of the proceedings."}, {"title": "Proceedings of the 19th international conference on Computer Science Logic", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:umqufdRvDiIC", "authors": ["Luke Ong"], "publication_date": "2005/8/22", "description": "Proceedings of the 19th international conference on Computer Science Logic | Guide Proceedings ACM Digital Library home ACM home Google, Inc. (search) Advanced Search Browse About Sign in Register Advanced Search Journals Magazines Proceedings Books SIGs Conferences People More Search ACM Digital Library SearchSearch Advanced Search Browse Browse Digital Library Collections More HomeBrowse by TitleProceedingsCSL'05 ABSTRACT No abstract available. Comments Login options Check if you have access through your login credentials or your institution to get full access on this article. Sign in Full Access Get this Publication Information Contributors Published in Guide Proceedings cover image CSL'05: Proceedings of the 19th international conference on Computer Science Logic August 2005 567 pages ISBN:3540282319 Editor: Luke Ong Copyright \u00a9 2005 Publisher Springer-Verlag \u2026"}, {"title": "Additive Aspects and General References", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:a0OBvERweLwC", "authors": ["Sam Sanjabi", "Luke Ong", "William Greenland"], "publication_date": "2005/3/1", "description": "Additive Aspects and General References Page 1 Mar 1, 2005 Additive Aspects and General References Sam Sanjabi, Luke Ong and William Greenland {sams,lo,willg}@comlab.ox.ac.uk. Oxford University Computing Laboratory Additive Aspects and General References \u2013 p.1/19 Page 2 Mar 1, 2005 Overview Aspect-Oriented Programming Formalisation A Fully Abstract Translation Additive Aspects and General References \u2013 p.2/19 Page 3 Mar 1, 2005 Aspect-Oriented Programming \u201cAspect-Oriented Programming can be understood as the desire to make quantified statements about the behaviour of programs, and to have these quantifications hold over programs written by oblivious programmers\u201d \u2013 Filman & Friedman (2000) Modern aspect oriented programs consist of: A \u2019base\u2019 program with A distinguished subset of its program points (join points) A way to specify predicates (pointcuts) over join points A way to \u2026"}, {"title": "B\u00f6hm Tree Lambda Theory", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:QYdC8u9Cj1oC", "authors": ["Andrew D Ker", "Hanno Nickau", "C-H Luke Ong"], "publication_date": "2003/7/31", "journal": "Computer Science Logic: 13th International Workshop, CSL'99, 8th Annual Conference of the EACSL, Madrid, Spain, September 20-25, 1999, Proceedings", "description": "We present a game model of the untyped X-calculus, with equational theory equal to the B\u00f6hm tree X-theory B, which is universal (ie every element of the model is definable by some term). This answers a question of Di Gianantonio, Franco and Honsell. We build on our earlier work, which uses the methods of innocent game semantics to develop a universal model inducing the maximal consistent sensible theory'H'. To our knowledge these are the first syntax-independent universal models of the untyped X-calculus."}, {"title": "International Symposia on Theoretical Aspects of Computer Science: TACS'97, TACS \u201894, and TACS'91", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:VL0QpB8kHFEC", "authors": ["Takayasu Ito"], "publication_date": "1998/6", "journal": "Bulletin of Symbolic Logic", "description": "In addition to the invited talks and contributed talks there were two evening sessions, one on mechanized reasoning and a panel on concurrency theory and the Web. Also, during the symposium there were two demonstrations: one on the Join-Calculus and one on the Linear Logic Sequent Prover."}, {"title": "Formal Methods and Software Engineering", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:tuHXwOkdijsC", "authors": ["Zhenhua Duan", "Luke Ong"], "description": "The International Conference on Formal Engineering Methods (ICFEM) is a forum for advances in formal engineering methods. Among other topics, ICFEM covers verification and validation, software engineering, formal specification and modeling, software security, and software reliability. Since its inception in 1997, ICFEM has served as a primary venue for formal methods theory that promises to bring practical and tangible benefits, as well as practical developments that have been incorporated into real production systems. In recent years, ICFEM has taken place in Tokyo (2016), Paris (2015), Luxembourg (2014), Queenstown (2013), Kyoto (2012), Durham (2011), and Shanghai (2010)."}, {"title": "Deciding Secrecy of Security Protocols with Well Structured Transition Systems", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:b1wdh0AR-JQC", "authors": ["Emanuele D\u2019Osualdo", "Luke Ong", "Alwen Tiu"], "description": "Security protocols are distributed programs that are designed to achieve secure communications using cryptography. They are extensively deployed today but their design is notoriously error-prone. In contrast to other safety critical systems, a distinctive feature of the security properties of protocols is that they must hold in the presence of an adversary or intruder, and this makes them challenging to verify. An important example of such a security property is secrecy: to verify that a protocol satisfies secrecy amounts to checking whether it can leak a given (secret) message to the environment as a result of interference by the intruder. In essence, to verify secrecy, we need a way of analysing the set of messages that the intruder knows; if a message does not belong to this set, then that message is not leaked. Here we assume a model of intruders as defined by Dolev and Yao [4]. The difficulty is that this set of messages is \u2026"}, {"title": "INTERNATIONAL SYMPOSIA ON THEORETICAL ASPECTS OF COMPUTER SCIENCE: TACS\u201997, TACS\u201994, AND TACS\u201991", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:uWiczbcajpAC", "authors": ["Martin Abadi", "Mariangiola Dezani", "Masami Hagiya", "Susumu Hayashi", "Thomas A Henzinger", "Takayasu Ito", "Neil Jones", "Naoki Kobayasni", "Jean-Jacques Levy", "Peter O\u2019Hearn", "Atsushi Ohori", "Luke Ong", "Frank Pfenning", "Benjamin Pierce", "Natarajan Shankar", "Val Tannen", "Fritz Vaandrager", "TACS Open Lecture", "Robin Milner", "Carolyn L Talcott", "Robert Harper", "Gerard Huet", "Logic Sequent Prover"], "description": "In addition to the invited talks and contributed talks there were two evening sessions, one on mechanized reasoning and a panel on concurrency theory and the Web. Also, during the symposium there were two demonstrations: one on the Join-Calculus and one on the Linear Logic Sequent Prover."}, {"title": "Nominal Games and Full Abstraction for the Nu-Calculus", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:EkHepimYqZsC", "authors": ["Ian Stark", "Samson Abramsky", "Dan Ghica", "Andrzej Murawski", "Luke Ong"], "description": "We present nominal games, a game semantics in Gabbay and Pitts\u2019 world of FM-set theory, as a model for programming languages with dynamically generated local names."}, {"title": "COMPUTING RESEARCH", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:ipzZ9siozwsC", "authors": ["Mohd Yunus Sharum", "Norwati Mustapha", "Pinaki Chakraborty", "Meysam Orouskhani", "Tissa Chandessa", "Itaza Afiani Mohtar", "Azizi Abdullah", "Chun-Han Lin", "Sri Devi Ravana", "Fazilah Haron", "Suraya Masrom", "Dileeka Dias", "Zaidah Ibrahim", "Patricio Domingues", "Tan Wee Hoe", "Roslin Jamaludin", "Luke Ong", "Payam Barnaghi", "Zalikha Zulkifli", "Nurkhairizan Khairudin", "Ligang He", "Siti Khatijah Nor Abdul Rahim", "Abdul Rahman", "Mahmoud Amer", "Nureize Bt Arbaiy", "Sabrina Tiun Abdullah", "Zamali Hj Tarmudi", "Norsida binti Hasan", "Shageetha Ramachandran", "Kamaruddin Mamat", "Norazlina Khamis", "Nor Liza Saad", "Siti Rozanae Ismail", "Siti Zaiton Mohd Hashim", "Mark Apperley", "Aba-Sah Dadzie", "Rohaya Latip", "Marina Ismail", "Nursuriati Jamil", "Siti Hajar Nasaruddin", "Anis Shahida Niza Mokhtar", "Norzilah Musa", "Qammer H Abbasi", "Mohamed Othman", "Bestoun S Ahmed", "Khairul Hamzani Bin Hamid", "Dror Feitelson", "Azizol Abdullah", "Ahmad Nur Azam", "Evi Indriasari Mansor", "Wan Hussain Wan Ishak", "Kamarularifin Abd Jalil"], "description": "Provides a listing of current committee members and society officers."}, {"title": "NO. 078 Higher-Order Model Checking", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:XD-gHx7UXLsC", "authors": ["Naoki Kobayashi", "Luke Ong", "Igor Walukiewicz"], "description": "Finite state model checking has been widely studied and successfully applied to system verification. The main theme of this meeting, higher-order model checking, is a generalization of finite state model checking, obtained by replacing finite state models with more expressive models called recursion schemes. Higher-order model checking has found applications in analysis of object-oriented and concurrent programs with recursion and higher-order procedures.\nRecursion schemes are a kind of simply-typed grammar for generating possibly infinite ranked trees. A recursion scheme is a finite system of equations, defining a finite set of higher-order functions by mutual recursion. The order of a recursion scheme is given by the highest type-theoretic order of the functions defined by it. From a programming language perspective, recursion schemes may be viewed as programs (ie closed, ground-type terms) of the simply-typed lambda calculus with recursion, constructed from a set of uninterpreted function symbols. Higher-order model checking is the model checking of trees generated by recursion schemes. The higher-order model checking problem asks, given a recursion scheme G and a correctness property \u03c6, whether the tree generated by G satisfies \u03c6."}, {"title": "Call for Nominations", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:z_wVstp3MssC", "authors": ["Victor Vianu", "Krzysztof R Apt", "Patricia Bouyer-Decitre", "Tom Henzinger", "Luke Ong", "Prakash Panangaden"], "description": "The term of the current Editor-in-Chief (EiC) of the ACM Transactions on Computational Logic (TOCL) is coming to an end, and the ACM Publications Board has set up a nominating committee to assist the Board in selecting the next EiC. TOCL was established in 2000 and has been experiencing steady growth, with 74 submissions received in 2014."}, {"title": "LIC 2015 Conference Organization", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:uJ-U7cs_P_0C", "authors": ["Luke Ong", "Patricia Bouyer-Decitre", "Andrzej Murawski", "Catuscia Palamidessi", "Pablo Barcel\u00f3", "Gilles Barthe", "Andrej Bauer", "Lev Beklemishev", "Adam Chlipala", "Agata Ciabattoni", "Veronique Cortier", "Pedro D\u2019Argenio", "Anuj Dawar", "Mariangiola Dezani", "Yuxi Fu", "Rob van Glabbeek", "Ichiro Hasuo", "Martin Hofmann", "Delia Kesner", "Barbara K\u00f6nig", "Laura Kov\u00e1cs", "Dexter Kozen", "Manfred Kufleitner", "Anthony W Lin", "Simone Martini", "Madhavan Mukund", "Filip Murlak", "Gopalan Nadathur", "Frank Pfenning", "Ian Pratt-Hartmann", "Albert Rubio", "Peter Selinger", "Alessandra Silva", "Tachio Terauchi", "Bow-Yaw Wang"], "description": "Provides a listing of current committee members and society officers."}, {"title": "LOGIC IN COMPUTER SCIENCE (LICS 2003)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:ye4kPcJQO24C", "authors": ["Phokion G Kolaitis", "Michael Benedikt", "Andreas R Blass", "Maria Luisa Bonet", "Witold Charatonik", "Marcelo Fiore", "Giorgio Ghelli", "Thomas A Henzinger", "Alan Jeffrey", "Assaf J Kfoury", "Orna Kupferman", "Ursula Martin", "Paul-Andr\u00e9 Mellies", "Eugenio Moggi", "Ugo Montanari", "Paliath Narendran", "Luke Ong", "Martin Otto", "Frank Pfenning", "Mirek Truszczynski", "Amy Felty", "Philip Scott"], "description": "LOGIC IN COMPUTER SCIENCE (LICS 2003) Page 1 CALL FOR PAPERS Eighteenth Annual IEEE Symposium on LOGIC IN COMPUTER SCIENCE (LICS 2003) June 22nd \u2013 25th, 2003, Ottawa, Canada http://www.lfcs.informatics.ed.ac.uk/lics/ Program Chair: Phokion G. Kolaitis Computer Science Department University of California, Santa Cruz Santa Cruz, CA 95064 USA Email: kolaitis@cs.ucsc.edu Phone: + 1 831 459 4768 Fax: + 1 831 459 4829 Program Committee: Michael Benedikt, Bell Laboratories Andreas R. Blass, U. of Michigan Maria Luisa Bonet, UPC, Barcelona Witold Charatonik, U. of Wroclaw Marcelo Fiore, U. of Cambridge Giorgio Ghelli, U. di Pisa Thomas A. Henzinger, UC Berkeley Alan Jeffrey, DePaul U. Assaf J. Kfoury, Boston U. Phokion G. Kolaitis, UC Santa Cruz Orna Kupferman, Hebrew U. Ursula Martin, U. of St Andrews Paul-Andr\u00e9 Melli`es, CNRS & U. Paris 7 Eugenio Moggi, U. di Genova \u2026"}, {"title": "of Software Science and Computational Structures", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:Y5dfb0dijaUC", "authors": ["Luke Ong"], "description": "This volume contains the proceedings of the 13th International Conference on the Foundations of Software Science and Computational Structures (FoSSaCS) 2010, held in Paphos, Cyprus, 20\u201328 March 2010. FoSSaCS is an event of the Joint European Conferences on Theory and Practice of Software (ETAPS). The previous 12 FoSSaCS conferences took place in Lisbon (1998), Amsterdam (1999), Berlin (2000), Genoa (2001), Grenoble (2002), Warsaw (2003), Barcelona (2004), Edinburgh (2005), Vienna (2006), Braga (2007), Budapest (2008) and York (2009). FoSSaCS presents original papers on the foundations of software science. The Programme Committee (PC) invited submissions on theories and methods to support analysis, synthesis, transformation and verification of programs and software systems.\nWe received 110 abstracts and 86 full paper submissions; of these, 25 were selected for presentation at \u2026"}, {"title": "Computation, Logic, Games, and Quantum Foundations", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:eMMeJKvmdy0C", "authors": ["Bob Coecke", "Luke Ong", "Prakash Panangaden"], "description": "When one encounters Samson Abramsky it is hard to believe that he is 60, but when one attempts to survey his work it is equally hard to believe that he is only 60! The three editors of this volume have known Samson for a long time, the last two since the mid-1980s and the first since the early years of this century. In that period Samson\u2019s interests have undergone a number of striking changes. The papers in this volume reflect this variety and give some indication of the depth of his contributions in these areas. His first publication in 1982 was on programming distributed systems; a surprise perhaps for all those who know him as an outstanding theoretician but a good indication of why his theoretical work has been grounded in computational practice. The third editor was struggling to understand the semantics of nondeterministic dataflow networks in 1983 when he encountered a paper called \u201cSemantic Foundations \u2026"}, {"title": "Typed Lambda Calculi and Applications", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:Mojj43d5GZwC", "authors": ["Luke Ong"], "description": "This volume contains the papers of the 10th International Conference on Typed Lambda Calculi and Applications (TLCA 2011), which was held during 1-3 June 2011, in Novi Sad, Serbia. The Conference was part of the 6th International Conference on Rewriting, Deduction, and Programming (RDP 2011), together with the 22nd International Conference on Rewriting Techniques and Applications (RTA 2011), the 10th International Workshop on Reduction Strategies in Rewriting and Programming (WRS 2011), the Workshop on Compilers by Rewriting, Automated (COBRA 2011), the Workshop on Theory and Practice of Delimited Continuations (TPDC 2011), the Workshop on the Two Faces of Complexity (2FC 2011), and the annual meeting of the IFIP Working Group 1.6 on Term Rewriting.\nThe TLCA series of conferences serves as a forum for presenting original research results that are broadly relevant to the \u2026"}, {"title": "TASE 2011 Programme Committee Members", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:t6usbXjVLHcC", "authors": ["Ahmed Bouajjani", "Luis Caires", "Radu Calinescu", "Gilles Dowek", "Zhenhua Duan", "Javier Esparza", "Einar Broch Johnsen", "Ying Jiang", "Daniel Kroening", "Hanna Klaudel", "Xinxin Liu", "Jing Liu", "Shaoying Liu", "Huaikou Miao", "Rupak Majumdar", "Flemming Nielson", "Luke Ong", "Shengchao Qin", "Zongyan Qiu", "Martin Steffen", "Weizhong Shao", "Cong Tian", "Yih-Kuen Tsay", "Helmut Veith", "Hanpin Wang", "Jinyun Xue", "Lichen Zhang", "Hong Zhu", "Huibiao Zhu", "Wenhui Zhang"], "description": "Programme Committee Toggle navigation IEEE Computer Society Digital Library Jobs Tech News Resource Center Press Room Advertising About Us IEEE IEEE Computer Society IEEE Computer Society Digital Library My Subscriptions Magazines Journals Conference Proceedings Institutional Subscriptions IEEE IEEE Computer Society More Jobs Tech News Resource Center Press Room Advertising About Us Cart All Advanced Search Conference Cover Image Download 1.Home 2.Proceedings 3.tase 2011 Programme Committee 2011, pp. x, DOI Bookmark: 10.1109/TASE.2011.5 Keywords Authors TASE 2011 Programme Committee Members Ahmed Bouajjani, Universite Paris Diderot, France Luis Caires, Universidade Nova de Lisboa, Portugal Radu Calinescu, Aston University, UK Gilles Dowek, Ecole Polytechnique, Paris Zhenhua Duan, Xidian University, China Javier Esparza, Technische Universitat \u2026"}, {"title": "Fifth International Conference on Theoretical Aspects of Software Engineering", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:5ugPr518TE4C", "authors": ["Zhenhua Duan", "Luke Ong"], "description": "Conference proceedings title page."}, {"title": "Recursion Schemes, Games, and Model Checking of Higher-Order Computation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:1qzjygNMrQYC", "authors": ["Luke Ong"], "description": "Recursion Schemes, Games, and Model Checking of Higher-Order Computation Page 1 Recursion Schemes, Games, and Model Checking of Higher-Order Computation Luke Ong Oxford University Computing Laboratory Ecole de Printemps d\u2019Informatique Th\u00e9orique, 23-27 May 2011 Luke Ong (University of Oxford) Recursion Schemes and Games 23-27 May 2011, EPIT 1 / 80 Page 2 Model checking and computer-aided verification Beginning in the 80s, computer-aided verification (notably model checking) of finite-state systems (eg hardware and communication protocols) has been a great success story in computer science. Clarke, Emerson and Sifakis won the 2007 ACM Turing Award \u201cfor their r\u00f4le in developing model checking into a highly effective verification technology, widely adopted in hardware and software industries\u201d. Focus of past decade: transfer of these techniques to software verification. Luke Ong (\u2026"}, {"title": "Higher-Order Model Checking", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:mvPsJ3kp5DgC", "authors": ["Luke Ong"], "description": "Trivial APT are APT with a single priority of 0.[Aehlig, LMCS 2007] Trivial acceptance condition: A tree is accepted just if there is a run-tree (ie state-annotation of nodes respecting the transition relation). Equi-expressive with the \u201csafety fragment\u201d of mu-calculus: \u03d5, \u03c8::= Pf| Z| \u03d5\u2228 \u03c8| \u03d5\u2227 \u03c8|\u2329 i\u232a \u03d5| \u03bdZ. \u03d5."}, {"title": "CSL 2005: computer science logic (Oxford, 22-25 August 2005)", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=100&pagesize=100&citation_for_view=gNFel3QAAAAJ:bFI3QPDXJZMC", "authors": ["Luke Ong"], "journal": "Lecture notes in computer science", "description": "CSL 2005 : computer science logic (Oxford, 22-25 August 2005) CNRS Inist Pascal-Francis CNRS Pascal and Francis Bibliographic Databases Simple search Advanced search Search by classification Search by vocabulary My Account Home > Search results Help Export Export Selection : Selected items (1) Format : Permanent link CopyPermanent link Copy http://pascal-francis.inist.fr/vibad/index.php?action=getRecordDetail&idt=17020109 CSL 2005 : computer science logic (Oxford, 22-25 August 2005) Author Ong, Luke (Editor) Conference name EACSL. Annual conference (14 ; Oxford 2005-08-22) = International workshop on computer science logic (19 ; Oxford 2005-08-22) Source Lecture notes in computer science. 2005 ; XI, 565 p ; Illustration ; ref : dissem., index ISSN 0302-9743 ISBN 3-540-28231-9 Scientific domain Computer science Publisher Springer, Berlin Publication country Germany Document type \u2026"}, {"title": "On model-checking trees generated by higher-order recursion", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=200&pagesize=100&citation_for_view=gNFel3QAAAAJ:J_g5lzvAfSwC", "authors": ["CHL Ong"], "description": "We prove that the modal mu-calculus model-checking problem for (ranked and ordered) nodelabelled trees that are generated by order-n recursion schemes (whether safe or not, and whether homogeneously typed or not) is n-EXPTIME complete, for every n\u2265 0. It follows that the monadic second-order theories of these trees are decidable. There are three major ingredients. The first is a certain transference principle from the tree generated by the scheme\u2013the value tree\u2013to an auxiliary computation tree, which is itself a tree generated by a related order-0 recursion scheme (equivalently, a regular tree). Using innocent game semantics (in the sense of Hyland and Ong), we establish a strong correspondence between paths in the value tree and traversals in the computation tree. This allows us to prove that a given alternating parity tree automaton (APT) has an (accepting) run-tree over the value tree iff it has an (accepting) traversal-tree over the computation tree. The second ingredient is the simulation of an (accepting) traversal-tree by a certain set of annotated paths over the computation tree; we introduce traversal-simulating APT as a recognising device for the latter. Finally, for the complexity result, we prove that traversal-simulating APT enjoy a succinctness property in the sense that for deciding acceptance, it is enough to consider run-trees that have a reduced branching factor. The desired bound is then obtained by analysing the complexity of solving an appropriate (finite) acceptance parity game (which is an appropriate product of the traversal-simulating APT and a finite deterministic graph that unfolds to the computation tree in question)."}, {"title": "Programming Research Group Research Report RR-04-23", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=200&pagesize=100&citation_for_view=gNFel3QAAAAJ:GnPB-g6toBAC", "authors": ["K Aehlig", "JG de Miranda", "CHL Ong"], "description": "Recent work by Knapik, Niwinski and Urzczyn [KNU02] has revived interest in the connexions between higher-order grammars and higher-order pushdown automata. Both devices can be viewed as definitions for term trees as well as string languages. In the latter setting we recall the extensive study by Damm [Dam82], and Damm and Goerdt [DG86]. There it was shown that the language of a level-n higher-order grammar is accepted by a level-n higher-order pushdown automaton subject to the restriction of derived types, more recent rebranded as safety. We show that at level 2, if a string language is generated by an unsafe grammar, there is a (level-2, non-deterministic) safe grammar that generates the same language. Thus safety is not a restriction for level-2 string languages."}, {"title": "A Notion of Game Composition and Incorporation", "url": "https://scholar.google.com/citations?view_op=view_citation&hl=en&user=gNFel3QAAAAJ&cstart=200&pagesize=100&citation_for_view=gNFel3QAAAAJ:hMod-77fHWUC", "authors": ["Y Xie", "CHL Ong"], "description": "In this paper, we investigate the relationship between the bilateral interactions and the overall effect from the perspective of Nash equilibrium in non-cooperative games. We propose the concept of game composition and decomposition for non-cooperative games, which allows the analysis of the Nash equilibrium of a global game to be broken down into the analysis of the Nash equilibria of local bilateral games and how these local Nash equilibria can lead to a global Nash equilibrium in a relationship which we call game incorporation. We seek composition methods that are sound (ie the method ensures a composition of local Nash equilibria to be a global one) and complete (ie any global Nash equilibrium can be constructed as a composition of local Nash equilibria). We consider two natural methods of composition, additive and multiplicative. We show that they are not sound in general, but by imposing some constraints which we call strictness conditions, we obtain much positive results."}]}