{"full_name": "Lam Siew Kei", "email": "assklam@ntu.edu.sg", "name_card": "Assoc Prof Lam Siew Kei", "image_path": "./data_source/profile_image/lam_siew_kei.jpg", "designations": ["Associate Professor, School of Computer Science and Engineering", "Assistant Chair (Admissions and Outreach), School of Computer Science and Engineering (SCSE)"], "biography": "Siew Kei received his BASc, MEng and PhD from School of Computer Engineering, NTU. He was a Visiting Research Fellow in the Imperial College of London, University of Warwick, and RWTH Aachen, Germany. He is currently an Associate Professor in School of Computer Science and Engineering (SCSE), NTU. His research investigates custom computing techniques to meet the challenging demands for performance, energy-efficiency, cost, reliability, and security in edge intelligence.", "keywords": ["Computer Science and Engineering", "Electrical and Electronic Engineering", "Hardware and Embedded Systems", "Computing Hardware and Architecture"], "grants": ["Configurable Side-Channel-Aware Program Obfuscation", "FL-SLAM: Federated Lifelong SLAM", "Never-Ending Deep Learning Agent for Non-stationary Data Streams", "Protecting Critical AI Assets for Edge Intelligence", "ROAD USER TRAJECTORY PREDICTION USING  ENHANCED SCENE CONTEXT", "Security, Reliability and Privacy of Modern Hardware Accelerators and Co-processors for Edge Implementation of Deep Learning Models", "Superfast-VO: FPGA-based Multicamera Visual Odometry"], "patents": [{"link": "https://patents.google.com/patent/US20200151305A1/en", "title": "US 2020/0151305 A1", "abstract": ": Methods and systems for obfuscating computer program code are disclosed. In an embodiment, a method of generating obfuscated binary code from input source code for execution on a target processor comprises: generating a set of random obfuscation transform selections; and iteratively optimizing the obfuscation transform selections until a termination criterion is met. The obfuscation transformation selections may comprise indications of custom instructions which are executable on the co-processor in order to reduce side channel leakage."}], "urls": {"dr_ntu": "https://dr.ntu.edu.sg/cris/rp/rp00901", "orcid": null, "personal": "https://personal.ntu.edu.sg/assklam/"}}